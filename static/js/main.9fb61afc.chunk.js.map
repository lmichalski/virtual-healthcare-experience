{"version":3,"sources":["fnt/Roboto-Regular.ttf","hooks/useLogGameEvent.tsx","util.ts","pages/Menu.tsx","hooks/useGameData.ts","pages/Objectives.tsx","pages/Intro.tsx","pages/Decision.tsx","pages/Video.tsx","pages/Credits.tsx","pages/Instructions.tsx","pages/Feedback.tsx","hooks/useStorage.ts","pages/Settings.tsx","pages/Summary.tsx","pages/Transition.tsx","pages/Materials.tsx","pages/Principles.tsx","hooks/useGameState.ts","clock/AnimatedClock.tsx","pages/Clock.tsx","App.tsx","reportWebVitals.ts","pages/Home.tsx","index.tsx"],"names":["LoggingContext","React","createContext","eventLog","pushEvent","event","this","push","LoggingContextProvider","props","Provider","value","useLogGameEvent","loggingContext","useContext","userUuid","undefined","useCallback","level","type","target","label","data","game","user","datetime","Date","console","log","useGotoMenu","history","useHistory","logGameEvent","game_id","useParams","concatenatePaths","first","second","replace","SentryRoute","Sentry","Route","Menu","startNewGame","resumeGame","gamesaved","strings","showPrinciples","pagesToShow","principles","className","title","onClick","id","defaultMessage","description","to","games","emergency","en","require","post_partum","fr","labor_delivery","prenatal","Objectives","paragraph1","paragraph2","bullet_list","map","list_item","Intro","useState","currentMessage","setCurrentMessage","intro","introCards","skipToNext","length","n","text","Decision","decisionPoint","onOptionChosen","gotoMenu","dp","message","array","result","i","j","Math","floor","random","temp","shuffleArray","options","randomizedOptions","optionBoxes","useMemo","opt","next","replayVideo","tabIndex","Video","onVideoFinished","videoposition","setVideoposition","subtitlesLanguage","onSubtitlesLanguageSet","location","useLocation","videoRef","useRef","iframeRef","skipVideo","time","video","vimeo_url","current","api","videojs","dispose","currentTime","useEffect","handleUserKeyPress","e","keyCode","preventDefault","pathname","goBack","paused","play","pause","window","addEventListener","removeEventListener","clip","bufferLength","sources","src","subtitles","kind","srclang","ready","on","duration","doc","document","getElementById","style","display","load","player","Player","setCurrentTime","off","seconds","language","togggleTracks","iframe","a","getTextTracks","tracks","track","find","enableTextTrack","disableTextTrack","ref","frameBorder","allow","allowFullScreen","Credits","paragraphs","credits_sections","end_paragraphs","paragraph","header","items","item","end_paragraph","Instructions","minSteps","Feedback","goNext","role","tagName","feedback","maxAge","isLocalStorageAvailable","str","localStorage","setItem","removeItem","cookies","put","key","maxCookieAge","cookie","get","cname","name","ca","decodeURIComponent","split","c","charAt","substring","indexOf","remove","VHEStorage","set","getItem","setObject","o","JSON","stringify","getObject","r","parse","Settings","subtitlesEnabled","onSubtitlesToggled","fullscreenElement","isFullscreen","setIsFullscreen","handleSubtitlesChange","evt","handleFullscreenChange","exitFullscreen","then","documentElement","requestFullscreen","catch","err","alert","locale","useIntl","handleSetEnglish","reload","handleSetFrench","checked","onChange","htmlFor","startsWith","INTL_MESSAGES","defineMessages","results","bestResult","incorrectOne","incorrectTwo","debriefOne","debriefTwo","debriefThree","gameReport","summary","yourAnswers","inProgressResults","downloadProgress","materialsLink","Roboto","default","Font","register","family","format","Summary","gameProgress","decisionPoints","completed","getFM","formatMessage","goToMenu","progress","option","question","answer","correct","filter","toFixed","question_count","fontWeight","origin","pdfContent","responses","color","fontFamily","fontSize","lineHeight","backgroundColor","paddingBottom","borderBottom","fileName","blob","url","loading","error","Transition","playNextVideo","Materials","content","href","download","Principles","useGameState","storageKey","loaded","uuid","d","getTime","performance","now","toString","generateUUID","setGamesaved","currentStep","setCurrentStep","setProgress","fullscreen","newGame","selectOption","nextId","ps","Clock","state","timerId","setInterval","setState","clearInterval","transform","getHours","getMinutes","getSeconds","Component","autoPlay","loop","App","gameId","useRouteMatch","path","gameData","Error","useGameData","gameState","decisionpoints","setSubtitlesEnabled","handleSubtitlesLanguageSet","lang","lastDecisionPoint","currentDecisionPoint","currentDP","handleStartNewGame","isIE","documentMode","opr","addons","opera","navigator","userAgent","InstallTrigger","test","HTMLElement","safari","pushNotification","StyleMedia","chrome","webstore","runtime","getBrowser","handleResumeGame","handleOptionChosen","handleVideoFinished","Object","entries","colors","forEach","body","setProperty","credits","instructions","materials","objectives","menu","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Home","languages","messages","frMessages","enMessages","dsn","integrations","Integrations","BrowserTracing","tracesSampleRate","ReactDOM","render","StrictMode","defaultLocale","basename","params","match"],"mappings":"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","file":"static/js/main.9fb61afc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Roboto-Regular.a8d6ac03.ttf\";","import React, { useCallback, useContext } from \"react\";\n\ninterface Event {\n  game: string;\n  level: string;\n  type: string;\n  target: string;\n  label?: string;\n  data?: string | number;\n  user?: string;\n  datetime: Date;\n}\n\nconst emptyLoggingContext = () => ({\n  eventLog: [] as Event[],\n  pushEvent(event: Event) {\n    this.eventLog.push(event);\n  },\n});\n\nconst LoggingContext = React.createContext(emptyLoggingContext());\n\nexport const LoggingContextProvider: React.FC = (props) => {\n  return <LoggingContext.Provider value={emptyLoggingContext()} {...props} />;\n};\n\nconst useLogGameEvent = () => {\n  const loggingContext = useContext(LoggingContext);\n  const userUuid = undefined; // useUser().uuid\n\n  function logGameEvent(\n    level: string,\n    type: string,\n    target: string,\n    label?: string,\n    data?: string | number\n  ) {\n    loggingContext.pushEvent({\n      game: \"app.name\",\n      level: level,\n      type: type,\n      target: target,\n      label: label,\n      data: data,\n      user: userUuid,\n      datetime: new Date(),\n    });\n\n    console.log(loggingContext.eventLog);\n  }\n\n  return useCallback(logGameEvent, [loggingContext, userUuid]);\n};\n\nexport default useLogGameEvent;\n","import * as Sentry from \"@sentry/react\";\nimport { Route } from \"react-router-dom\";\n\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { useParams } from \"react-router-dom\";\nimport useLogGameEvent from \"./hooks/useLogGameEvent\";\n\nexport function generateUUID(): string {\n  var r: string;\n  let d = new Date().getTime();\n  if (\n    typeof performance !== \"undefined\" &&\n    typeof performance.now === \"function\"\n  ) {\n    d += performance.now(); //use high-precision timer if available\n  }\n  r = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n    var r = (d + Math.random() * 16) % 16 | 0;\n    d = Math.floor(d / 16);\n    return (c === \"x\" ? r : (r & 0x3) | 0x8).toString(16);\n  });\n  return r;\n}\n\nexport const useGotoMenu = () => {\n  const history = useHistory();\n  const logGameEvent = useLogGameEvent();\n  const { game_id } = useParams<{ game_id: string }>();\n\n  const gotoMenu = useCallback(() => {\n    logGameEvent(\"\", \"open\", \"menu\", \"\", \"\");\n    history.push(`/games/${game_id}/`);\n  }, [history, logGameEvent, game_id]);\n  return gotoMenu;\n};\n\nexport function getBrowser() {\n  var browser, isIE;\n  // @ts-ignore\n  isIE = /*@cc_on!@*/ false || !!document.documentMode;\n\n  // @ts-ignore\n  if (\n    // @ts-ignore\n    (!!window.opr && !!opr.addons) ||\n    // @ts-ignore\n    !!window.opera ||\n    navigator.userAgent.indexOf(\" OPR/\") >= 0\n  ) {\n    browser = \"Opera\";\n\n    // @ts-ignore\n  } else if (typeof InstallTrigger !== \"undefined\") {\n    browser = \"Firefox\";\n    // @ts-ignore\n  } else if (\n    // @ts-ignore\n    /constructor/i.test(window.HTMLElement) ||\n    (function (p) {\n      return p.toString() === \"[object SafariRemoteNotification]\";\n    })(\n      // @ts-ignore\n      !window[\"safari\"] ||\n        // @ts-ignore\n        (typeof safari !== \"undefined\" && safari.pushNotification)\n    )\n  ) {\n    browser = \"Safari\";\n  } else if (isIE) {\n    browser = \"Internet Explorer\";\n    // @ts-ignore\n  } else if (!isIE && !!window.StyleMedia) {\n    browser = \"Edge\";\n    // @ts-ignore\n  } else if (\n    // @ts-ignore\n    !!window.chrome &&\n    // @ts-ignore\n    (!!window.chrome.webstore || !!window.chrome.runtime)\n  ) {\n    browser = \"Chrome\";\n  } else {\n    browser = \"Unknown browser\";\n  }\n  return browser;\n}\n\nexport const shuffleArray = <T>(array: T[]): T[] => {\n  let result = [...array];\n  for (let i = result.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = result[i];\n    result[i] = result[j];\n    result[j] = temp;\n  }\n  return result;\n};\n// Conctatenate two path strings, stripping excess /'s at the seam\nexport const concatenatePaths = (first: string, second: string): string =>\n  `${first.replace(/\\/*$/, \"\")}/${second.replace(/^\\/*/, \"\")}`;\n\nexport const SentryRoute = Sentry.withSentryRouting(Route);\n","import { FormattedMessage } from \"react-intl\";\nimport { Link, useParams } from \"react-router-dom\";\nimport \"./Menu.scss\";\n\ninterface iProps {\n  startNewGame: () => void;\n  resumeGame: () => void;\n  gamesaved: boolean;\n  strings: {\n    title: string;\n  };\n  pagesToShow: {\n    principles: boolean;\n  };\n}\n\nconst Menu: React.FC<iProps> = ({\n  startNewGame,\n  resumeGame,\n  gamesaved,\n  strings,\n  pagesToShow: { principles: showPrinciples },\n}) => {\n  const { game_id } = useParams<{ game_id: string }>();\n\n  return (\n    <div className=\"container\">\n      <div className=\"panel menu\">\n        <header>\n          <h1>{strings.title}</h1>\n        </header>\n        <div className=\"main\">\n          <div className=\"content\">\n            <ul className=\"controls\">\n              <li>\n                <button className=\"Link\" onClick={startNewGame}>\n                  <FormattedMessage\n                    id=\"Menu.newGame\"\n                    defaultMessage=\"New Game\"\n                    description=\"New Game Button\"\n                  />\n                </button>\n              </li>\n              <li>\n                <button\n                  className={`Link ${gamesaved ? \"active\" : \"disabled\"}`}\n                  onClick={resumeGame}\n                >\n                  <FormattedMessage\n                    id=\"Menu.resumeGame\"\n                    defaultMessage=\"Resume Game\"\n                    description=\"Resume Game Button\"\n                  />\n                </button>\n              </li>\n              <li>\n                <Link to={`/games/${game_id}/objectives/`}>\n                  <FormattedMessage\n                    id=\"Menu.objectives\"\n                    defaultMessage=\"Learning Objectives\"\n                    description=\"Objectives Button\"\n                  />\n                </Link>\n              </li>\n              {showPrinciples ? (\n                <li>\n                  <Link to={`/games/${game_id}/principles/`}>\n                    <FormattedMessage\n                      id=\"Menu.principles\"\n                      defaultMessage=\"Essential Principles\"\n                      description=\"Principles Button\"\n                    />\n                  </Link>\n                </li>\n              ) : null}\n              <li>\n                <Link to={`/games/${game_id}/settings/`}>\n                  <FormattedMessage\n                    id=\"Menu.gameOptions\"\n                    defaultMessage=\"Settings\"\n                    description=\"Settings Button\"\n                  />\n                </Link>\n              </li>\n              <li>\n                <Link to={`/games/${game_id}/instructions/`}>\n                  <FormattedMessage\n                    id=\"Menu.instructions\"\n                    defaultMessage=\"How to Play\"\n                    description=\"How to Play Button\"\n                  />\n                </Link>\n              </li>\n              {/* <li>\n                <Link to={`/games/${game_id}/materials/`}>\n                  <FormattedMessage\n                    id=\"Menu.materials\"\n                    defaultMessage=\"Self-Assessment\"\n                    description=\"Link to self-assessment materials\"\n                  />\n                </Link>\n              </li> */}\n              <li>\n                <Link to={`/games/${game_id}/credits/`}>\n                  <FormattedMessage\n                    id=\"Menu.credits\"\n                    defaultMessage=\"Credits\"\n                    description=\"Credits Button\"\n                  />\n                </Link>\n              </li>\n              <li>\n                <Link to={`/games/`}>\n                  <FormattedMessage\n                    id=\"Menu.exit\"\n                    defaultMessage=\"Exit Game\"\n                    description=\"Exit Game Button\"\n                  />\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Menu;\n","import { useMemo } from \"react\";\n\nconst games: Record<string, Record<string, GameDataShape>> = {\n  emergency: {\n    en: require(\"../games/er_game_data.json\"),\n  },\n  post_partum: {\n    fr: require(\"../games/post_partum_fr.json\"),\n  },\n  labor_delivery: {\n    fr: require(\"../games/labor_delivery_fr.json\"),\n  },\n  prenatal: {\n    fr: require(\"../games/prenatal_fr.json\"),\n  },\n};\n\nexport interface DecisionPoint {\n  id: number;\n  title?: string;\n  type: string; //\"video\" | \"string\",\n  data: string;\n\n  video:\n    | {\n        vimeo_url: string;\n        videojs_url?: string;\n      }\n    | {\n        vimeo_url?: string;\n        videojs_url: string;\n      }\n    | null;\n\n  correct: boolean;\n  feedback: string;\n  message: string;\n  options: {\n    label: string;\n    next: number;\n  }[];\n  next: null;\n}\n\ninterface GameDataShape {\n  decisionpoints: DecisionPoint[];\n  colors: {\n    \"--theme-light\": string;\n    \"--theme-dark\": string;\n    \"--theme-primary\": string;\n    \"--primary-text-color\": string;\n    \"--link-color\": string;\n  };\n  strings: {\n    menu: {\n      title: string;\n    };\n    intro: {\n      introCards: string[];\n    };\n    objectives: {\n      paragraph1: string;\n      paragraph2: string;\n      bullet_list: string[];\n    };\n    principles?: {\n      paragraph: string;\n      bullet_list: string[];\n    };\n    instructions: {\n      paragraph: string;\n      bullet_list: string[];\n    };\n    credits: {\n      paragraphs: string[];\n      credits_sections: {\n        header: string;\n        items: string[];\n      }[];\n      end_paragraphs: string[];\n    };\n    materials: {\n      content: {\n        label: string;\n        item: string;\n      }[];\n    };\n  };\n}\n\nexport const useGameData = (game: string, locale: string): GameDataShape => {\n  const data = useMemo(\n    () => games[game]?.[locale] || games[game]?.[\"en\"] || games[game]?.[\"fr\"],\n    [game, locale]\n  );\n  console.log(data);\n  if (!data) {\n    throw new Error(\"That game could not be found\");\n  }\n  return data;\n};\n","import { FormattedMessage } from \"react-intl\";\nimport { Link } from \"react-router-dom\";\nimport \"./Objectives.scss\";\n\ninterface iProps {\n  strings: {\n    paragraph1: string;\n    paragraph2: string;\n    bullet_list: string[];\n  };\n}\n\nconst Objectives: React.FC<iProps> = ({ strings }) => {\n  return (\n    <div className=\"container\">\n      <div className=\"panel info\">\n        <header>\n          <h1>\n            <Link to=\"../\" aria-label=\"Return to menu\">\n              <span className=\"icon-arrow-left\"></span>\n            </Link>\n            <FormattedMessage\n              id=\"Objectives.title\"\n              defaultMessage=\"Learning Objectives\"\n              description=\"Learning Objectives title\"\n            />\n          </h1>\n        </header>\n        <div className=\"main\">\n          <div className=\"content cf\">\n            <p>{strings.paragraph1}</p>\n            <p>{strings.paragraph2}</p>\n            <ul>\n              {strings.bullet_list.map((list_item) => (\n                <li>{list_item}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Objectives;\n","import { useCallback, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport \"./Intro.scss\";\n\ninterface iProps {\n  strings: {\n    introCards: string[];\n  };\n}\n\nconst Intro: React.FC<iProps> = ({ strings }) => {\n  const history = useHistory();\n  const { game_id } = useParams<{ game_id: string }>();\n  const label = \"Next\";\n\n  const [currentMessage, setCurrentMessage] = useState(0);\n  const intro = strings.introCards;\n\n  const skipToNext = useCallback(() => {\n    if (currentMessage < intro.length - 1) {\n      setCurrentMessage((n) => n + 1);\n    } else {\n      history.push(`/games/${game_id}/video/`);\n    }\n  }, [currentMessage, history, intro.length, game_id]);\n\n  const text = intro[currentMessage];\n\n  return (\n    <div className=\"container\">\n      <div className=\"panel intro\">\n        <div className=\"main\">\n          <div className=\"intro-content\">{text}</div>\n        </div>\n        <footer>\n          <p className=\"controls\">\n            <button className=\"button\" onClick={skipToNext}>\n              {label}\n            </button>\n          </p>\n        </footer>\n      </div>\n    </div>\n  );\n};\n\nexport default Intro;\n","import { useCallback, useMemo, useState } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { DecisionPoint } from \"../hooks/useGameData\";\nimport useLogGameEvent from \"../hooks/useLogGameEvent\";\nimport { shuffleArray, useGotoMenu } from \"../util\";\nimport \"./Decision.scss\";\n\ninterface iProps {\n  decisionPoint: DecisionPoint;\n  onOptionChosen: (option: number, label: string) => void;\n}\n\nconst Decision: React.FC<iProps> = ({ decisionPoint, onOptionChosen }) => {\n  const history = useHistory();\n  const { game_id } = useParams<{ game_id: string }>();\n\n  const logGameEvent = useLogGameEvent();\n  const gotoMenu = useGotoMenu();\n\n  const dp = decisionPoint;\n\n  logGameEvent(\"\", \"show\", \"question\", dp.message, \"\");\n\n  const [randomizedOptions] = useState(shuffleArray(dp.options)); // TODO shuffle these\n\n  const optionBoxes = useMemo(() => {\n    return randomizedOptions.map((opt) => {\n      const chooseOption = () => onOptionChosen(opt.next, opt.label);\n\n      return (\n        <li\n          key={opt.label}\n          className=\"option\"\n          ng-repeat=\"opt in randomizedOptions\"\n        >\n          <button onClick={chooseOption}>{opt.label}</button>\n        </li>\n      );\n    });\n  }, [randomizedOptions, onOptionChosen]);\n\n  const replayVideo = useCallback(() => {\n    /*gtag('event', 'video_replayed', {\n      'event_category': 'video',\n      'event_label': $scope.dp.data,\n      'value': $scope.dp.id\n    });*/\n    logGameEvent(\"\", \"replay\", \"video\", dp.data, dp.id);\n    history.push(`/games/${game_id}/video`);\n  }, [dp.data, dp.id, history, logGameEvent, game_id]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"left controls\">\n        <button className=\"button button--menu\" onClick={replayVideo}>\n          <FormattedMessage\n            id=\"General.replay\"\n            defaultMessage=\"Replay\"\n            description=\"Replay Video Button\"\n          />\n        </button>\n      </div>\n      <div className=\"right controls\">\n        <button className=\"button button--menu\" onClick={gotoMenu}>\n          <FormattedMessage\n            id=\"General.menu\"\n            defaultMessage=\"Menu\"\n            description=\"Go To Menu Button\"\n          />\n        </button>\n      </div>\n      <div className=\"question\" tabIndex={0}>\n        <div className=\"vertical_outer\">\n          <div className=\"vertical_inner\">{dp?.message}</div>\n        </div>\n      </div>\n      <ul className=\"option_box cf\">{optionBoxes}</ul>\n    </div>\n  );\n};\n\nexport default Decision;\n","import { useEffect, useCallback, useRef } from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport videojs from \"video.js\";\nimport Player from \"@vimeo/player\";\n\nimport { DecisionPoint } from \"../hooks/useGameData\";\n\nimport \"./Video.scss\";\nimport useLogGameEvent from \"../hooks/useLogGameEvent\";\nimport { FormattedMessage } from \"react-intl\";\nimport { useGotoMenu } from \"../util\";\n\ninterface iProps {\n  decisionPoint: DecisionPoint;\n  onVideoFinished: () => void;\n  videoposition: number;\n  setVideoposition: (t: number) => void;\n  subtitlesLanguage: string | null;\n  onSubtitlesLanguageSet: (lang: string | null) => void;\n}\n\nconst Video: React.FC<iProps> = ({\n  decisionPoint: dp,\n  onVideoFinished,\n  videoposition,\n  setVideoposition,\n  subtitlesLanguage,\n  onSubtitlesLanguageSet,\n}) => {\n  const location = useLocation();\n  const history = useHistory();\n  const logGameEvent = useLogGameEvent();\n\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const iframeRef = useRef<HTMLIFrameElement>(null);\n  const gotoMenu = useGotoMenu();\n\n  const skipVideo = useCallback(() => {\n    let time = undefined;\n\n    if (dp?.video?.vimeo_url) {\n    } else if (videoRef.current) {\n      var api = videojs(videoRef.current);\n      api.dispose();\n      time = api?.currentTime();\n    }\n\n    onVideoFinished();\n    logGameEvent(\"\", \"skip\", \"video\", dp?.data, time);\n  }, [dp, logGameEvent, onVideoFinished]);\n\n  useEffect(() => {\n    if (dp && !dp?.video?.vimeo_url) skipVideo();\n  }, [dp, skipVideo]);\n\n  useEffect(() => {\n    const handleUserKeyPress = (e: KeyboardEvent) => {\n      const video = videoRef.current;\n      if (video) {\n        var api = videojs(video);\n        switch (e.keyCode) {\n          case 27:\n            e.preventDefault();\n            if (location.pathname !== \"/\") {\n              if (api && typeof api.currentTime() != \"undefined\") {\n                setVideoposition(api.currentTime());\n              }\n              history.push(`/`);\n            } else {\n              history.goBack();\n            }\n            break;\n          case 32:\n            e.preventDefault();\n            if (api) {\n              if (api.paused()) {\n                api.play();\n              } else {\n                api.pause();\n              }\n            }\n            break;\n          case 33:\n            if (api) {\n              api.currentTime(api.currentTime() - 10);\n              api.play();\n            }\n            break;\n          case 34:\n            if (api) {\n              api.currentTime(api.currentTime() + 10);\n              api.play();\n            }\n            break;\n          default:\n            break;\n        }\n      }\n    };\n    window.addEventListener(\"keydown\", handleUserKeyPress);\n    return () => {\n      window.removeEventListener(\"keydown\", handleUserKeyPress);\n    };\n  }, [history, location.pathname, setVideoposition]);\n\n  useEffect(() => {\n    if (videoRef.current && dp) {\n      const api = videojs(videoRef.current);\n      const clip = {\n        bufferLength: 0,\n        sources: [\n          {\n            type: \"video/mp4\",\n            src: \"_/vid/mp4/\" + dp?.data + \".mp4\",\n          },\n        ],\n        subtitles: [\n          {\n            kind: \"subtitles\",\n            srclang: \"en\",\n            label: \"English\",\n            src: \"_/vid/vtt/en/\" + dp?.data + \".vtt\",\n          },\n        ],\n      };\n      console.log(\"video source\", clip.sources[0].src);\n\n      api.src(clip.sources[0].src);\n\n      // @ts-ignore\n      api.ready((api): void => {\n        if (videoposition > 0) {\n          api.currentTime(videoposition);\n        }\n        api?.play();\n        logGameEvent(\"\", \"start\", \"video\", dp?.data, \"\");\n      });\n\n      api.on(\"progress\", function (e: unknown) {\n        setVideoposition(api.currentTime());\n      });\n\n      api.on(\"pause\", function (e: unknown) {\n        if (api.duration() > api.currentTime() + 0.5) {\n          logGameEvent(\"\", \"pause\", \"video\", dp?.data, api.currentTime());\n        }\n      });\n\n      api.on(\"click\", function togglePause() {\n        var doc = document.getElementById(\"pause\");\n\n        if (api.paused()) {\n          if (doc) {\n            doc.style.display = \"none\";\n          }\n          api.play();\n        } else {\n          if (doc) {\n            doc.style.display = \"block\";\n          }\n          api.pause();\n        }\n      });\n\n      //@ts-ignore\n      api.on(\"ended\", function (e) {\n        skipVideo();\n        logGameEvent(\"\", \"finish\", \"video\", dp?.data, \"\");\n      });\n\n      //@ts-ignore\n      api.on(\"error\", function (e) {\n        console.log(e);\n        logGameEvent(\"\", \"error\", \"video\", dp?.data, \"\");\n      });\n\n      api.load();\n    }\n  }, [dp, skipVideo, logGameEvent, setVideoposition, videoposition]);\n\n  useEffect(() => {\n    if (iframeRef.current) {\n      console.log(\"Setting vimeo listeners\");\n\n      const player = new Player(iframeRef.current);\n      player.on(\"loaded\", () => {\n        player.setCurrentTime(videoposition);\n      });\n      return () => player.off(\"loaded\");\n    }\n    // Disable exhaustive deps so this hook only gets called on initial render\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (iframeRef.current) {\n      console.log(\"Setting vimeo listeners\");\n\n      const player = new Player(iframeRef.current);\n      player.on(\"timeupdate\", (data: { seconds: number }) => {\n        console.log(`Progress ${data.seconds}`);\n        setVideoposition(data.seconds);\n      });\n\n      player.on(\"ended\", () => {\n        console.log(\"vimeo ended\");\n        skipVideo();\n        logGameEvent(\"\", \"finish\", \"video\", dp.data, \"\");\n      });\n\n      player.on(\"texttrackchange\", (data: { language: string | null }) => {\n        onSubtitlesLanguageSet(data.language);\n      });\n\n      return () => {\n        player.off(\"timeupdate\");\n        player.off(\"ended\");\n        player.off(\"texttrackchange\");\n      };\n    }\n  }, [\n    setVideoposition,\n    dp.data,\n    logGameEvent,\n    skipVideo,\n    onSubtitlesLanguageSet,\n  ]);\n\n  useEffect(() => {\n    const togggleTracks = async (iframe: HTMLIFrameElement) => {\n      const player = new Player(iframe);\n      if (subtitlesLanguage) {\n        const tracks = await player.getTextTracks();\n        const track =\n          tracks.find(({ language }) => language === subtitlesLanguage) ??\n          tracks[0];\n        if (track) player.enableTextTrack(track.language, track.kind);\n      } else {\n        return player.disableTextTrack();\n      }\n    };\n\n    if (iframeRef.current) {\n      togggleTracks(iframeRef.current);\n    }\n  }, [subtitlesLanguage]);\n\n  return (\n    <div className=\"video\">\n      <div className=\"right controls\">\n        <button className=\"button button--menu\" onClick={gotoMenu}>\n          <FormattedMessage\n            id=\"General.menu\"\n            defaultMessage=\"Menu\"\n            description=\"Go To Menu Button\"\n          />\n        </button>\n      </div>\n      <div id=\"player\" className=\"videoplayer functional\">\n        {dp?.video &&\n          (dp.video.vimeo_url ? (\n            <iframe\n              ref={iframeRef}\n              // style={{height: (iframeRef.current?.scrollWidth ?? 600) * 9/16}}\n              src={dp.video.vimeo_url + `?autoplay=1`}\n              frameBorder={0}\n              allow=\"autoplay; texttrack; fullscreen; picture-in-picture\"\n              allowFullScreen\n              title=\"SG4_DP1_0\"\n            ></iframe>\n          ) : (\n            <video\n              ref={videoRef}\n              id=\"vid-player\"\n              className=\"video-js vjs-big-play-centered\"\n            >\n              Please use a different browser\n            </video>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Video;\n","import { FormattedMessage } from \"react-intl\";\nimport { Link } from \"react-router-dom\";\nimport \"./Credits.scss\";\n\ninterface iProps {\n  strings: {\n    paragraphs: string[];\n    credits_sections: {\n      header: string;\n      items: string[];\n    }[];\n    end_paragraphs: string[];\n  };\n}\n\nconst Credits: React.FC<iProps> = ({\n  strings: { paragraphs, credits_sections, end_paragraphs },\n}) => {\n  return (\n    <div className=\"container\">\n      <div className=\"panel credits\">\n        <header>\n          <h1>\n            <Link to=\"../\" aria-label=\"Return to menu\">\n              <span className=\"icon-arrow-left\"></span>\n            </Link>\n            <FormattedMessage\n              id=\"Credits.title\"\n              defaultMessage=\"Credits\"\n              description=\"credits title\"\n            />\n          </h1>\n        </header>\n        <div className=\"main\">\n          <div className=\"content cf\">\n            {paragraphs.map((paragraph) => (\n              <p>{paragraph}</p>\n            ))}\n            {credits_sections.map(({ header, items }) => (\n              <>\n                <h2>{header}</h2>\n                <ul>\n                  {items.map((item) => (\n                    <li>{item}</li>\n                  ))}\n                </ul>\n              </>\n            ))}\n            {end_paragraphs.map((end_paragraph) => (\n              <p>{end_paragraph}</p>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Credits;\n","import { FormattedMessage } from \"react-intl\";\nimport { Link } from \"react-router-dom\";\nimport \"./Instructions.scss\";\n\ninterface iProps {\n  minSteps: number;\n  strings: {\n    paragraph: string;\n    bullet_list: string[];\n  };\n}\n\nconst Instructions: React.FC<iProps> = ({ minSteps, strings }) => {\n  return (\n    <div className=\"container\">\n      <div className=\"panel info\">\n        <header>\n          <h1>\n            <Link to=\"../\" aria-label=\"Return to menu\">\n              <span className=\"icon-arrow-left\"></span>\n            </Link>{\" \"}\n            <FormattedMessage\n              id=\"Instructions.title\"\n              defaultMessage=\"How to Play\"\n              description=\"how to play title\"\n            />{\" \"}\n          </h1>\n        </header>\n        <div className=\"main\">\n          <div className=\"content cf\">\n            <p>{strings.paragraph}</p>\n            <ul>\n              {strings.bullet_list.map((list_item) => (\n                <li>{list_item}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Instructions;\n","import { useCallback } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { useHistory, useParams } from \"react-router\";\nimport { DecisionPoint } from \"../hooks/useGameData\";\nimport \"./Feedback.scss\";\n\ninterface iProps {\n  decisionPoint: DecisionPoint;\n}\n\nconst Feedback: React.FC<iProps> = ({ decisionPoint: dp }) => {\n  const history = useHistory();\n  const { game_id } = useParams<{ game_id: string }>();\n\n  const goNext = useCallback(() => {\n    switch (dp?.type) {\n      case \"video\":\n        history.push(`/games/${game_id}/decision/`);\n        break;\n      case \"lo\":\n        history.push(`/games/${game_id}/clock/`);\n        break;\n    }\n  }, [dp?.type, history, game_id]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"panel feedback\" role=\"alert\">\n        <header>\n          <FormattedMessage\n            id=\"Feedback.title\"\n            defaultMessage=\"Feedback\"\n            description=\"feedback title\"\n            tagName=\"h1\"\n          />\n        </header>\n        <div className=\"main\">{dp?.feedback}</div>\n        <footer>\n          <p className=\"controls\">\n            <button className=\"button\" onClick={goNext}>\n              <FormattedMessage\n                id=\"General.resume\"\n                defaultMessage=\"Resume Game\"\n                description=\"resume game button\"\n              />\n            </button>\n          </p>\n        </footer>\n      </div>\n    </div>\n  );\n};\n\nexport default Feedback;\n","//////////////////////////////////////////////////\n// Cookies + State, it's messy here\n//////////////////////////////////////////////////\n\nvar maxAge = 21 * 24 * 60;\n\nfunction isLocalStorageAvailable() {\n  var str = \"test\";\n  try {\n    localStorage.setItem(str, str);\n    localStorage.removeItem(str);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport const cookies = {\n  put(key: string, value: string, maxCookieAge: number = maxAge) {\n    var cookie = `${key}=${value};path=/;max-age=${maxCookieAge};`;\n    console.log(cookie);\n    document.cookie = cookie;\n  },\n  get(cname: string): string | null {\n    let name = cname + \"=\";\n    let decodedCookie = decodeURIComponent(document.cookie);\n    let ca = decodedCookie.split(\";\");\n    for (let i = 0; i < ca.length; i++) {\n      let c = ca[i];\n      while (c.charAt(0) === \" \") {\n        c = c.substring(1);\n      }\n      if (c.indexOf(name) === 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n    return null;\n  },\n  remove(key: string) {\n    this.put(key, \"\", -1);\n  },\n};\n\nexport const VHEStorage = {\n  set: function (key: string, value: string) {\n    if (isLocalStorageAvailable()) {\n      window.localStorage.setItem(key, value);\n    } else {\n      cookies.put(key, value, maxAge);\n    }\n  },\n  get: function (key: string): string | null {\n    var r = isLocalStorageAvailable()\n      ? window.localStorage.getItem(key)\n      : cookies.get(key);\n    return r;\n  },\n  setObject: function (key: string, value: any) {\n    const o = JSON.stringify(value);\n    if (isLocalStorageAvailable()) {\n      window.localStorage.setItem(key, o);\n    } else {\n      cookies.put(key, o, maxAge);\n    }\n  },\n  getObject: function (key: string) {\n    var r = isLocalStorageAvailable()\n      ? window.localStorage.getItem(key)\n      : cookies.get(key);\n    return r ? JSON.parse(r) : false;\n  },\n  remove: function (key: string) {\n    if (isLocalStorageAvailable()) {\n      window.localStorage.removeItem(key);\n    } else {\n      cookies.remove(key);\n    }\n  },\n};\n\nconst useStorage = () => {\n  return VHEStorage;\n};\n\nexport default useStorage;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Link } from \"react-router-dom\";\nimport { cookies } from \"../hooks/useStorage\";\nimport \"./Settings.scss\";\n\ninterface iProps {\n  subtitlesEnabled: boolean;\n  onSubtitlesToggled: (enabled: boolean) => void;\n}\n\nconst Settings: React.FC<iProps> = ({\n  subtitlesEnabled,\n  onSubtitlesToggled,\n}) => {\n  const [isFullscreen, setIsFullscreen] = useState<boolean>(\n    !!document.fullscreenElement\n  );\n\n  const handleSubtitlesChange = useCallback(\n    (evt: React.ChangeEvent<HTMLInputElement>) => {\n      onSubtitlesToggled(evt.target.value === \"on\");\n    },\n    [onSubtitlesToggled]\n  );\n\n  const handleFullscreenChange = useCallback(\n    (evt: React.ChangeEvent<HTMLInputElement>) => {\n      if (!document.fullscreenElement && evt.target.value === \"on\") {\n        document.documentElement\n          .requestFullscreen()\n          .then(() => setIsFullscreen(true))\n          .catch((err) => {\n            alert(\n              `Error attempting to enable full-screen mode: ${err.message} (${err.name})`\n            );\n          });\n      } else if (document.fullscreenElement && evt.target.value === \"off\") {\n        if (document.exitFullscreen) {\n          document.exitFullscreen().then(() => setIsFullscreen(false));\n        }\n      }\n    },\n    []\n  );\n\n  useEffect(() => {\n    const handleFullscreenChange = () => {\n      // document.fullscreenElement will point to the element that\n      // is in fullscreen mode if there is one. If there isn't one,\n      // the value of the property is null.\n      setIsFullscreen(!!document.fullscreenElement);\n      if (document.fullscreenElement) {\n        console.log(\n          `Element: ${document.fullscreenElement.id} entered full-screen mode.`\n        );\n      } else {\n        console.log(\"Leaving full-screen mode.\");\n      }\n    };\n    document.addEventListener(\"fullscreenchange\", handleFullscreenChange);\n\n    return () =>\n      document.removeEventListener(\"fullscreenchange\", handleFullscreenChange);\n  }, []);\n\n  const locale = useIntl().locale;\n  const handleSetEnglish = useCallback(() => {\n    cookies.put(\"locale\", \"en\");\n    document.location.reload();\n  }, []);\n  const handleSetFrench = useCallback(() => {\n    cookies.put(\"locale\", \"fr\");\n    document.location.reload();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <div className=\"panel settings\">\n        <header>\n          <h1>\n            <Link to=\"../\" aria-label=\"Return to menu\">\n              <span className=\"icon-arrow-left\"></span>\n            </Link>{\" \"}\n            Options\n          </h1>\n        </header>\n        <div className=\"main\">\n          <div className=\"content\">\n            <div className=\"cf\">\n              <h2>\n                <FormattedMessage\n                  id=\"Options.display\"\n                  defaultMessage=\"Display\"\n                  description=\"Display Header\"\n                />\n              </h2>\n              <div className=\"radio\">\n                <div>\n                  <input\n                    type=\"radio\"\n                    name=\"display_mode\"\n                    id=\"mode_window\"\n                    value=\"off\"\n                    checked={!isFullscreen}\n                    onChange={handleFullscreenChange}\n                  />\n                  <label htmlFor=\"mode_window\" aria-checked={!isFullscreen}>\n                    <FormattedMessage\n                      id=\"Options.windowed\"\n                      defaultMessage=\"Window\"\n                      description=\"windowed view option\"\n                    />\n                  </label>\n                </div>\n                <div>\n                  <input\n                    type=\"radio\"\n                    name=\"display_mode\"\n                    id=\"mode_fullscreen\"\n                    value=\"on\"\n                    checked={isFullscreen}\n                    onChange={handleFullscreenChange}\n                  />\n                  <label htmlFor=\"mode_fullscreen\" aria-checked={isFullscreen}>\n                    <FormattedMessage\n                      id=\"Options.full_screen\"\n                      defaultMessage=\"Full Screen\"\n                      description=\"full screen button\"\n                    />\n                  </label>\n                </div>\n              </div>\n            </div>\n            <br />\n            <div className=\"cf\">\n              <h2>\n                <FormattedMessage\n                  id=\"Options.subtitles\"\n                  defaultMessage=\"Subtitles\"\n                  description=\"subtitles button\"\n                />\n              </h2>\n              <div className=\"radio\">\n                <div>\n                  <input\n                    type=\"radio\"\n                    name=\"subtitles\"\n                    id=\"subtitles_off\"\n                    value=\"off\"\n                    checked={!subtitlesEnabled}\n                    onChange={handleSubtitlesChange}\n                  />\n                  <label\n                    htmlFor=\"subtitles_off\"\n                    aria-checked={!subtitlesEnabled}\n                  >\n                    <FormattedMessage\n                      id=\"Options.subtitles_off\"\n                      defaultMessage=\"Off\"\n                      description=\"subtitles off button\"\n                    />\n                  </label>\n                </div>\n                <div>\n                  <input\n                    type=\"radio\"\n                    name=\"subtitles\"\n                    id=\"subtitles_en\"\n                    value=\"on\"\n                    checked={subtitlesEnabled}\n                    onChange={handleSubtitlesChange}\n                  />\n                  <label htmlFor=\"subtitles_en\" aria-checked={subtitlesEnabled}>\n                    <FormattedMessage\n                      id=\"Options.subtitles_on\"\n                      defaultMessage=\"On\"\n                      description=\"subtitles on button\"\n                    />\n                  </label>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"cf\">\n              <h2>\n                <FormattedMessage\n                  id=\"Options.language\"\n                  defaultMessage=\"Language\"\n                  description=\"language options title\"\n                />\n              </h2>\n              <div className=\"radio\">\n                <div>\n                  <input\n                    type=\"radio\"\n                    name=\"english\"\n                    id=\"lang_en\"\n                    value=\"english\"\n                    checked={locale.startsWith(\"en\")}\n                    onChange={handleSetEnglish}\n                  />\n                  <label\n                    htmlFor=\"lang_en\"\n                    aria-checked={locale.startsWith(\"en\")}\n                  >\n                    <FormattedMessage\n                      id=\"Options.language_en\"\n                      defaultMessage=\"English\"\n                      description=\"english language button\"\n                    />\n                  </label>\n                </div>\n                <div>\n                  <input\n                    type=\"radio\"\n                    name=\"french\"\n                    id=\"lang_fr\"\n                    value=\"on\"\n                    checked={locale.startsWith(\"fr\")}\n                    onChange={handleSetFrench}\n                  />\n                  <label\n                    htmlFor=\"lang_fr\"\n                    aria-checked={locale.startsWith(\"fr\")}\n                  >\n                    <FormattedMessage\n                      id=\"Options.language_fr\"\n                      defaultMessage=\"French\"\n                      description=\"french language button\"\n                    />\n                  </label>\n                </div>\n              </div>\n            </div>\n\n            {/* <!--<br>\n\t\t\t\t<div className=\"cf\">\n\t\t\t\t\t<h2>Video Quality:</h2>\n\t\t\t\t\t<div className=\"radio\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<input type=\"radio\" name=\"quality\" id=\"quality_720p\"\n\t\t\t\t\t\t\t\tng-model=\"sg.quality\"\n\t\t\t\t\t\t\t\tng-value=\"'-720p'\"\n\t\t\t\t\t\t\t\tng-change=\"saveState()\"/> \n\t\t\t\t\t\t\t<label for=\"quality_720p\">High (720p)</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<input type=\"radio\" name=\"quality\" id=\"quality_360p\"\n\t\t\t\t\t\t\t\tng-model=\"sg.quality\"\n\t\t\t\t\t\t\t\tng-value=\"''\"\n\t\t\t\t\t\t\t\tng-change=\"saveState()\"/> \n\t\t\t\t\t\t\t<label for=\"quality_360p\">Low (360p)</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>--> */}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Settings;\n","import { useMemo } from \"react\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { useGotoMenu } from \"../util\";\nimport \"./Summary.scss\";\nimport {\n  PDFDownloadLink,\n  Document,\n  Page,\n  Text,\n  Link,\n  View,\n} from \"@react-pdf/renderer\";\nimport { Font } from \"@react-pdf/renderer\";\n\nimport { Link as Lonk } from \"react-router-dom\";\nimport useLogGameEvent from \"../hooks/useLogGameEvent\";\nimport { DecisionPoint } from \"../hooks/useGameData\";\nimport { defineMessages } from \"@formatjs/intl\";\n\nconst INTL_MESSAGES = defineMessages({\n  results: {\n    id: \"Summary.results\",\n    defaultMessage:\n      \"You have completed the game by answering {question_count} questions.\",\n    description: \"summary results\",\n  },\n  bestResult: {\n    id: \"Summary.best-result\",\n    defaultMessage:\n      \"You've demonstrated the best possible result! Now play it one more time to make sure it wasn't mere luck :)\",\n    description: \"best result sentence\",\n  },\n  incorrectOne: {\n    id: \"Summary.incorrect-one\",\n    defaultMessage:\n      \"However, if you give only correct answers it should only take\",\n    description: \"not the best result part one\",\n  },\n  incorrectTwo: {\n    id: \"Summary.incorrect-two\",\n    defaultMessage:\n      \"questions to complete the scenario. See if you can improve your results next time!\",\n    description: \"not the best result part two\",\n  },\n  debriefOne: {\n    id: \"Summary.debrief-one\",\n    defaultMessage:\n      \"If not attending an organized debrief, make sure you download and complete the\",\n    description: \"debrief sentence part one\",\n  },\n  debriefTwo: {\n    id: \"Summary.debrief-two\",\n    defaultMessage: \"self-debriefing questions\",\n    description: \"debrief sentence part two\",\n  },\n  debriefThree: {\n    id: \"Summary.debrief-three\",\n    defaultMessage:\n      \"to optimise your learning experience. Scroll down to view results.\",\n    description: \"debrief sentence part three\",\n  },\n  gameReport: {\n    id: \"Summary.game-report\",\n    defaultMessage: \"Game Report\",\n    description: \"game report title\",\n  },\n  summary: {\n    id: \"Summary.summary\",\n    defaultMessage: \"Summary\",\n    description: \"summary header\",\n  },\n  yourAnswers: {\n    id: \"Summary.your-answers\",\n    defaultMessage: \"Your Responses\",\n    description: \"your answers header title\",\n  },\n  inProgressResults: {\n    id: \"Summary.inProgressResults\",\n    defaultMessage:\n      \"You have answered {question_count} questions. To finish the game go to menu and resume the gameplay.\",\n    description:\n      \"The message to show players arriving at the summary page while their game isn't finished\",\n  },\n  downloadProgress: {\n    id: \"Summary.downloadProgress\",\n    defaultMessage: \"Download Progress Report\",\n    description: \"link to download progress report\",\n  },\n  materialsLink: {\n    id: \"Summary.materialsLink\",\n    defaultMessage: \"Practice Materials\",\n    description: \"link to download materials page\",\n  },\n});\n\nconst Roboto = require(\"../fnt/Roboto-Regular.ttf\").default as string;\n\nFont.register({\n  family: \"Roboto\",\n  format: \"truetype\",\n  src: Roboto,\n});\n\ninterface iProps {\n  decisionPoints: DecisionPoint[];\n  gameProgress: { id: number; label: string; option: number }[];\n  completed: boolean;\n}\n\nconst Summary: React.FC<iProps> = ({\n  gameProgress,\n  decisionPoints,\n  completed,\n}) => {\n  const logGameEvent = useLogGameEvent();\n  const { formatMessage: getFM } = useIntl();\n  // const [progress, setProgress] = useState([])\n\n  const goToMenu = useGotoMenu();\n\n  let progress: { question: string; answer: string; correct: boolean }[] =\n    useMemo(() => {\n      let progress = [];\n      var i;\n      for (i = 0; i < gameProgress.length; i++) {\n        const dp = gameProgress[i];\n        const current = decisionPoints.find(({ id }) => id === dp.id)!;\n        const next = decisionPoints.find(({ id }) => id === dp.option)!;\n\n        progress.push({\n          question: current.message,\n          answer: dp.label,\n          correct: next.correct,\n        });\n      }\n      return progress;\n    }, [decisionPoints, gameProgress]);\n\n  let message: JSX.Element;\n\n  if (completed) {\n    const correct_ratio = (\n      progress.filter(({ correct }) => correct).length / progress.length\n    ).toFixed(2);\n\n    logGameEvent(\"\", \"complete\", \"game\", \"\", correct_ratio);\n\n    message = (\n      <>\n        <Text>\n          {getFM(INTL_MESSAGES.results, {\n            question_count: (\n              <Text style={{ fontWeight: \"bold\" }}>\n                {\" \"}\n                {progress.length - 2}{\" \"}\n              </Text>\n            ),\n          })}{\" \"}\n        </Text>\n        {progress.length ===\n        decisionPoints.filter(({ correct }) => correct).length ? (\n          <Text> {getFM(INTL_MESSAGES.bestResult)} </Text>\n        ) : (\n          <Text>\n            {\" \"}\n            {getFM(INTL_MESSAGES.incorrectOne)}\n            <Text style={{ fontWeight: \"bold\" }}>\n              {\" \"}\n              {decisionPoints.filter(({ correct }) => correct).length - 2}\n            </Text>{\" \"}\n            {getFM(INTL_MESSAGES.incorrectTwo)}{\" \"}\n          </Text>\n        )}\n        {/* <Text>\n          Document this encounter by clicking on the practice documentation\n          icon. There you will find a blank documentation form. Once you are\n          done, compare your documentation to the sample provided.{\" \"}\n        </Text> */}\n        <Text>\n          {getFM(INTL_MESSAGES.debriefOne)}{\" \"}\n          <Link src={`${window.location.origin}/docs/self-assessment.pdf`}>\n            {getFM(INTL_MESSAGES.debriefTwo)}\n          </Link>{\" \"}\n          {getFM(INTL_MESSAGES.debriefThree)}\n        </Text>\n      </>\n    );\n  } else {\n    message = (\n      <Text>\n        {getFM(INTL_MESSAGES.inProgressResults, {\n          question_count: (\n            <Text style={{ fontWeight: \"bold\" }}> {progress.length} </Text>\n          ),\n        })}{\" \"}\n      </Text>\n    );\n  }\n\n  const pdfContent = useMemo(() => {\n    let responses = progress.map((dp, i) => (\n      <View key={i}>\n        <View>\n          <Text style={{ fontWeight: \"bold\" }}>Q: </Text>\n          <Text>{dp.question}</Text>\n        </View>\n        <View>\n          <Text style={{ fontWeight: \"bold\" }}>A: </Text>\n          <Text\n            style={dp.correct ? { color: \"#009933\" } : { color: \"#cc0000\" }}\n          >\n            {dp.answer} ({dp.correct ? \"Correct\" : \"Incorrect\"})\n          </Text>\n        </View>\n      </View>\n    ));\n    const html = (\n      <Document>\n        <Page>\n          {/* <style\n            dangerouslySetInnerHTML={{\n              __html: `html, body { font-family: Helvetica, Arial, sans-serif; font-size: 14px; line-height: 130%; background-color: #ffffff; color: #000;}\n\t\t\t\t\t\t\th1, h2, p, ol { font-weight: normal; margin-top: 0.3em; margin-bottom: 0.3em; padding-top: 0; padding-bottom: 0; line-height: 130%; color: #000; }`,\n            }}\n          /> */}\n          <View\n            style={{\n              fontFamily: \"Roboto\",\n              fontSize: 14,\n              lineHeight: \"130%\",\n              backgroundColor: \"#ffffff\",\n              color: \"#000\",\n            }}\n          >\n            <Text\n              style={{\n                fontSize: 32,\n                paddingBottom: \"0.3em\",\n                borderBottom: \"2px solid #000000\",\n              }}\n            >\n              {getFM(INTL_MESSAGES.gameReport)}\n            </Text>\n            <Text style={{ fontSize: 24 }}>{getFM(INTL_MESSAGES.summary)}</Text>\n            <View>{message}</View>\n            <Text style={{ fontSize: 24 }}>\n              {getFM(INTL_MESSAGES.yourAnswers)}\n            </Text>\n            <View>{responses}</View>\n          </View>\n        </Page>\n      </Document>\n    );\n    return html;\n  }, [message, progress, getFM]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"right controls\">\n        <button className=\"button button--menu\" onClick={goToMenu}>\n          Menu\n        </button>\n      </div>\n      <div className=\"panel info\">\n        <header>\n          <FormattedMessage\n            id=\"Summary.title\"\n            defaultMessage=\"Congratulations!\"\n            description=\"Summary title\"\n            tagName=\"h1\"\n          />\n        </header>\n        <div className=\"main summary\">\n          <div className=\"content\">\n            <div>{message}</div>\n            <h2 style={{ fontSize: 24 }}>\n              {getFM(INTL_MESSAGES.yourAnswers)}:\n            </h2>\n            <ol className=\"responses\">\n              {progress.map((dp) => (\n                <li>\n                  <div>{dp.question}</div>\n                  <div\n                    className={dp.correct ? \"correct\" : \"wrong\"}\n                    style={\n                      dp.correct ? { color: \"#009933\" } : { color: \"#cc0000\" }\n                    }\n                  >\n                    <strong>\n                      {dp.answer} ({dp.correct ? \"Correct\" : \"Incorrect\"})\n                    </strong>\n                  </div>\n                </li>\n              ))}\n            </ol>\n          </div>\n        </div>\n        <footer>\n          <PDFDownloadLink\n            className=\"button\"\n            document={pdfContent}\n            fileName=\"progress-report.pdf\"\n          >\n            {({ blob, url, loading, error }) =>\n              loading\n                ? \"Loading document...\"\n                : getFM(INTL_MESSAGES.downloadProgress)\n            }\n          </PDFDownloadLink>\n\n          <Lonk to=\"../materials/\">{getFM(INTL_MESSAGES.materialsLink)}</Lonk>\n\n          {/* <a href=\"/module/_/ui/game/tpl/materials.html\" className=\"button\">\n            {\" \"}\n            Practice Documentation{\" \"}\n          </a> */}\n        </footer>\n      </div>\n    </div>\n  );\n};\n\nexport default Summary;\n","import { useCallback } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { useHistory, useParams } from \"react-router\";\nimport { DecisionPoint } from \"../hooks/useGameData\";\nimport \"./Transition.scss\";\n\ninterface iProps {\n  decisionPoint: DecisionPoint;\n}\n\nconst Transition: React.FC<iProps> = ({ decisionPoint: dp }) => {\n  const history = useHistory();\n  const { game_id } = useParams<{ game_id: string }>();\n\n  const playNextVideo = useCallback(() => {\n    history.push(`/games/${game_id}/video/`);\n  }, [history, game_id]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"panel feedback\">\n        <header>\n          <FormattedMessage\n            id=\"Transition.title\"\n            defaultMessage=\"Game Paused\"\n            description=\"game paused transition title\"\n            tagName=\"h1\"\n          />\n        </header>\n        <div className=\"main\">{dp?.feedback}</div>\n        <footer>\n          <p className=\"controls\">\n            <button className=\"Link\" onClick={playNextVideo}>\n              Resume Game\n            </button>\n          </p>\n        </footer>\n      </div>\n    </div>\n  );\n};\n\nexport default Transition;\n","import { FormattedMessage } from \"react-intl\";\nimport { useGotoMenu } from \"../util\";\nimport \"./Materials.scss\";\n\ninterface iProps {\n  strings: {\n    content: {\n      label: string;\n      item: string;\n    }[];\n  };\n}\n\nconst Materials: React.FC<iProps> = ({ strings: { content } }) => {\n  const gotoMenu = useGotoMenu();\n\n  return (\n    <body className=\"documentation-container\">\n      <div className=\"panel feedback\">\n        <header>\n          <FormattedMessage\n            id=\"Materials.title\"\n            defaultMessage=\"Materials\"\n            description=\"Materials title\"\n            tagName=\"h1\"\n          />\n        </header>\n\n        <div className=\"right controls\">\n          <button className=\"button button--menu\" onClick={gotoMenu}>\n            <FormattedMessage\n              id=\"General.menu\"\n              defaultMessage=\"Menu\"\n              description=\"Go To Menu Button\"\n            />\n          </button>\n        </div>\n\n        <footer>\n          <div className=\"content\">\n            {content.map(({ label, item }) => (\n              <>\n                <ul>\n                  <a href={item} className=\"button\" download>\n                    {label}\n                  </a>\n                </ul>\n              </>\n            ))}\n          </div>\n        </footer>\n\n      </div>\n    </body>\n  );\n};\n\nexport default Materials;\n","import { FormattedMessage } from \"react-intl\";\nimport { Link } from \"react-router-dom\";\nimport \"./Principles.scss\";\n\ninterface iProps {\n  strings: {\n    paragraph: string;\n    bullet_list: string[];\n  };\n}\n\nconst Principles: React.FC<iProps> = ({ strings }) => {\n  return (\n    <div className=\"container\">\n      <div className=\"panel info\">\n        <header>\n          <h1>\n            <Link to=\"/\" aria-label=\"Return to menu\">\n              <span className=\"icon-arrow-left\"></span>\n            </Link>\n            <FormattedMessage\n              id=\"Principles.title\"\n              defaultMessage=\"Essential Principles\"\n              description=\"Principles title\"\n            />\n          </h1>\n        </header>\n        <div className=\"main\">\n          <div className=\"content cf\">\n            <p>{strings.paragraph}</p>\n            <ul>\n              {strings.bullet_list.map((list_item) => (\n                <li>{list_item}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Principles;\n","import { useEffect, useMemo, useState } from \"react\";\nimport { generateUUID } from \"../util\";\nimport { VHEStorage } from \"./useStorage\";\n\ninterface iGameSave {\n  uuid: string;\n  gamesaved: boolean;\n  subtitles: boolean;\n  fullscreen: boolean;\n  currentStep: number;\n  videoposition: number;\n  progress: {\n    id: number;\n    label: string;\n    option: number;\n  }[];\n}\n\nconst useGameState = (storageKey: string) => {\n  const [loaded] = useState(\n    VHEStorage.getObject(storageKey) as iGameSave | null\n  );\n\n  const [uuid] = useState(loaded?.uuid ?? generateUUID());\n  const [gamesaved, setGamesaved] = useState(loaded?.gamesaved ?? false);\n  const [currentStep, setCurrentStep] = useState(loaded?.currentStep ?? 0);\n  const [videoposition, setVideoposition] = useState(\n    loaded?.videoposition ?? 0\n  );\n  const [progress, setProgress] = useState(loaded?.progress ?? []);\n\n  useEffect(() => {\n    VHEStorage.setObject(storageKey, {\n      uuid,\n      gamesaved,\n      subtitles: false,\n      fullscreen: false,\n      currentStep,\n      videoposition,\n      progress,\n    });\n  }, [uuid, gamesaved, currentStep, videoposition, progress, storageKey]);\n\n  const gameState = useMemo(\n    () => ({\n      newGame: () => {\n        setGamesaved(true);\n        setCurrentStep(0);\n        setVideoposition(0);\n        setProgress([]);\n      },\n      selectOption: (nextId: number, label: string) => {\n        setProgress((ps) => [\n          ...ps,\n          {\n            id: currentStep,\n            label: label,\n            option: nextId,\n          },\n        ]);\n        setCurrentStep(nextId);\n      },\n      currentStep,\n      setCurrentStep,\n      videoposition,\n      setVideoposition,\n      progress,\n      gamesaved,\n    }),\n    [currentStep, gamesaved, progress, videoposition]\n  );\n\n  return gameState;\n};\n\nexport default useGameState;\n","// @ts-nocheck\n\nimport React, { Component } from \"react\";\nimport \"./AnimatedClock.scss\";\n\nexport default class Clock extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: new Date(),\n    };\n  }\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.setState({\n        time: new Date(),\n      });\n    }, 1000);\n  }\n\n  componentWillMount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <div className=\"clock\">\n        <div\n          className=\"hour_hand\"\n          style={{\n            transform: `rotateZ(${this.state.time.getHours() * 30}deg)`,\n          }}\n        />\n        <div\n          className=\"min_hand\"\n          style={{\n            transform: `rotateZ(${this.state.time.getMinutes() * 6}deg)`,\n          }}\n        />\n        <div\n          className=\"sec_hand\"\n          style={{\n            transform: `rotateZ(${this.state.time.getSeconds() * 6}deg)`,\n          }}\n        />\n        <span className=\"twelve\">12</span>\n        <span className=\"one\">1</span>\n        <span className=\"two\">2</span>\n        <span className=\"three\">3</span>\n        <span className=\"four\">4</span>\n        <span className=\"five\">5</span>\n        <span className=\"six\">6</span>\n        <span className=\"seven\">7</span>\n        <span className=\"eight\">8</span>\n        <span className=\"nine\">9</span>\n        <span className=\"ten\">10</span>\n        <span className=\"eleven\">11</span>\n      </div>\n    );\n  }\n}\n","import { FormattedMessage } from \"react-intl\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport AnimatedClock from \"../clock/AnimatedClock\";\nimport { useGotoMenu } from \"../util\";\nimport \"./Clock.scss\";\n\ninterface iProps {}\n\nconst Clock: React.FC<iProps> = () => {\n  const history = useHistory();\n  const { game_id } = useParams<{ game_id: string }>();\n\n  const gotoMenu = useGotoMenu();\n  const gotoDecision = () => history.push(`/games/${game_id}/decision/`);\n\n  return (\n    <div className=\"container Clock\">\n      <div className=\"panel menu\">\n        <div className=\"main\">\n          <FormattedMessage\n            id=\"Clock.header\"\n            defaultMessage=\"Take pulse and press Continue.\"\n            description=\"take pulse message\"\n            tagName=\"h2\"\n          />\n          <p className=\"warning\">\n            <FormattedMessage\n              id=\"Clock.warning\"\n              defaultMessage=\"Please note that for technical reasons this learning object can not\n              be made accessible. Contact your instructor if you need help.\"\n              description=\"warning about accesibility\"\n            />\n          </p>\n        </div>\n        <footer>\n          <p className=\"controls\">\n            <button onClick={gotoDecision} className=\"button\">\n              <FormattedMessage\n                id=\"Clock.continue\"\n                defaultMessage=\"Continue\"\n                description=\"continue button\"\n              />\n            </button>\n          </p>\n        </footer>\n      </div>\n      <div className=\"left controls\">\n        <button className=\"button button--menu\">\n          <FormattedMessage\n            id=\"General.replay\"\n            defaultMessage=\"Replay\"\n            description=\"Replay Video Button\"\n          />\n        </button>\n      </div>\n      <div className=\"right controls\">\n        <button className=\"button button--menu\" onClick={gotoMenu}>\n          <FormattedMessage\n            id=\"General.menu\"\n            defaultMessage=\"Menu\"\n            description=\"Go To Menu Button\"\n          />\n        </button>\n      </div>\n      <audio autoPlay loop src=\"/media/heart-beat.mp3\"></audio>\n      <AnimatedClock></AnimatedClock>\n    </div>\n  );\n};\n\nexport default Clock;\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\n\nimport { Switch, useHistory, useRouteMatch } from \"react-router-dom\";\nimport { SentryRoute as Route } from \"./util\";\nimport { useIntl } from \"react-intl\";\n\nimport Menu from \"./pages/Menu\";\nimport \"./App.scss\";\n\nimport { useGameData } from \"./hooks/useGameData\";\n\nimport Objectives from \"./pages/Objectives\";\nimport Intro from \"./pages/Intro\";\nimport Decision from \"./pages/Decision\";\nimport Video from \"./pages/Video\";\nimport Credits from \"./pages/Credits\";\nimport Instructions from \"./pages/Instructions\";\nimport Feedback from \"./pages/Feedback\";\nimport Settings from \"./pages/Settings\";\nimport Summary from \"./pages/Summary\";\nimport Transition from \"./pages/Transition\";\nimport Materials from \"./pages/Materials\";\nimport Principles from \"./pages/Principles\";\nimport useLogGameEvent from \"./hooks/useLogGameEvent\";\nimport { getBrowser, concatenatePaths } from \"./util\";\nimport useGameState from \"./hooks/useGameState\";\nimport Clock from \"./pages/Clock\";\n\ninterface iProps {\n  gameId: string;\n}\n\nconst App: React.FC<iProps> = ({ gameId }) => {\n  const history = useHistory();\n  let { path, url } = useRouteMatch();\n\n  const logGameEvent = useLogGameEvent();\n  const locale = useIntl().locale;\n\n  const gameData = useGameData(gameId, locale);\n  const gameState = useGameState(gameId);\n  const minSteps = gameData.decisionpoints.filter(\n    ({ correct }) => correct\n  ).length;\n\n  const [subtitlesEnabled, setSubtitlesEnabled] = useState<boolean>(true);\n  const handleSubtitlesLanguageSet = useCallback(\n    (lang) => setSubtitlesEnabled(!!lang),\n    []\n  );\n\n  const lastDecisionPoint =\n    gameData.decisionpoints[gameData.decisionpoints.length - 1].id ===\n    gameState.currentStep;\n\n  const currentDecisionPoint = useMemo(() => {\n    const currentDP = gameData.decisionpoints.find(\n      ({ id }) => id === gameState.currentStep\n    )!;\n    if (!currentDP)\n      console.error(`couldnt find dp for step${gameState.currentStep}`);\n    return currentDP;\n  }, [gameData.decisionpoints, gameState.currentStep]);\n\n  const handleStartNewGame = useCallback(() => {\n    gameState.newGame();\n\n    history.push(concatenatePaths(url, `/intro/`));\n    logGameEvent(\"\", \"start\", \"game\", getBrowser(), \"\");\n  }, [url, history, logGameEvent, gameState]);\n\n  const handleResumeGame = useCallback(() => {\n    var dp = currentDecisionPoint;\n\n    if (dp && lastDecisionPoint) {\n      history.push(concatenatePaths(url, `/summary/`));\n    } else if (gameState.videoposition > 0.1) {\n      history.push(concatenatePaths(url, `/video/`));\n    } else {\n      history.push(concatenatePaths(url, `/decision/`));\n    }\n\n    logGameEvent(\"\", \"resume\", \"game\", \"\", \"\");\n  }, [\n    history,\n    logGameEvent,\n    gameState.videoposition,\n    currentDecisionPoint,\n    lastDecisionPoint,\n    url,\n  ]);\n\n  const handleOptionChosen = useCallback(\n    (nextId: number, label: string) => {\n      const next = gameData.decisionpoints.find(({ id }) => id === nextId);\n\n      gameState.selectOption(nextId, label);\n\n      logGameEvent(\n        \"\",\n        \"select\",\n        \"answer\",\n        label,\n        next?.correct ? \"correct\" : \"incorrect\"\n      );\n\n      switch (next?.type) {\n        case \"video\":\n          history.push(concatenatePaths(url, `/video/`));\n          break;\n        case \"lo\":\n          if (next.feedback > \"\") {\n            // If there's feedback, show it then advance\n            history.push(concatenatePaths(url, `/feedback/`));\n          } else {\n            history.push(concatenatePaths(url, `/clock/`));\n          }\n          break;\n      }\n\n      // google analytics ???\n    },\n    [url, gameData.decisionpoints, history, logGameEvent, gameState]\n  );\n\n  const handleVideoFinished = useCallback(() => {\n    const dp = currentDecisionPoint;\n    gameState.setVideoposition(0);\n\n    if (lastDecisionPoint) {\n      history.push(concatenatePaths(url, `/summary/`));\n    } else if (dp && dp.options.length > 0) {\n      if (dp.feedback > \"\") {\n        history.push(concatenatePaths(url, `/feedback/`));\n      } else {\n        if (dp.type === \"lo\") {\n          history.push(concatenatePaths(url, `/clock/`));\n        } else {\n          // No feedback means go directly to the decision\n          history.push(concatenatePaths(url, `/decision/`));\n        }\n      }\n    } else {\n      gameState.setCurrentStep(gameState.currentStep + 1);\n      if (dp?.next) {\n        // If there are no options, go to the next decision point\n        history.push(concatenatePaths(url, `/clock/`));\n      } else {\n        history.push(concatenatePaths(url, `/transition/`));\n      }\n    }\n  }, [currentDecisionPoint, history, lastDecisionPoint, gameState, url]);\n\n  useEffect(() => {\n    Object.entries(gameData.colors).forEach(\n      ([key, value]: [string, string]) => {\n        document.body.style.setProperty(key, value);\n      }\n    );\n  }, [gameData.colors]);\n\n  return (\n    <div className=\"fullscreen\" style={gameData.colors as React.CSSProperties}>\n      <div className=\"view\" role=\"application\">\n        <Switch>\n          <Route path={concatenatePaths(path, `/credits`)}>\n            <Credits strings={gameData.strings.credits} />\n          </Route>\n\n          <Route path={concatenatePaths(path, `/decision`)}>\n            <Decision\n              decisionPoint={currentDecisionPoint}\n              onOptionChosen={handleOptionChosen}\n            />\n          </Route>\n\n          <Route path={concatenatePaths(path, `/feedback`)}>\n            <Feedback decisionPoint={currentDecisionPoint} />\n          </Route>\n\n          <Route path={concatenatePaths(path, `/instructions`)}>\n            <Instructions\n              minSteps={minSteps}\n              strings={gameData.strings.instructions}\n            />\n          </Route>\n\n          <Route path={concatenatePaths(path, `/intro`)}>\n            <Intro strings={gameData.strings.intro} />\n          </Route>\n\n          <Route path={concatenatePaths(path, `/materials`)}>\n            <Materials strings={gameData.strings.materials} />\n          </Route>\n\n          <Route path={concatenatePaths(path, `/objectives`)}>\n            <Objectives strings={gameData.strings.objectives} />\n          </Route>\n\n          {gameData.strings.principles ? (\n            <Route path={concatenatePaths(path, `/principles`)}>\n              <Principles strings={gameData.strings.principles} />\n            </Route>\n          ) : null}\n\n          <Route path={concatenatePaths(path, `/settings`)}>\n            <Settings\n              subtitlesEnabled={subtitlesEnabled}\n              onSubtitlesToggled={setSubtitlesEnabled}\n            />\n          </Route>\n\n          <Route path={concatenatePaths(path, `/summary`)}>\n            <Summary\n              decisionPoints={gameData.decisionpoints}\n              gameProgress={gameState.progress}\n              completed={lastDecisionPoint}\n            />\n          </Route>\n\n          <Route path={concatenatePaths(path, `/transition`)}>\n            <Transition decisionPoint={currentDecisionPoint} />\n          </Route>\n\n          <Route path={concatenatePaths(path, `/video`)}>\n            <Video\n              decisionPoint={currentDecisionPoint}\n              onVideoFinished={handleVideoFinished}\n              videoposition={gameState.videoposition}\n              setVideoposition={gameState.setVideoposition}\n              subtitlesLanguage={subtitlesEnabled ? locale : null}\n              onSubtitlesLanguageSet={handleSubtitlesLanguageSet}\n            />\n          </Route>\n\n          <Route path={concatenatePaths(path, `/clock`)}>\n            <Clock />\n          </Route>\n\n          <Route path={concatenatePaths(path, `/`)}>\n            <Menu\n              strings={gameData.strings.menu}\n              startNewGame={handleStartNewGame}\n              resumeGame={handleResumeGame}\n              gamesaved={gameState.gamesaved}\n              pagesToShow={{\n                principles: !!gameData.strings.principles,\n              }}\n            />\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { FormattedMessage } from \"react-intl\";\nimport { Link } from \"react-router-dom\";\nimport \"./Menu.scss\";\n\ninterface iProps {}\n\nconst Home: React.FC<iProps> = () => {\n  return (\n    <div className=\"container\">\n      <div className=\"panel menu\">\n        <header>\n          <FormattedMessage\n            id=\"Home.title\"\n            defaultMessage=\"Virtual Healthcare Experence\"\n            description=\"Title for homepage\"\n            tagName=\"h1\"\n          />\n        </header>\n        <div className=\"main\">\n          <div className=\"content\">\n            <ul className=\"controls\">\n              <li>\n                <Link to=\"/games/emergency\">\n                  <FormattedMessage\n                    id=\"Home.emergency\"\n                    defaultMessage=\"Emergency Room\"\n                    description=\"Name for emergency game\"\n                  />\n                </Link>\n              </li>\n              <li>\n                <Link to=\"/games/post_partum\">\n                  <FormattedMessage\n                    id=\"Home.postPartum_fr\"\n                    defaultMessage=\"Post Partum FR\"\n                    description=\"Post Partum Francais game name\"\n                  />\n                </Link>\n              </li>\n              <li>\n                <Link to=\"/games/labor_delivery\">\n                  <FormattedMessage\n                    id=\"Home.labor_delivery_fr\"\n                    defaultMessage=\"Labour and Delivery FR\"\n                    description=\"Labour and Delivery Francais game name\"\n                  />\n                </Link>\n              </li>\n              <li>\n                <Link to=\"/games/prenatal\">\n                  <FormattedMessage\n                    id=\"Home.prenatal_fr\"\n                    defaultMessage=\"Prenatal Care FR\"\n                    description=\"Prenatal Care Francais game name\"\n                  />\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as Sentry from \"@sentry/react\";\nimport { Integrations } from \"@sentry/tracing\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { IntlProvider } from \"react-intl\";\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport { SentryRoute as Route } from \"./util\";\nimport { LoggingContextProvider } from \"./hooks/useLogGameEvent\";\n\nimport enMessages from \"./lang-compiled/en.json\";\nimport frMessages from \"./lang-compiled/fr.json\";\nimport Home from \"./pages/Home\";\nimport { cookies } from \"./hooks/useStorage\";\n\nconst savedLocale = cookies.get(\"locale\");\nconst locale =\n  savedLocale === \"fr\" || navigator.languages[0].startsWith(\"fr\") ? \"fr\" : \"en\";\nconst messages = locale === \"fr\" ? frMessages : enMessages;\n\nSentry.init({\n  dsn: \"https://examplePublicKey@o0.ingest.sentry.io/0\",\n  integrations: [new Integrations.BrowserTracing()],\n  // We recommend adjusting this value in production, or using tracesSampler\n  // for finer control\n  tracesSampleRate: 1.0,\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <IntlProvider messages={messages} locale={locale} defaultLocale=\"en\">\n      <Router basename=\"/\">\n        <LoggingContextProvider>\n          <Switch>\n            <Route path=\"/games/:game_id\">\n              {(params) => <App gameId={params.match?.params.game_id!} />}\n            </Route>\n            <Route>\n              <Home />\n            </Route>\n          </Switch>\n        </LoggingContextProvider>\n      </Router>\n    </IntlProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}