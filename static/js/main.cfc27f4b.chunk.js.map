{"version":3,"sources":["fnt/Roboto-Regular.ttf","hooks/useLogGameEvent.tsx","util.ts","pages/Menu.tsx","hooks/useGameData.ts","pages/Objectives.tsx","pages/Intro.tsx","pages/Decision.tsx","pages/Video.tsx","pages/Credits.tsx","pages/Instructions.tsx","pages/Feedback.tsx","hooks/useStorage.ts","pages/Settings.tsx","pages/Summary.tsx","pages/Transition.tsx","pages/Materials.tsx","pages/Principles.tsx","hooks/useGameState.ts","clock/AnimatedClock.tsx","pages/Clock.tsx","App.tsx","reportWebVitals.ts","pages/Home.tsx","index.tsx"],"names":["emptyLoggingContext","eventLog","pushEvent","event","this","push","LoggingContext","React","createContext","LoggingContextProvider","props","_jsx","Provider","_objectSpread","value","useLogGameEvent","loggingContext","useContext","userUuid","undefined","useCallback","level","type","target","label","data","game","user","datetime","Date","console","log","useGotoMenu","history","useHistory","logGameEvent","game_id","useParams","concat","concatenatePaths","first","second","replace","SentryRoute","Sentry","Route","Menu","_ref","startNewGame","resumeGame","gamesaved","strings","pagesToShow","principles","showPrinciples","_jsxs","className","children","title","onClick","FormattedMessage","id","defaultMessage","description","Link","to","src","alt","width","height","href","games","emergency","en","require","post_partum","fr","labor_delivery","prenatal","Objectives","paragraph1","paragraph2","bullet_list","map","list_item","Intro","currentMessage","setCurrentMessage","useState","intro","introCards","skipToNext","length","n","text","Decision","decisionPoint","onOptionChosen","gotoMenu","dp","message","randomizedOptions","array","result","i","j","Math","floor","random","temp","shuffleArray","options","optionBoxes","useMemo","opt","chooseOption","next","replayVideo","tabIndex","Video","onVideoFinished","videoposition","setVideoposition","subtitlesLanguage","onSubtitlesLanguageSet","location","useLocation","videoRef","useRef","iframeRef","skipVideo","_dp$video","time","video","vimeo_url","current","api","videojs","dispose","currentTime","useEffect","_dp$video2","handleUserKeyPress","e","keyCode","preventDefault","pathname","goBack","paused","play","pause","window","addEventListener","removeEventListener","clip","bufferLength","sources","subtitles","kind","srclang","ready","on","duration","doc","document","getElementById","style","display","load","player","Player","setCurrentTime","off","seconds","language","async","iframe","disableTextTrack","_tracks$find","tracks","getTextTracks","track","find","_ref2","enableTextTrack","togggleTracks","ref","frameBorder","allow","allowFullScreen","Credits","paragraphs","credits_sections","end_paragraphs","paragraph","header","items","_Fragment","item","end_paragraph","Instructions","minSteps","Feedback","goNext","role","tagName","feedback","maxAge","isLocalStorageAvailable","str","localStorage","setItem","removeItem","cookies","put","key","maxCookieAge","arguments","cookie","get","cname","name","ca","decodeURIComponent","split","c","charAt","substring","indexOf","remove","VHEStorage","set","getItem","setObject","o","JSON","stringify","getObject","r","parse","Settings","subtitlesEnabled","onSubtitlesToggled","isFullscreen","setIsFullscreen","fullscreenElement","handleSubtitlesChange","evt","handleFullscreenChange","exitFullscreen","then","documentElement","requestFullscreen","catch","err","alert","locale","useIntl","handleSetEnglish","reload","handleSetFrench","checked","onChange","htmlFor","startsWith","INTL_MESSAGES","defineMessages","results","bestResult","incorrectOne","incorrectTwo","debriefOne","debriefTwo","debriefThree","gameReport","summary","yourAnswers","inProgressResults","downloadProgress","materialsLink","Roboto","default","Font","register","family","format","Summary","gameProgress","decisionPoints","completed","formatMessage","getFM","goToMenu","progress","_ref3","option","question","answer","correct","filter","_ref4","toFixed","Text","question_count","fontWeight","_ref5","_ref6","origin","pdfContent","responses","View","color","Document","Page","fontFamily","fontSize","lineHeight","backgroundColor","paddingBottom","borderBottom","PDFDownloadLink","fileName","_ref7","blob","url","loading","error","Lonk","Transition","playNextVideo","Materials","content","download","Principles","useGameState","storageKey","_loaded$uuid","_loaded$gamesaved","_loaded$currentStep","_loaded$videoposition","_loaded$progress","loaded","uuid","d","getTime","performance","now","toString","generateUUID","setGamesaved","currentStep","setCurrentStep","setProgress","fullscreen","newGame","selectOption","nextId","ps","Clock","Component","constructor","super","state","componentDidMount","timerId","setInterval","setState","componentWillMount","clearInterval","render","transform","getHours","getMinutes","getSeconds","gotoDecision","autoPlay","loop","AnimatedClock","App","gameId","path","useRouteMatch","gameData","useGameData","_games$game","_games$game2","_games$game3","Error","gameState","decisionpoints","setSubtitlesEnabled","handleSubtitlesLanguageSet","lang","lastDecisionPoint","currentDecisionPoint","currentDP","handleStartNewGame","isIE","documentMode","opr","addons","opera","navigator","userAgent","InstallTrigger","test","HTMLElement","safari","pushNotification","StyleMedia","chrome","webstore","runtime","getBrowser","handleResumeGame","handleOptionChosen","handleVideoFinished","Object","entries","colors","forEach","body","setProperty","Switch","credits","instructions","materials","objectives","menu","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Home","languages","messages","frMessages","enMessages","ReactDOM","StrictMode","IntlProvider","defaultLocale","Router","basename","params","_params$match","match"],"mappings":"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","file":"static/js/main.cfc27f4b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Roboto-Regular.a8d6ac03.ttf\";","import React, { useCallback, useContext } from \"react\";\n\ninterface Event {\n  game: string;\n  level: string;\n  type: string;\n  target: string;\n  label?: string;\n  data?: string | number;\n  user?: string;\n  datetime: Date;\n}\n\nconst emptyLoggingContext = () => ({\n  eventLog: [] as Event[],\n  pushEvent(event: Event) {\n    this.eventLog.push(event);\n  },\n});\n\nconst LoggingContext = React.createContext(emptyLoggingContext());\n\nexport const LoggingContextProvider: React.FC = (props) => {\n  return <LoggingContext.Provider value={emptyLoggingContext()} {...props} />;\n};\n\nconst useLogGameEvent = () => {\n  const loggingContext = useContext(LoggingContext);\n  const userUuid = undefined; // useUser().uuid\n\n  function logGameEvent(\n    level: string,\n    type: string,\n    target: string,\n    label?: string,\n    data?: string | number\n  ) {\n    loggingContext.pushEvent({\n      game: \"app.name\",\n      level: level,\n      type: type,\n      target: target,\n      label: label,\n      data: data,\n      user: userUuid,\n      datetime: new Date(),\n    });\n\n    console.log(loggingContext.eventLog);\n  }\n\n  return useCallback(logGameEvent, [loggingContext, userUuid]);\n};\n\nexport default useLogGameEvent;\n","import * as Sentry from \"@sentry/react\";\nimport { Route } from \"react-router-dom\";\n\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { useParams } from \"react-router-dom\";\nimport useLogGameEvent from \"./hooks/useLogGameEvent\";\n\nexport function generateUUID(): string {\n  var r: string;\n  let d = new Date().getTime();\n  if (\n    typeof performance !== \"undefined\" &&\n    typeof performance.now === \"function\"\n  ) {\n    d += performance.now(); //use high-precision timer if available\n  }\n  r = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n    var r = (d + Math.random() * 16) % 16 | 0;\n    d = Math.floor(d / 16);\n    return (c === \"x\" ? r : (r & 0x3) | 0x8).toString(16);\n  });\n  return r;\n}\n\nexport const useGotoMenu = () => {\n  const history = useHistory();\n  const logGameEvent = useLogGameEvent();\n  const { game_id } = useParams<{ game_id: string }>();\n\n  const gotoMenu = useCallback(() => {\n    logGameEvent(\"\", \"open\", \"menu\", \"\", \"\");\n    history.push(`/games/${game_id}/`);\n  }, [history, logGameEvent, game_id]);\n  return gotoMenu;\n};\n\nexport function getBrowser() {\n  var browser, isIE;\n  // @ts-ignore\n  isIE = /*@cc_on!@*/ false || !!document.documentMode;\n\n  // @ts-ignore\n  if (\n    // @ts-ignore\n    (!!window.opr && !!opr.addons) ||\n    // @ts-ignore\n    !!window.opera ||\n    navigator.userAgent.indexOf(\" OPR/\") >= 0\n  ) {\n    browser = \"Opera\";\n\n    // @ts-ignore\n  } else if (typeof InstallTrigger !== \"undefined\") {\n    browser = \"Firefox\";\n    // @ts-ignore\n  } else if (\n    // @ts-ignore\n    /constructor/i.test(window.HTMLElement) ||\n    (function (p) {\n      return p.toString() === \"[object SafariRemoteNotification]\";\n    })(\n      // @ts-ignore\n      !window[\"safari\"] ||\n        // @ts-ignore\n        (typeof safari !== \"undefined\" && safari.pushNotification)\n    )\n  ) {\n    browser = \"Safari\";\n  } else if (isIE) {\n    browser = \"Internet Explorer\";\n    // @ts-ignore\n  } else if (!isIE && !!window.StyleMedia) {\n    browser = \"Edge\";\n    // @ts-ignore\n  } else if (\n    // @ts-ignore\n    !!window.chrome &&\n    // @ts-ignore\n    (!!window.chrome.webstore || !!window.chrome.runtime)\n  ) {\n    browser = \"Chrome\";\n  } else {\n    browser = \"Unknown browser\";\n  }\n  return browser;\n}\n\nexport const shuffleArray = <T>(array: T[]): T[] => {\n  let result = [...array];\n  for (let i = result.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = result[i];\n    result[i] = result[j];\n    result[j] = temp;\n  }\n  return result;\n};\n// Conctatenate two path strings, stripping excess /'s at the seam\nexport const concatenatePaths = (first: string, second: string): string =>\n  `${first.replace(/\\/*$/, \"\")}/${second.replace(/^\\/*/, \"\")}`;\n\nexport const SentryRoute = Sentry.withSentryRouting(Route);\n","import { FormattedMessage } from \"react-intl\";\nimport { Link, useParams } from \"react-router-dom\";\nimport \"./Menu.scss\";\n\ninterface iProps {\n  startNewGame: () => void;\n  resumeGame: () => void;\n  gamesaved: boolean;\n  strings: {\n    title: string;\n  };\n  pagesToShow: {\n    principles: boolean;\n  };\n}\n\nconst Menu: React.FC<iProps> = ({\n  startNewGame,\n  resumeGame,\n  gamesaved,\n  strings,\n  pagesToShow: { principles: showPrinciples },\n}) => {\n  const { game_id } = useParams<{ game_id: string }>();\n\n  return (\n    <div className=\"container\">\n      <div className=\"panel menu\">\n        <header>\n          <h1>{strings.title}</h1>\n        </header>\n        <div className=\"main\">\n          <div className=\"content\">\n            <ul className=\"controls\">\n              <li>\n                <button className=\"Link\" onClick={startNewGame}>\n                  <FormattedMessage\n                    id=\"Menu.newGame\"\n                    defaultMessage=\"New Game\"\n                    description=\"New Game Button\"\n                  />\n                </button>\n              </li>\n              <li>\n                <button\n                  className={`Link ${gamesaved ? \"active\" : \"disabled\"}`}\n                  onClick={resumeGame}\n                >\n                  <FormattedMessage\n                    id=\"Menu.resumeGame\"\n                    defaultMessage=\"Resume Game\"\n                    description=\"Resume Game Button\"\n                  />\n                </button>\n              </li>\n              <li>\n                <Link to={`/games/${game_id}/objectives/`}>\n                  <FormattedMessage\n                    id=\"Menu.objectives\"\n                    defaultMessage=\"Learning Objectives\"\n                    description=\"Objectives Button\"\n                  />\n                </Link>\n              </li>\n              {showPrinciples ? (\n                <li>\n                  <Link to={`/games/${game_id}/principles/`}>\n                    <FormattedMessage\n                      id=\"Menu.principles\"\n                      defaultMessage=\"Essential Principles\"\n                      description=\"Principles Button\"\n                    />\n                  </Link>\n                </li>\n              ) : null}\n              <li>\n                <Link to={`/games/${game_id}/settings/`}>\n                  <FormattedMessage\n                    id=\"Menu.gameOptions\"\n                    defaultMessage=\"Settings\"\n                    description=\"Settings Button\"\n                  />\n                </Link>\n              </li>\n              <li>\n                <Link to={`/games/${game_id}/instructions/`}>\n                  <FormattedMessage\n                    id=\"Menu.instructions\"\n                    defaultMessage=\"How to Play\"\n                    description=\"How to Play Button\"\n                  />\n                </Link>\n              </li>\n              {/* <li>\n                <Link to={`/games/${game_id}/materials/`}>\n                  <FormattedMessage\n                    id=\"Menu.materials\"\n                    defaultMessage=\"Self-Assessment\"\n                    description=\"Link to self-assessment materials\"\n                  />\n                </Link>\n              </li> */}\n              <li>\n                <Link to={`/games/${game_id}/credits/`}>\n                  <FormattedMessage\n                    id=\"Menu.credits\"\n                    defaultMessage=\"Credits\"\n                    description=\"Credits Button\"\n                  />\n                </Link>\n              </li>\n              <li>\n                <Link to={`/games/`}>\n                  <FormattedMessage\n                    id=\"Menu.exit\"\n                    defaultMessage=\"Exit Game\"\n                    description=\"Exit Game Button\"\n                  />\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n      <footer>\n        <img\n          src=\"/images/cc_icon_white.png\"\n          alt=\"white cc icon\"\n          width=\"20\"\n          height=\"20\"\n        ></img>{\" \"}\n        <img\n          src=\"/images/attribution_icon_white.png\"\n          alt=\"white attribution icon\"\n          width=\"20\"\n          height=\"20\"\n        ></img>{\" \"}\n        <img\n          src=\"/images/nc_icon_white.png\"\n          alt=\"white non-commercial icon\"\n          width=\"20\"\n          height=\"20\"\n        ></img>{\" \"}\n        <p className=\"cc\">\n          <FormattedMessage\n            id=\"Menu.copyright\"\n            defaultMessage=\"Unless otherwise noted this resource is available for public use under\"\n            description=\"copyright disclaimer\"\n          />{\" \"}\n          <a\n            href=\"https://creativecommons.org/licenses/by-nc/4.0/\"\n            className=\"cc-link\"\n          >\n            Creative Commons Attribution 4.0 International (CC BY-NC 4.0)\n          </a>\n          .\n        </p>\n        <p className=\"cc\">\n          <FormattedMessage\n            id=\"Menu.copyright-share\"\n            defaultMessage=\"SHARE: copy and redistribute the material in any medium or format\"\n            description=\"copyright share disclaimer\"\n          />{\" \"}</p>\n      </footer>\n    </div>\n  );\n};\n\nexport default Menu;\n","import { useMemo } from \"react\";\n\nconst games: Record<string, Record<string, GameDataShape>> = {\n  emergency: {\n    en: require(\"../games/er_game_data.json\"),\n  },\n  post_partum: {\n    fr: require(\"../games/post_partum_fr.json\"),\n  },\n  labor_delivery: {\n    fr: require(\"../games/labor_delivery_fr.json\"),\n  },\n  prenatal: {\n    fr: require(\"../games/prenatal_fr.json\"),\n  },\n};\n\nexport interface DecisionPoint {\n  id: number;\n  title?: string;\n  type: string; //\"video\" | \"string\",\n  data: string;\n\n  video:\n    | {\n        vimeo_url: string;\n        videojs_url?: string;\n      }\n    | {\n        vimeo_url?: string;\n        videojs_url: string;\n      }\n    | null;\n\n  correct: boolean;\n  feedback: string;\n  message: string;\n  options: {\n    label: string;\n    next: number;\n  }[];\n  next: null;\n}\n\ninterface GameDataShape {\n  decisionpoints: DecisionPoint[];\n  colors: {\n    \"--theme-light\": string;\n    \"--theme-dark\": string;\n    \"--theme-primary\": string;\n    \"--primary-text-color\": string;\n    \"--link-color\": string;\n  };\n  strings: {\n    menu: {\n      title: string;\n    };\n    intro: {\n      introCards: string[];\n    };\n    objectives: {\n      paragraph1: string;\n      paragraph2: string;\n      bullet_list: string[];\n    };\n    principles?: {\n      paragraph: string;\n      bullet_list: string[];\n    };\n    instructions: {\n      paragraph: string;\n      bullet_list: string[];\n    };\n    credits: {\n      paragraphs: string[];\n      credits_sections: {\n        header: string;\n        items: string[];\n      }[];\n      end_paragraphs: string[];\n    };\n    materials: {\n      content: {\n        label: string;\n        item: string;\n      }[];\n    };\n  };\n}\n\nexport const useGameData = (game: string, locale: string): GameDataShape => {\n  const data = useMemo(\n    () => games[game]?.[locale] || games[game]?.[\"en\"] || games[game]?.[\"fr\"],\n    [game, locale]\n  );\n  console.log(data);\n  if (!data) {\n    throw new Error(\"That game could not be found\");\n  }\n  return data;\n};\n","import { FormattedMessage } from \"react-intl\";\nimport { Link } from \"react-router-dom\";\nimport \"./Objectives.scss\";\n\ninterface iProps {\n  strings: {\n    paragraph1: string;\n    paragraph2: string;\n    bullet_list: string[];\n  };\n}\n\nconst Objectives: React.FC<iProps> = ({ strings }) => {\n  return (\n    <div className=\"container\">\n      <div className=\"panel info\">\n        <header>\n          <h1>\n            <Link to=\"../\" aria-label=\"Return to menu\">\n              <span className=\"icon-arrow-left\"></span>\n            </Link>\n            <FormattedMessage\n              id=\"Objectives.title\"\n              defaultMessage=\"Learning Objectives\"\n              description=\"Learning Objectives title\"\n            />\n          </h1>\n        </header>\n        <div className=\"main\">\n          <div className=\"content cf\">\n            <p>{strings.paragraph1}</p>\n            <p>{strings.paragraph2}</p>\n            <ul>\n              {strings.bullet_list.map((list_item) => (\n                <li>{list_item}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Objectives;\n","import { useCallback, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport \"./Intro.scss\";\n\ninterface iProps {\n  strings: {\n    introCards: string[];\n  };\n}\n\nconst Intro: React.FC<iProps> = ({ strings }) => {\n  const history = useHistory();\n  const { game_id } = useParams<{ game_id: string }>();\n  const label = \"Next\";\n\n  const [currentMessage, setCurrentMessage] = useState(0);\n  const intro = strings.introCards;\n\n  const skipToNext = useCallback(() => {\n    if (currentMessage < intro.length - 1) {\n      setCurrentMessage((n) => n + 1);\n    } else {\n      history.push(`/games/${game_id}/video/`);\n    }\n  }, [currentMessage, history, intro.length, game_id]);\n\n  const text = intro[currentMessage];\n\n  return (\n    <div className=\"container\">\n      <div className=\"panel intro\">\n        <div className=\"main\">\n          <div className=\"intro-content\">{text}</div>\n        </div>\n        <footer>\n          <p className=\"controls\">\n            <button className=\"button\" onClick={skipToNext}>\n              {label}\n            </button>\n          </p>\n        </footer>\n      </div>\n    </div>\n  );\n};\n\nexport default Intro;\n","import { useCallback, useMemo, useState } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { DecisionPoint } from \"../hooks/useGameData\";\nimport useLogGameEvent from \"../hooks/useLogGameEvent\";\nimport { shuffleArray, useGotoMenu } from \"../util\";\nimport \"./Decision.scss\";\n\ninterface iProps {\n  decisionPoint: DecisionPoint;\n  onOptionChosen: (option: number, label: string) => void;\n}\n\nconst Decision: React.FC<iProps> = ({ decisionPoint, onOptionChosen }) => {\n  const history = useHistory();\n  const { game_id } = useParams<{ game_id: string }>();\n\n  const logGameEvent = useLogGameEvent();\n  const gotoMenu = useGotoMenu();\n\n  const dp = decisionPoint;\n\n  logGameEvent(\"\", \"show\", \"question\", dp.message, \"\");\n\n  const [randomizedOptions] = useState(shuffleArray(dp.options)); // TODO shuffle these\n\n  const optionBoxes = useMemo(() => {\n    return randomizedOptions.map((opt) => {\n      const chooseOption = () => onOptionChosen(opt.next, opt.label);\n\n      return (\n        <li\n          key={opt.label}\n          className=\"option\"\n          ng-repeat=\"opt in randomizedOptions\"\n        >\n          <button onClick={chooseOption}>{opt.label}</button>\n        </li>\n      );\n    });\n  }, [randomizedOptions, onOptionChosen]);\n\n  const replayVideo = useCallback(() => {\n    /*gtag('event', 'video_replayed', {\n      'event_category': 'video',\n      'event_label': $scope.dp.data,\n      'value': $scope.dp.id\n    });*/\n    logGameEvent(\"\", \"replay\", \"video\", dp.data, dp.id);\n    history.push(`/games/${game_id}/video`);\n  }, [dp.data, dp.id, history, logGameEvent, game_id]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"left controls\">\n        <button className=\"button button--menu\" onClick={replayVideo}>\n          <FormattedMessage\n            id=\"General.replay\"\n            defaultMessage=\"Replay\"\n            description=\"Replay Video Button\"\n          />\n        </button>\n      </div>\n      <div className=\"right controls\">\n        <button className=\"button button--menu\" onClick={gotoMenu}>\n          <FormattedMessage\n            id=\"General.menu\"\n            defaultMessage=\"Menu\"\n            description=\"Go To Menu Button\"\n          />\n        </button>\n      </div>\n      <div className=\"question\" tabIndex={0}>\n        <div className=\"vertical_outer\">\n          <div className=\"vertical_inner\">{dp?.message}</div>\n        </div>\n      </div>\n      <ul className=\"option_box cf\">{optionBoxes}</ul>\n    </div>\n  );\n};\n\nexport default Decision;\n","import { useEffect, useCallback, useRef } from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport videojs from \"video.js\";\nimport Player from \"@vimeo/player\";\n\nimport { DecisionPoint } from \"../hooks/useGameData\";\n\nimport \"./Video.scss\";\nimport useLogGameEvent from \"../hooks/useLogGameEvent\";\nimport { FormattedMessage } from \"react-intl\";\nimport { useGotoMenu } from \"../util\";\n\ninterface iProps {\n  decisionPoint: DecisionPoint;\n  onVideoFinished: () => void;\n  videoposition: number;\n  setVideoposition: (t: number) => void;\n  subtitlesLanguage: string | null;\n  onSubtitlesLanguageSet: (lang: string | null) => void;\n}\n\nconst Video: React.FC<iProps> = ({\n  decisionPoint: dp,\n  onVideoFinished,\n  videoposition,\n  setVideoposition,\n  subtitlesLanguage,\n  onSubtitlesLanguageSet,\n}) => {\n  const location = useLocation();\n  const history = useHistory();\n  const logGameEvent = useLogGameEvent();\n\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const iframeRef = useRef<HTMLIFrameElement>(null);\n  const gotoMenu = useGotoMenu();\n\n  const skipVideo = useCallback(() => {\n    let time = undefined;\n\n    if (dp?.video?.vimeo_url) {\n    } else if (videoRef.current) {\n      var api = videojs(videoRef.current);\n      api.dispose();\n      time = api?.currentTime();\n    }\n\n    onVideoFinished();\n    logGameEvent(\"\", \"skip\", \"video\", dp?.data, time);\n  }, [dp, logGameEvent, onVideoFinished]);\n\n  useEffect(() => {\n    if (dp && !dp?.video?.vimeo_url) skipVideo();\n  }, [dp, skipVideo]);\n\n  useEffect(() => {\n    const handleUserKeyPress = (e: KeyboardEvent) => {\n      const video = videoRef.current;\n      if (video) {\n        var api = videojs(video);\n        switch (e.keyCode) {\n          case 27:\n            e.preventDefault();\n            if (location.pathname !== \"/\") {\n              if (api && typeof api.currentTime() != \"undefined\") {\n                setVideoposition(api.currentTime());\n              }\n              history.push(`/`);\n            } else {\n              history.goBack();\n            }\n            break;\n          case 32:\n            e.preventDefault();\n            if (api) {\n              if (api.paused()) {\n                api.play();\n              } else {\n                api.pause();\n              }\n            }\n            break;\n          case 33:\n            if (api) {\n              api.currentTime(api.currentTime() - 10);\n              api.play();\n            }\n            break;\n          case 34:\n            if (api) {\n              api.currentTime(api.currentTime() + 10);\n              api.play();\n            }\n            break;\n          default:\n            break;\n        }\n      }\n    };\n    window.addEventListener(\"keydown\", handleUserKeyPress);\n    return () => {\n      window.removeEventListener(\"keydown\", handleUserKeyPress);\n    };\n  }, [history, location.pathname, setVideoposition]);\n\n  useEffect(() => {\n    if (videoRef.current && dp) {\n      const api = videojs(videoRef.current);\n      const clip = {\n        bufferLength: 0,\n        sources: [\n          {\n            type: \"video/mp4\",\n            src: \"_/vid/mp4/\" + dp?.data + \".mp4\",\n          },\n        ],\n        subtitles: [\n          {\n            kind: \"subtitles\",\n            srclang: \"en\",\n            label: \"English\",\n            src: \"_/vid/vtt/en/\" + dp?.data + \".vtt\",\n          },\n        ],\n      };\n      console.log(\"video source\", clip.sources[0].src);\n\n      api.src(clip.sources[0].src);\n\n      // @ts-ignore\n      api.ready((api): void => {\n        if (videoposition > 0) {\n          api.currentTime(videoposition);\n        }\n        api?.play();\n        logGameEvent(\"\", \"start\", \"video\", dp?.data, \"\");\n      });\n\n      api.on(\"progress\", function (e: unknown) {\n        setVideoposition(api.currentTime());\n      });\n\n      api.on(\"pause\", function (e: unknown) {\n        if (api.duration() > api.currentTime() + 0.5) {\n          logGameEvent(\"\", \"pause\", \"video\", dp?.data, api.currentTime());\n        }\n      });\n\n      api.on(\"click\", function togglePause() {\n        var doc = document.getElementById(\"pause\");\n\n        if (api.paused()) {\n          if (doc) {\n            doc.style.display = \"none\";\n          }\n          api.play();\n        } else {\n          if (doc) {\n            doc.style.display = \"block\";\n          }\n          api.pause();\n        }\n      });\n\n      //@ts-ignore\n      api.on(\"ended\", function (e) {\n        skipVideo();\n        logGameEvent(\"\", \"finish\", \"video\", dp?.data, \"\");\n      });\n\n      //@ts-ignore\n      api.on(\"error\", function (e) {\n        console.log(e);\n        logGameEvent(\"\", \"error\", \"video\", dp?.data, \"\");\n      });\n\n      api.load();\n    }\n  }, [dp, skipVideo, logGameEvent, setVideoposition, videoposition]);\n\n  useEffect(() => {\n    if (iframeRef.current) {\n      console.log(\"Setting vimeo listeners\");\n\n      const player = new Player(iframeRef.current);\n      player.on(\"loaded\", () => {\n        player.setCurrentTime(videoposition);\n      });\n      return () => player.off(\"loaded\");\n    }\n    // Disable exhaustive deps so this hook only gets called on initial render\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (iframeRef.current) {\n      console.log(\"Setting vimeo listeners\");\n\n      const player = new Player(iframeRef.current);\n      player.on(\"timeupdate\", (data: { seconds: number }) => {\n        console.log(`Progress ${data.seconds}`);\n        setVideoposition(data.seconds);\n      });\n\n      player.on(\"ended\", () => {\n        console.log(\"vimeo ended\");\n        skipVideo();\n        logGameEvent(\"\", \"finish\", \"video\", dp.data, \"\");\n      });\n\n      player.on(\"texttrackchange\", (data: { language: string | null }) => {\n        onSubtitlesLanguageSet(data.language);\n      });\n\n      return () => {\n        player.off(\"timeupdate\");\n        player.off(\"ended\");\n        player.off(\"texttrackchange\");\n      };\n    }\n  }, [\n    setVideoposition,\n    dp.data,\n    logGameEvent,\n    skipVideo,\n    onSubtitlesLanguageSet,\n  ]);\n\n  useEffect(() => {\n    const togggleTracks = async (iframe: HTMLIFrameElement) => {\n      const player = new Player(iframe);\n      if (subtitlesLanguage) {\n        const tracks = await player.getTextTracks();\n        const track =\n          tracks.find(({ language }) => language === subtitlesLanguage) ??\n          tracks[0];\n        if (track) player.enableTextTrack(track.language, track.kind);\n      } else {\n        return player.disableTextTrack();\n      }\n    };\n\n    if (iframeRef.current) {\n      togggleTracks(iframeRef.current);\n    }\n  }, [subtitlesLanguage]);\n\n  return (\n    <div className=\"video\">\n      <div className=\"right controls\">\n        <button className=\"button button--menu\" onClick={gotoMenu}>\n          <FormattedMessage\n            id=\"General.menu\"\n            defaultMessage=\"Menu\"\n            description=\"Go To Menu Button\"\n          />\n        </button>\n      </div>\n      <div id=\"player\" className=\"videoplayer functional\">\n        {dp?.video &&\n          (dp.video.vimeo_url ? (\n            <iframe\n              ref={iframeRef}\n              // style={{height: (iframeRef.current?.scrollWidth ?? 600) * 9/16}}\n              src={dp.video.vimeo_url + `?autoplay=1`}\n              frameBorder={0}\n              allow=\"autoplay; texttrack; fullscreen; picture-in-picture\"\n              allowFullScreen\n              title=\"SG4_DP1_0\"\n            ></iframe>\n          ) : (\n            <video\n              ref={videoRef}\n              id=\"vid-player\"\n              className=\"video-js vjs-big-play-centered\"\n            >\n              Please use a different browser\n            </video>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Video;\n","import { FormattedMessage } from \"react-intl\";\nimport { Link } from \"react-router-dom\";\nimport \"./Credits.scss\";\n\ninterface iProps {\n  strings: {\n    paragraphs: string[];\n    credits_sections: {\n      header: string;\n      items: string[];\n    }[];\n    end_paragraphs: string[];\n  };\n}\n\nconst Credits: React.FC<iProps> = ({\n  strings: { paragraphs, credits_sections, end_paragraphs },\n}) => {\n  return (\n    <div className=\"container\">\n      <div className=\"panel credits\">\n        <header>\n          <h1>\n            <Link to=\"../\" aria-label=\"Return to menu\">\n              <span className=\"icon-arrow-left\"></span>\n            </Link>\n            <FormattedMessage\n              id=\"Credits.title\"\n              defaultMessage=\"Credits\"\n              description=\"credits title\"\n            />\n          </h1>\n        </header>\n        <div className=\"main\">\n          <div className=\"content cf\">\n            {paragraphs.map((paragraph) => (\n              <p>{paragraph}</p>\n            ))}\n            {credits_sections.map(({ header, items }) => (\n              <>\n                <h2>{header}</h2>\n                <ul>\n                  {items.map((item) => (\n                    <li>{item}</li>\n                  ))}\n                </ul>\n              </>\n            ))}\n            {end_paragraphs.map((end_paragraph) => (\n              <p>{end_paragraph}</p>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Credits;\n","import { FormattedMessage } from \"react-intl\";\nimport { Link } from \"react-router-dom\";\nimport \"./Instructions.scss\";\n\ninterface iProps {\n  minSteps: number;\n  strings: {\n    paragraph: string;\n    bullet_list: string[];\n  };\n}\n\nconst Instructions: React.FC<iProps> = ({ minSteps, strings }) => {\n  return (\n    <div className=\"container\">\n      <div className=\"panel info\">\n        <header>\n          <h1>\n            <Link to=\"../\" aria-label=\"Return to menu\">\n              <span className=\"icon-arrow-left\"></span>\n            </Link>{\" \"}\n            <FormattedMessage\n              id=\"Instructions.title\"\n              defaultMessage=\"How to Play\"\n              description=\"how to play title\"\n            />{\" \"}\n          </h1>\n        </header>\n        <div className=\"main\">\n          <div className=\"content cf\">\n            <p>{strings.paragraph}</p>\n            <ul>\n              {strings.bullet_list.map((list_item) => (\n                <li>{list_item}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Instructions;\n","import { useCallback } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { useHistory, useParams } from \"react-router\";\nimport { DecisionPoint } from \"../hooks/useGameData\";\nimport \"./Feedback.scss\";\n\ninterface iProps {\n  decisionPoint: DecisionPoint;\n}\n\nconst Feedback: React.FC<iProps> = ({ decisionPoint: dp }) => {\n  const history = useHistory();\n  const { game_id } = useParams<{ game_id: string }>();\n\n  const goNext = useCallback(() => {\n    switch (dp?.type) {\n      case \"video\":\n        history.push(`/games/${game_id}/decision/`);\n        break;\n      case \"lo\":\n        history.push(`/games/${game_id}/clock/`);\n        break;\n    }\n  }, [dp?.type, history, game_id]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"panel feedback\" role=\"alert\">\n        <header>\n          <FormattedMessage\n            id=\"Feedback.title\"\n            defaultMessage=\"Feedback\"\n            description=\"feedback title\"\n            tagName=\"h1\"\n          />\n        </header>\n        <div className=\"main\">{dp?.feedback}</div>\n        <footer>\n          <p className=\"controls\">\n            <button className=\"button\" onClick={goNext}>\n              <FormattedMessage\n                id=\"General.resume\"\n                defaultMessage=\"Resume Game\"\n                description=\"resume game button\"\n              />\n            </button>\n          </p>\n        </footer>\n      </div>\n    </div>\n  );\n};\n\nexport default Feedback;\n","//////////////////////////////////////////////////\n// Cookies + State, it's messy here\n//////////////////////////////////////////////////\n\nvar maxAge = 21 * 24 * 60;\n\nfunction isLocalStorageAvailable() {\n  var str = \"test\";\n  try {\n    localStorage.setItem(str, str);\n    localStorage.removeItem(str);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport const cookies = {\n  put(key: string, value: string, maxCookieAge: number = maxAge) {\n    var cookie = `${key}=${value};path=/;max-age=${maxCookieAge};`;\n    console.log(cookie);\n    document.cookie = cookie;\n  },\n  get(cname: string): string | null {\n    let name = cname + \"=\";\n    let decodedCookie = decodeURIComponent(document.cookie);\n    let ca = decodedCookie.split(\";\");\n    for (let i = 0; i < ca.length; i++) {\n      let c = ca[i];\n      while (c.charAt(0) === \" \") {\n        c = c.substring(1);\n      }\n      if (c.indexOf(name) === 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n    return null;\n  },\n  remove(key: string) {\n    this.put(key, \"\", -1);\n  },\n};\n\nexport const VHEStorage = {\n  set: function (key: string, value: string) {\n    if (isLocalStorageAvailable()) {\n      window.localStorage.setItem(key, value);\n    } else {\n      cookies.put(key, value, maxAge);\n    }\n  },\n  get: function (key: string): string | null {\n    var r = isLocalStorageAvailable()\n      ? window.localStorage.getItem(key)\n      : cookies.get(key);\n    return r;\n  },\n  setObject: function (key: string, value: any) {\n    const o = JSON.stringify(value);\n    if (isLocalStorageAvailable()) {\n      window.localStorage.setItem(key, o);\n    } else {\n      cookies.put(key, o, maxAge);\n    }\n  },\n  getObject: function (key: string) {\n    var r = isLocalStorageAvailable()\n      ? window.localStorage.getItem(key)\n      : cookies.get(key);\n    return r ? JSON.parse(r) : false;\n  },\n  remove: function (key: string) {\n    if (isLocalStorageAvailable()) {\n      window.localStorage.removeItem(key);\n    } else {\n      cookies.remove(key);\n    }\n  },\n};\n\nconst useStorage = () => {\n  return VHEStorage;\n};\n\nexport default useStorage;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Link } from \"react-router-dom\";\nimport { cookies } from \"../hooks/useStorage\";\nimport \"./Settings.scss\";\n\ninterface iProps {\n  subtitlesEnabled: boolean;\n  onSubtitlesToggled: (enabled: boolean) => void;\n}\n\nconst Settings: React.FC<iProps> = ({\n  subtitlesEnabled,\n  onSubtitlesToggled,\n}) => {\n  const [isFullscreen, setIsFullscreen] = useState<boolean>(\n    !!document.fullscreenElement\n  );\n\n  const handleSubtitlesChange = useCallback(\n    (evt: React.ChangeEvent<HTMLInputElement>) => {\n      onSubtitlesToggled(evt.target.value === \"on\");\n    },\n    [onSubtitlesToggled]\n  );\n\n  const handleFullscreenChange = useCallback(\n    (evt: React.ChangeEvent<HTMLInputElement>) => {\n      if (!document.fullscreenElement && evt.target.value === \"on\") {\n        document.documentElement\n          .requestFullscreen()\n          .then(() => setIsFullscreen(true))\n          .catch((err) => {\n            alert(\n              `Error attempting to enable full-screen mode: ${err.message} (${err.name})`\n            );\n          });\n      } else if (document.fullscreenElement && evt.target.value === \"off\") {\n        if (document.exitFullscreen) {\n          document.exitFullscreen().then(() => setIsFullscreen(false));\n        }\n      }\n    },\n    []\n  );\n\n  useEffect(() => {\n    const handleFullscreenChange = () => {\n      // document.fullscreenElement will point to the element that\n      // is in fullscreen mode if there is one. If there isn't one,\n      // the value of the property is null.\n      setIsFullscreen(!!document.fullscreenElement);\n      if (document.fullscreenElement) {\n        console.log(\n          `Element: ${document.fullscreenElement.id} entered full-screen mode.`\n        );\n      } else {\n        console.log(\"Leaving full-screen mode.\");\n      }\n    };\n    document.addEventListener(\"fullscreenchange\", handleFullscreenChange);\n\n    return () =>\n      document.removeEventListener(\"fullscreenchange\", handleFullscreenChange);\n  }, []);\n\n  const locale = useIntl().locale;\n  const handleSetEnglish = useCallback(() => {\n    cookies.put(\"locale\", \"en\");\n    document.location.reload();\n  }, []);\n  const handleSetFrench = useCallback(() => {\n    cookies.put(\"locale\", \"fr\");\n    document.location.reload();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <div className=\"panel settings\">\n        <header>\n          <h1>\n            <Link to=\"../\" aria-label=\"Return to menu\">\n              <span className=\"icon-arrow-left\"></span>\n            </Link>{\" \"}\n            Options\n          </h1>\n        </header>\n        <div className=\"main\">\n          <div className=\"content\">\n            <div className=\"cf\">\n              <h2>\n                <FormattedMessage\n                  id=\"Options.display\"\n                  defaultMessage=\"Display\"\n                  description=\"Display Header\"\n                />\n              </h2>\n              <div className=\"radio\">\n                <div>\n                  <input\n                    type=\"radio\"\n                    name=\"display_mode\"\n                    id=\"mode_window\"\n                    value=\"off\"\n                    checked={!isFullscreen}\n                    onChange={handleFullscreenChange}\n                  />\n                  <label htmlFor=\"mode_window\" aria-checked={!isFullscreen}>\n                    <FormattedMessage\n                      id=\"Options.windowed\"\n                      defaultMessage=\"Window\"\n                      description=\"windowed view option\"\n                    />\n                  </label>\n                </div>\n                <div>\n                  <input\n                    type=\"radio\"\n                    name=\"display_mode\"\n                    id=\"mode_fullscreen\"\n                    value=\"on\"\n                    checked={isFullscreen}\n                    onChange={handleFullscreenChange}\n                  />\n                  <label htmlFor=\"mode_fullscreen\" aria-checked={isFullscreen}>\n                    <FormattedMessage\n                      id=\"Options.full_screen\"\n                      defaultMessage=\"Full Screen\"\n                      description=\"full screen button\"\n                    />\n                  </label>\n                </div>\n              </div>\n            </div>\n            <br />\n            <div className=\"cf\">\n              <h2>\n                <FormattedMessage\n                  id=\"Options.subtitles\"\n                  defaultMessage=\"Subtitles\"\n                  description=\"subtitles button\"\n                />\n              </h2>\n              <div className=\"radio\">\n                <div>\n                  <input\n                    type=\"radio\"\n                    name=\"subtitles\"\n                    id=\"subtitles_off\"\n                    value=\"off\"\n                    checked={!subtitlesEnabled}\n                    onChange={handleSubtitlesChange}\n                  />\n                  <label\n                    htmlFor=\"subtitles_off\"\n                    aria-checked={!subtitlesEnabled}\n                  >\n                    <FormattedMessage\n                      id=\"Options.subtitles_off\"\n                      defaultMessage=\"Off\"\n                      description=\"subtitles off button\"\n                    />\n                  </label>\n                </div>\n                <div>\n                  <input\n                    type=\"radio\"\n                    name=\"subtitles\"\n                    id=\"subtitles_en\"\n                    value=\"on\"\n                    checked={subtitlesEnabled}\n                    onChange={handleSubtitlesChange}\n                  />\n                  <label htmlFor=\"subtitles_en\" aria-checked={subtitlesEnabled}>\n                    <FormattedMessage\n                      id=\"Options.subtitles_on\"\n                      defaultMessage=\"On\"\n                      description=\"subtitles on button\"\n                    />\n                  </label>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"cf\">\n              <h2>\n                <FormattedMessage\n                  id=\"Options.language\"\n                  defaultMessage=\"Language\"\n                  description=\"language options title\"\n                />\n              </h2>\n              <div className=\"radio\">\n                <div>\n                  <input\n                    type=\"radio\"\n                    name=\"english\"\n                    id=\"lang_en\"\n                    value=\"english\"\n                    checked={locale.startsWith(\"en\")}\n                    onChange={handleSetEnglish}\n                  />\n                  <label\n                    htmlFor=\"lang_en\"\n                    aria-checked={locale.startsWith(\"en\")}\n                  >\n                    <FormattedMessage\n                      id=\"Options.language_en\"\n                      defaultMessage=\"English\"\n                      description=\"english language button\"\n                    />\n                  </label>\n                </div>\n                <div>\n                  <input\n                    type=\"radio\"\n                    name=\"french\"\n                    id=\"lang_fr\"\n                    value=\"on\"\n                    checked={locale.startsWith(\"fr\")}\n                    onChange={handleSetFrench}\n                  />\n                  <label\n                    htmlFor=\"lang_fr\"\n                    aria-checked={locale.startsWith(\"fr\")}\n                  >\n                    <FormattedMessage\n                      id=\"Options.language_fr\"\n                      defaultMessage=\"French\"\n                      description=\"french language button\"\n                    />\n                  </label>\n                </div>\n              </div>\n            </div>\n\n            {/* <!--<br>\n\t\t\t\t<div className=\"cf\">\n\t\t\t\t\t<h2>Video Quality:</h2>\n\t\t\t\t\t<div className=\"radio\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<input type=\"radio\" name=\"quality\" id=\"quality_720p\"\n\t\t\t\t\t\t\t\tng-model=\"sg.quality\"\n\t\t\t\t\t\t\t\tng-value=\"'-720p'\"\n\t\t\t\t\t\t\t\tng-change=\"saveState()\"/> \n\t\t\t\t\t\t\t<label for=\"quality_720p\">High (720p)</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<input type=\"radio\" name=\"quality\" id=\"quality_360p\"\n\t\t\t\t\t\t\t\tng-model=\"sg.quality\"\n\t\t\t\t\t\t\t\tng-value=\"''\"\n\t\t\t\t\t\t\t\tng-change=\"saveState()\"/> \n\t\t\t\t\t\t\t<label for=\"quality_360p\">Low (360p)</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>--> */}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Settings;\n","import { useMemo } from \"react\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { useGotoMenu } from \"../util\";\nimport \"./Summary.scss\";\nimport {\n  PDFDownloadLink,\n  Document,\n  Page,\n  Text,\n  Link,\n  View,\n} from \"@react-pdf/renderer\";\nimport { Font } from \"@react-pdf/renderer\";\n\nimport { Link as Lonk } from \"react-router-dom\";\nimport useLogGameEvent from \"../hooks/useLogGameEvent\";\nimport { DecisionPoint } from \"../hooks/useGameData\";\nimport { defineMessages } from \"@formatjs/intl\";\n\nconst INTL_MESSAGES = defineMessages({\n  results: {\n    id: \"Summary.results\",\n    defaultMessage:\n      \"You have completed the game by answering {question_count} questions.\",\n    description: \"summary results\",\n  },\n  bestResult: {\n    id: \"Summary.best-result\",\n    defaultMessage:\n      \"You've demonstrated the best possible result! Now play it one more time to make sure it wasn't mere luck :)\",\n    description: \"best result sentence\",\n  },\n  incorrectOne: {\n    id: \"Summary.incorrect-one\",\n    defaultMessage:\n      \"However, if you give only correct answers it should only take\",\n    description: \"not the best result part one\",\n  },\n  incorrectTwo: {\n    id: \"Summary.incorrect-two\",\n    defaultMessage:\n      \"questions to complete the scenario. See if you can improve your results next time!\",\n    description: \"not the best result part two\",\n  },\n  debriefOne: {\n    id: \"Summary.debrief-one\",\n    defaultMessage:\n      \"If not attending an organized debrief, make sure you download and complete the\",\n    description: \"debrief sentence part one\",\n  },\n  debriefTwo: {\n    id: \"Summary.debrief-two\",\n    defaultMessage: \"self-debriefing questions\",\n    description: \"debrief sentence part two\",\n  },\n  debriefThree: {\n    id: \"Summary.debrief-three\",\n    defaultMessage:\n      \"to optimise your learning experience. Scroll down to view results.\",\n    description: \"debrief sentence part three\",\n  },\n  gameReport: {\n    id: \"Summary.game-report\",\n    defaultMessage: \"Game Report\",\n    description: \"game report title\",\n  },\n  summary: {\n    id: \"Summary.summary\",\n    defaultMessage: \"Summary\",\n    description: \"summary header\",\n  },\n  yourAnswers: {\n    id: \"Summary.your-answers\",\n    defaultMessage: \"Your Responses\",\n    description: \"your answers header title\",\n  },\n  inProgressResults: {\n    id: \"Summary.inProgressResults\",\n    defaultMessage:\n      \"You have answered {question_count} questions. To finish the game go to menu and resume the gameplay.\",\n    description:\n      \"The message to show players arriving at the summary page while their game isn't finished\",\n  },\n  downloadProgress: {\n    id: \"Summary.downloadProgress\",\n    defaultMessage: \"Download Progress Report\",\n    description: \"link to download progress report\",\n  },\n  materialsLink: {\n    id: \"Summary.materialsLink\",\n    defaultMessage: \"Practice Materials\",\n    description: \"link to download materials page\",\n  },\n});\n\nconst Roboto = require(\"../fnt/Roboto-Regular.ttf\").default as string;\n\nFont.register({\n  family: \"Roboto\",\n  format: \"truetype\",\n  src: Roboto,\n});\n\ninterface iProps {\n  decisionPoints: DecisionPoint[];\n  gameProgress: { id: number; label: string; option: number }[];\n  completed: boolean;\n}\n\nconst Summary: React.FC<iProps> = ({\n  gameProgress,\n  decisionPoints,\n  completed,\n}) => {\n  const logGameEvent = useLogGameEvent();\n  const { formatMessage: getFM } = useIntl();\n  // const [progress, setProgress] = useState([])\n\n  const goToMenu = useGotoMenu();\n\n  let progress: { question: string; answer: string; correct: boolean }[] =\n    useMemo(() => {\n      let progress = [];\n      var i;\n      for (i = 0; i < gameProgress.length; i++) {\n        const dp = gameProgress[i];\n        const current = decisionPoints.find(({ id }) => id === dp.id)!;\n        const next = decisionPoints.find(({ id }) => id === dp.option)!;\n\n        progress.push({\n          question: current.message,\n          answer: dp.label,\n          correct: next.correct,\n        });\n      }\n      return progress;\n    }, [decisionPoints, gameProgress]);\n\n  let message: JSX.Element;\n\n  if (completed) {\n    const correct_ratio = (\n      progress.filter(({ correct }) => correct).length / progress.length\n    ).toFixed(2);\n\n    logGameEvent(\"\", \"complete\", \"game\", \"\", correct_ratio);\n\n    message = (\n      <>\n        <Text>\n          {getFM(INTL_MESSAGES.results, {\n            question_count: (\n              <Text style={{ fontWeight: \"bold\" }}>\n                {\" \"}\n                {progress.length - 2}{\" \"}\n              </Text>\n            ),\n          })}{\" \"}\n        </Text>\n        {progress.length ===\n        decisionPoints.filter(({ correct }) => correct).length ? (\n          <Text> {getFM(INTL_MESSAGES.bestResult)} </Text>\n        ) : (\n          <Text>\n            {\" \"}\n            {getFM(INTL_MESSAGES.incorrectOne)}\n            <Text style={{ fontWeight: \"bold\" }}>\n              {\" \"}\n              {decisionPoints.filter(({ correct }) => correct).length - 2}\n            </Text>{\" \"}\n            {getFM(INTL_MESSAGES.incorrectTwo)}{\" \"}\n          </Text>\n        )}\n        {/* <Text>\n          Document this encounter by clicking on the practice documentation\n          icon. There you will find a blank documentation form. Once you are\n          done, compare your documentation to the sample provided.{\" \"}\n        </Text> */}\n        <Text>\n          {getFM(INTL_MESSAGES.debriefOne)}{\" \"}\n          <Link src={`${window.location.origin}/docs/self-assessment.pdf`}>\n            {getFM(INTL_MESSAGES.debriefTwo)}\n          </Link>{\" \"}\n          {getFM(INTL_MESSAGES.debriefThree)}\n        </Text>\n      </>\n    );\n  } else {\n    message = (\n      <Text>\n        {getFM(INTL_MESSAGES.inProgressResults, {\n          question_count: (\n            <Text style={{ fontWeight: \"bold\" }}> {progress.length} </Text>\n          ),\n        })}{\" \"}\n      </Text>\n    );\n  }\n\n  const pdfContent = useMemo(() => {\n    let responses = progress.map((dp, i) => (\n      <View key={i}>\n        <View>\n          <Text style={{ fontWeight: \"bold\" }}>Q: </Text>\n          <Text>{dp.question}</Text>\n        </View>\n        <View>\n          <Text style={{ fontWeight: \"bold\" }}>A: </Text>\n          <Text\n            style={dp.correct ? { color: \"#009933\" } : { color: \"#cc0000\" }}\n          >\n            {dp.answer} ({dp.correct ? \"Correct\" : \"Incorrect\"})\n          </Text>\n        </View>\n      </View>\n    ));\n    const html = (\n      <Document>\n        <Page>\n          {/* <style\n            dangerouslySetInnerHTML={{\n              __html: `html, body { font-family: Helvetica, Arial, sans-serif; font-size: 14px; line-height: 130%; background-color: #ffffff; color: #000;}\n\t\t\t\t\t\t\th1, h2, p, ol { font-weight: normal; margin-top: 0.3em; margin-bottom: 0.3em; padding-top: 0; padding-bottom: 0; line-height: 130%; color: #000; }`,\n            }}\n          /> */}\n          <View\n            style={{\n              fontFamily: \"Roboto\",\n              fontSize: 14,\n              lineHeight: \"130%\",\n              backgroundColor: \"#ffffff\",\n              color: \"#000\",\n            }}\n          >\n            <Text\n              style={{\n                fontSize: 32,\n                paddingBottom: \"0.3em\",\n                borderBottom: \"2px solid #000000\",\n              }}\n            >\n              {getFM(INTL_MESSAGES.gameReport)}\n            </Text>\n            <Text style={{ fontSize: 24 }}>{getFM(INTL_MESSAGES.summary)}</Text>\n            <View>{message}</View>\n            <Text style={{ fontSize: 24 }}>\n              {getFM(INTL_MESSAGES.yourAnswers)}\n            </Text>\n            <View>{responses}</View>\n          </View>\n        </Page>\n      </Document>\n    );\n    return html;\n  }, [message, progress, getFM]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"right controls\">\n        <button className=\"button button--menu\" onClick={goToMenu}>\n          Menu\n        </button>\n      </div>\n      <div className=\"panel info\">\n        <header>\n          <FormattedMessage\n            id=\"Summary.title\"\n            defaultMessage=\"Congratulations!\"\n            description=\"Summary title\"\n            tagName=\"h1\"\n          />\n        </header>\n        <div className=\"main summary\">\n          <div className=\"content\">\n            <div>{message}</div>\n            <h2 style={{ fontSize: 24 }}>\n              {getFM(INTL_MESSAGES.yourAnswers)}:\n            </h2>\n            <ol className=\"responses\">\n              {progress.map((dp) => (\n                <li>\n                  <div>{dp.question}</div>\n                  <div\n                    className={dp.correct ? \"correct\" : \"wrong\"}\n                    style={\n                      dp.correct ? { color: \"#009933\" } : { color: \"#cc0000\" }\n                    }\n                  >\n                    <strong>\n                      {dp.answer} ({dp.correct ? \"Correct\" : \"Incorrect\"})\n                    </strong>\n                  </div>\n                </li>\n              ))}\n            </ol>\n          </div>\n        </div>\n        <footer>\n          <PDFDownloadLink\n            className=\"button\"\n            document={pdfContent}\n            fileName=\"progress-report.pdf\"\n          >\n            {({ blob, url, loading, error }) =>\n              loading\n                ? \"Loading document...\"\n                : getFM(INTL_MESSAGES.downloadProgress)\n            }\n          </PDFDownloadLink>\n\n          <Lonk to=\"../materials/\">{getFM(INTL_MESSAGES.materialsLink)}</Lonk>\n\n          {/* <a href=\"/module/_/ui/game/tpl/materials.html\" className=\"button\">\n            {\" \"}\n            Practice Documentation{\" \"}\n          </a> */}\n        </footer>\n      </div>\n    </div>\n  );\n};\n\nexport default Summary;\n","import { useCallback } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { useHistory, useParams } from \"react-router\";\nimport { DecisionPoint } from \"../hooks/useGameData\";\nimport \"./Transition.scss\";\n\ninterface iProps {\n  decisionPoint: DecisionPoint;\n}\n\nconst Transition: React.FC<iProps> = ({ decisionPoint: dp }) => {\n  const history = useHistory();\n  const { game_id } = useParams<{ game_id: string }>();\n\n  const playNextVideo = useCallback(() => {\n    history.push(`/games/${game_id}/video/`);\n  }, [history, game_id]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"panel feedback\">\n        <header>\n          <FormattedMessage\n            id=\"Transition.title\"\n            defaultMessage=\"Game Paused\"\n            description=\"game paused transition title\"\n            tagName=\"h1\"\n          />\n        </header>\n        <div className=\"main\">{dp?.feedback}</div>\n        <footer>\n          <p className=\"controls\">\n            <button className=\"Link\" onClick={playNextVideo}>\n              Resume Game\n            </button>\n          </p>\n        </footer>\n      </div>\n    </div>\n  );\n};\n\nexport default Transition;\n","import { FormattedMessage } from \"react-intl\";\nimport { useGotoMenu } from \"../util\";\nimport \"./Materials.scss\";\n\ninterface iProps {\n  strings: {\n    content: {\n      label: string;\n      item: string;\n    }[];\n  };\n}\n\nconst Materials: React.FC<iProps> = ({ strings: { content } }) => {\n  const gotoMenu = useGotoMenu();\n\n  return (\n    <body className=\"documentation-container\">\n      <div className=\"panel feedback\">\n        <header>\n          <FormattedMessage\n            id=\"Materials.title\"\n            defaultMessage=\"Materials\"\n            description=\"Materials title\"\n            tagName=\"h1\"\n          />\n        </header>\n\n        <div className=\"right controls\">\n          <button className=\"button button--menu\" onClick={gotoMenu}>\n            <FormattedMessage\n              id=\"General.menu\"\n              defaultMessage=\"Menu\"\n              description=\"Go To Menu Button\"\n            />\n          </button>\n        </div>\n\n        <footer>\n          <div className=\"content\">\n            {content.map(({ label, item }) => (\n              <>\n                <ul>\n                  <a href={item} className=\"button\" download>\n                    {label}\n                  </a>\n                </ul>\n              </>\n            ))}\n          </div>\n        </footer>\n      </div>\n    </body>\n  );\n};\n\nexport default Materials;\n","import { FormattedMessage } from \"react-intl\";\nimport { Link } from \"react-router-dom\";\nimport \"./Principles.scss\";\n\ninterface iProps {\n  strings: {\n    paragraph: string;\n    bullet_list: string[];\n  };\n}\n\nconst Principles: React.FC<iProps> = ({ strings }) => {\n  return (\n    <div className=\"container\">\n      <div className=\"panel info\">\n        <header>\n          <h1>\n            <Link to=\"/\" aria-label=\"Return to menu\">\n              <span className=\"icon-arrow-left\"></span>\n            </Link>\n            <FormattedMessage\n              id=\"Principles.title\"\n              defaultMessage=\"Essential Principles\"\n              description=\"Principles title\"\n            />\n          </h1>\n        </header>\n        <div className=\"main\">\n          <div className=\"content cf\">\n            <p>{strings.paragraph}</p>\n            <ul>\n              {strings.bullet_list.map((list_item) => (\n                <li>{list_item}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Principles;\n","import { useEffect, useMemo, useState } from \"react\";\nimport { generateUUID } from \"../util\";\nimport { VHEStorage } from \"./useStorage\";\n\ninterface iGameSave {\n  uuid: string;\n  gamesaved: boolean;\n  subtitles: boolean;\n  fullscreen: boolean;\n  currentStep: number;\n  videoposition: number;\n  progress: {\n    id: number;\n    label: string;\n    option: number;\n  }[];\n}\n\nconst useGameState = (storageKey: string) => {\n  const [loaded] = useState(\n    VHEStorage.getObject(storageKey) as iGameSave | null\n  );\n\n  const [uuid] = useState(loaded?.uuid ?? generateUUID());\n  const [gamesaved, setGamesaved] = useState(loaded?.gamesaved ?? false);\n  const [currentStep, setCurrentStep] = useState(loaded?.currentStep ?? 0);\n  const [videoposition, setVideoposition] = useState(\n    loaded?.videoposition ?? 0\n  );\n  const [progress, setProgress] = useState(loaded?.progress ?? []);\n\n  useEffect(() => {\n    VHEStorage.setObject(storageKey, {\n      uuid,\n      gamesaved,\n      subtitles: false,\n      fullscreen: false,\n      currentStep,\n      videoposition,\n      progress,\n    });\n  }, [uuid, gamesaved, currentStep, videoposition, progress, storageKey]);\n\n  const gameState = useMemo(\n    () => ({\n      newGame: () => {\n        setGamesaved(true);\n        setCurrentStep(0);\n        setVideoposition(0);\n        setProgress([]);\n      },\n      selectOption: (nextId: number, label: string) => {\n        setProgress((ps) => [\n          ...ps,\n          {\n            id: currentStep,\n            label: label,\n            option: nextId,\n          },\n        ]);\n        setCurrentStep(nextId);\n      },\n      currentStep,\n      setCurrentStep,\n      videoposition,\n      setVideoposition,\n      progress,\n      gamesaved,\n    }),\n    [currentStep, gamesaved, progress, videoposition]\n  );\n\n  return gameState;\n};\n\nexport default useGameState;\n","// @ts-nocheck\n\nimport React, { Component } from \"react\";\nimport \"./AnimatedClock.scss\";\n\nexport default class Clock extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: new Date(),\n    };\n  }\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.setState({\n        time: new Date(),\n      });\n    }, 1000);\n  }\n\n  componentWillMount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <div className=\"clock\">\n        <div\n          className=\"hour_hand\"\n          style={{\n            transform: `rotateZ(${this.state.time.getHours() * 30}deg)`,\n          }}\n        />\n        <div\n          className=\"min_hand\"\n          style={{\n            transform: `rotateZ(${this.state.time.getMinutes() * 6}deg)`,\n          }}\n        />\n        <div\n          className=\"sec_hand\"\n          style={{\n            transform: `rotateZ(${this.state.time.getSeconds() * 6}deg)`,\n          }}\n        />\n        <span className=\"twelve\">12</span>\n        <span className=\"one\">1</span>\n        <span className=\"two\">2</span>\n        <span className=\"three\">3</span>\n        <span className=\"four\">4</span>\n        <span className=\"five\">5</span>\n        <span className=\"six\">6</span>\n        <span className=\"seven\">7</span>\n        <span className=\"eight\">8</span>\n        <span className=\"nine\">9</span>\n        <span className=\"ten\">10</span>\n        <span className=\"eleven\">11</span>\n      </div>\n    );\n  }\n}\n","import { FormattedMessage } from \"react-intl\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport AnimatedClock from \"../clock/AnimatedClock\";\nimport { useGotoMenu } from \"../util\";\nimport \"./Clock.scss\";\n\ninterface iProps {}\n\nconst Clock: React.FC<iProps> = () => {\n  const history = useHistory();\n  const { game_id } = useParams<{ game_id: string }>();\n\n  const gotoMenu = useGotoMenu();\n  const gotoDecision = () => history.push(`/games/${game_id}/decision/`);\n\n  return (\n    <div className=\"container Clock\">\n      <div className=\"panel menu\">\n        <div className=\"main\">\n          <FormattedMessage\n            id=\"Clock.header\"\n            defaultMessage=\"Take pulse and press Continue.\"\n            description=\"take pulse message\"\n            tagName=\"h2\"\n          />\n          <p className=\"warning\">\n            <FormattedMessage\n              id=\"Clock.warning\"\n              defaultMessage=\"Please note that for technical reasons this learning object can not\n              be made accessible. Contact your instructor if you need help.\"\n              description=\"warning about accesibility\"\n            />\n          </p>\n        </div>\n        <footer>\n          <p className=\"controls\">\n            <button onClick={gotoDecision} className=\"button\">\n              <FormattedMessage\n                id=\"Clock.continue\"\n                defaultMessage=\"Continue\"\n                description=\"continue button\"\n              />\n            </button>\n          </p>\n        </footer>\n      </div>\n      <div className=\"left controls\">\n        <button className=\"button button--menu\">\n          <FormattedMessage\n            id=\"General.replay\"\n            defaultMessage=\"Replay\"\n            description=\"Replay Video Button\"\n          />\n        </button>\n      </div>\n      <div className=\"right controls\">\n        <button className=\"button button--menu\" onClick={gotoMenu}>\n          <FormattedMessage\n            id=\"General.menu\"\n            defaultMessage=\"Menu\"\n            description=\"Go To Menu Button\"\n          />\n        </button>\n      </div>\n      <audio autoPlay loop src=\"/media/heart-beat.mp3\"></audio>\n      <AnimatedClock></AnimatedClock>\n    </div>\n  );\n};\n\nexport default Clock;\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\n\nimport { Switch, useHistory, useRouteMatch } from \"react-router-dom\";\nimport { SentryRoute as Route } from \"./util\";\nimport { useIntl } from \"react-intl\";\n\nimport Menu from \"./pages/Menu\";\nimport \"./App.scss\";\n\nimport { useGameData } from \"./hooks/useGameData\";\n\nimport Objectives from \"./pages/Objectives\";\nimport Intro from \"./pages/Intro\";\nimport Decision from \"./pages/Decision\";\nimport Video from \"./pages/Video\";\nimport Credits from \"./pages/Credits\";\nimport Instructions from \"./pages/Instructions\";\nimport Feedback from \"./pages/Feedback\";\nimport Settings from \"./pages/Settings\";\nimport Summary from \"./pages/Summary\";\nimport Transition from \"./pages/Transition\";\nimport Materials from \"./pages/Materials\";\nimport Principles from \"./pages/Principles\";\nimport useLogGameEvent from \"./hooks/useLogGameEvent\";\nimport { getBrowser, concatenatePaths } from \"./util\";\nimport useGameState from \"./hooks/useGameState\";\nimport Clock from \"./pages/Clock\";\n\ninterface iProps {\n  gameId: string;\n}\n\nconst App: React.FC<iProps> = ({ gameId }) => {\n  const history = useHistory();\n  let { path, url } = useRouteMatch();\n\n  const logGameEvent = useLogGameEvent();\n  const locale = useIntl().locale;\n\n  const gameData = useGameData(gameId, locale);\n  const gameState = useGameState(gameId);\n  const minSteps = gameData.decisionpoints.filter(\n    ({ correct }) => correct\n  ).length;\n\n  const [subtitlesEnabled, setSubtitlesEnabled] = useState<boolean>(true);\n  const handleSubtitlesLanguageSet = useCallback(\n    (lang) => setSubtitlesEnabled(!!lang),\n    []\n  );\n\n  const lastDecisionPoint =\n    gameData.decisionpoints[gameData.decisionpoints.length - 1].id ===\n    gameState.currentStep;\n\n  const currentDecisionPoint = useMemo(() => {\n    const currentDP = gameData.decisionpoints.find(\n      ({ id }) => id === gameState.currentStep\n    )!;\n    if (!currentDP)\n      console.error(`couldnt find dp for step${gameState.currentStep}`);\n    return currentDP;\n  }, [gameData.decisionpoints, gameState.currentStep]);\n\n  const handleStartNewGame = useCallback(() => {\n    gameState.newGame();\n\n    history.push(concatenatePaths(url, `/intro/`));\n    logGameEvent(\"\", \"start\", \"game\", getBrowser(), \"\");\n  }, [url, history, logGameEvent, gameState]);\n\n  const handleResumeGame = useCallback(() => {\n    var dp = currentDecisionPoint;\n\n    if (dp && lastDecisionPoint) {\n      history.push(concatenatePaths(url, `/summary/`));\n    } else if (gameState.videoposition > 0.1) {\n      history.push(concatenatePaths(url, `/video/`));\n    } else {\n      history.push(concatenatePaths(url, `/decision/`));\n    }\n\n    logGameEvent(\"\", \"resume\", \"game\", \"\", \"\");\n  }, [\n    history,\n    logGameEvent,\n    gameState.videoposition,\n    currentDecisionPoint,\n    lastDecisionPoint,\n    url,\n  ]);\n\n  const handleOptionChosen = useCallback(\n    (nextId: number, label: string) => {\n      const next = gameData.decisionpoints.find(({ id }) => id === nextId);\n\n      gameState.selectOption(nextId, label);\n\n      logGameEvent(\n        \"\",\n        \"select\",\n        \"answer\",\n        label,\n        next?.correct ? \"correct\" : \"incorrect\"\n      );\n\n      switch (next?.type) {\n        case \"video\":\n          history.push(concatenatePaths(url, `/video/`));\n          break;\n        case \"lo\":\n          if (next.feedback > \"\") {\n            // If there's feedback, show it then advance\n            history.push(concatenatePaths(url, `/feedback/`));\n          } else {\n            history.push(concatenatePaths(url, `/clock/`));\n          }\n          break;\n      }\n\n      // google analytics ???\n    },\n    [url, gameData.decisionpoints, history, logGameEvent, gameState]\n  );\n\n  const handleVideoFinished = useCallback(() => {\n    const dp = currentDecisionPoint;\n    gameState.setVideoposition(0);\n\n    if (lastDecisionPoint) {\n      history.push(concatenatePaths(url, `/summary/`));\n    } else if (dp && dp.options.length > 0) {\n      if (dp.feedback > \"\") {\n        history.push(concatenatePaths(url, `/feedback/`));\n      } else {\n        if (dp.type === \"lo\") {\n          history.push(concatenatePaths(url, `/clock/`));\n        } else {\n          // No feedback means go directly to the decision\n          history.push(concatenatePaths(url, `/decision/`));\n        }\n      }\n    } else {\n      gameState.setCurrentStep(gameState.currentStep + 1);\n      if (dp?.next) {\n        // If there are no options, go to the next decision point\n        history.push(concatenatePaths(url, `/clock/`));\n      } else {\n        history.push(concatenatePaths(url, `/transition/`));\n      }\n    }\n  }, [currentDecisionPoint, history, lastDecisionPoint, gameState, url]);\n\n  useEffect(() => {\n    Object.entries(gameData.colors).forEach(\n      ([key, value]: [string, string]) => {\n        document.body.style.setProperty(key, value);\n      }\n    );\n  }, [gameData.colors]);\n\n  return (\n    <div className=\"fullscreen\" style={gameData.colors as React.CSSProperties}>\n      <div className=\"view\" role=\"application\">\n        <Switch>\n          <Route path={concatenatePaths(path, `/credits`)}>\n            <Credits strings={gameData.strings.credits} />\n          </Route>\n\n          <Route path={concatenatePaths(path, `/decision`)}>\n            <Decision\n              decisionPoint={currentDecisionPoint}\n              onOptionChosen={handleOptionChosen}\n            />\n          </Route>\n\n          <Route path={concatenatePaths(path, `/feedback`)}>\n            <Feedback decisionPoint={currentDecisionPoint} />\n          </Route>\n\n          <Route path={concatenatePaths(path, `/instructions`)}>\n            <Instructions\n              minSteps={minSteps}\n              strings={gameData.strings.instructions}\n            />\n          </Route>\n\n          <Route path={concatenatePaths(path, `/intro`)}>\n            <Intro strings={gameData.strings.intro} />\n          </Route>\n\n          <Route path={concatenatePaths(path, `/materials`)}>\n            <Materials strings={gameData.strings.materials} />\n          </Route>\n\n          <Route path={concatenatePaths(path, `/objectives`)}>\n            <Objectives strings={gameData.strings.objectives} />\n          </Route>\n\n          {gameData.strings.principles ? (\n            <Route path={concatenatePaths(path, `/principles`)}>\n              <Principles strings={gameData.strings.principles} />\n            </Route>\n          ) : null}\n\n          <Route path={concatenatePaths(path, `/settings`)}>\n            <Settings\n              subtitlesEnabled={subtitlesEnabled}\n              onSubtitlesToggled={setSubtitlesEnabled}\n            />\n          </Route>\n\n          <Route path={concatenatePaths(path, `/summary`)}>\n            <Summary\n              decisionPoints={gameData.decisionpoints}\n              gameProgress={gameState.progress}\n              completed={lastDecisionPoint}\n            />\n          </Route>\n\n          <Route path={concatenatePaths(path, `/transition`)}>\n            <Transition decisionPoint={currentDecisionPoint} />\n          </Route>\n\n          <Route path={concatenatePaths(path, `/video`)}>\n            <Video\n              decisionPoint={currentDecisionPoint}\n              onVideoFinished={handleVideoFinished}\n              videoposition={gameState.videoposition}\n              setVideoposition={gameState.setVideoposition}\n              subtitlesLanguage={subtitlesEnabled ? locale : null}\n              onSubtitlesLanguageSet={handleSubtitlesLanguageSet}\n            />\n          </Route>\n\n          <Route path={concatenatePaths(path, `/clock`)}>\n            <Clock />\n          </Route>\n\n          <Route path={concatenatePaths(path, `/`)}>\n            <Menu\n              strings={gameData.strings.menu}\n              startNewGame={handleStartNewGame}\n              resumeGame={handleResumeGame}\n              gamesaved={gameState.gamesaved}\n              pagesToShow={{\n                principles: !!gameData.strings.principles,\n              }}\n            />\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { FormattedMessage } from \"react-intl\";\nimport { Link } from \"react-router-dom\";\nimport \"./Menu.scss\";\n\ninterface iProps {}\n\nconst Home: React.FC<iProps> = () => {\n  return (\n    <div className=\"container\">\n      <div className=\"panel menu\">\n        <header>\n          <FormattedMessage\n            id=\"Home.title\"\n            defaultMessage=\"Virtual Healthcare Experence\"\n            description=\"Title for homepage\"\n            tagName=\"h1\"\n          />\n        </header>\n        <div className=\"main\">\n          <div className=\"content\">\n            <ul className=\"controls\">\n              <li>\n                <Link to=\"/games/emergency\">\n                  <FormattedMessage\n                    id=\"Home.emergency\"\n                    defaultMessage=\"Emergency Room\"\n                    description=\"Name for emergency game\"\n                  />\n                </Link>\n              </li>\n              <li>\n                <Link to=\"/games/post_partum\">\n                  <FormattedMessage\n                    id=\"Home.postPartum_fr\"\n                    defaultMessage=\"Post Partum FR\"\n                    description=\"Post Partum Francais game name\"\n                  />\n                </Link>\n              </li>\n              <li>\n                <Link to=\"/games/labor_delivery\">\n                  <FormattedMessage\n                    id=\"Home.labor_delivery_fr\"\n                    defaultMessage=\"Labour and Delivery FR\"\n                    description=\"Labour and Delivery Francais game name\"\n                  />\n                </Link>\n              </li>\n              <li>\n                <Link to=\"/games/prenatal\">\n                  <FormattedMessage\n                    id=\"Home.prenatal_fr\"\n                    defaultMessage=\"Prenatal Care FR\"\n                    description=\"Prenatal Care Francais game name\"\n                  />\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { IntlProvider } from \"react-intl\";\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport { SentryRoute as Route } from \"./util\";\nimport { LoggingContextProvider } from \"./hooks/useLogGameEvent\";\n\nimport enMessages from \"./lang-compiled/en.json\";\nimport frMessages from \"./lang-compiled/fr.json\";\nimport Home from \"./pages/Home\";\nimport { cookies } from \"./hooks/useStorage\";\n\nconst savedLocale = cookies.get(\"locale\");\nconst locale =\n  savedLocale === \"fr\" || navigator.languages[0].startsWith(\"fr\") ? \"fr\" : \"en\";\nconst messages = locale === \"fr\" ? frMessages : enMessages;\n\nReactDOM.render(\n  <React.StrictMode>\n    <IntlProvider messages={messages} locale={locale} defaultLocale=\"en\">\n      <Router basename=\"/\">\n        <LoggingContextProvider>\n          <Switch>\n            <Route path=\"/games/:game_id\">\n              {(params) => <App gameId={params.match?.params.game_id!} />}\n            </Route>\n            <Route>\n              <Home />\n            </Route>\n          </Switch>\n        </LoggingContextProvider>\n      </Router>\n    </IntlProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}