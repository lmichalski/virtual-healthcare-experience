{"version":3,"sources":["fnt/Roboto-Regular.ttf","pages/Menu.tsx","hooks/useGameData.ts","pages/Objectives.tsx","pages/Intro.tsx","hooks/useLogGameEvent.tsx","util.ts","pages/Decision.tsx","pages/Video.tsx","pages/Credits.tsx","pages/Instructions.tsx","pages/Feedback.tsx","hooks/useStorage.ts","pages/Settings.tsx","pages/Summary.tsx","pages/Transition.tsx","pages/Materials.tsx","pages/Principles.tsx","hooks/useGameState.ts","App.tsx","reportWebVitals.ts","pages/Home.tsx","index.tsx"],"names":["Menu","startNewGame","resumeGame","gamesaved","strings","showPrinciples","pagesToShow","principles","game_id","useParams","className","title","onClick","id","defaultMessage","description","to","games","emergency","en","require","post_partum","fr","labor_delivery","prenatal_fr","Objectives","paragraph1","paragraph2","bullet_list","map","list_item","Intro","history","useHistory","useState","currentMessage","setCurrentMessage","intro","introCards","skipToNext","useCallback","length","n","push","text","LoggingContext","React","createContext","eventLog","pushEvent","event","this","LoggingContextProvider","props","Provider","value","useLogGameEvent","loggingContext","useContext","userUuid","undefined","level","type","target","label","data","game","user","datetime","Date","console","log","useGotoMenu","logGameEvent","Decision","decisionPoint","onOptionChosen","gotoMenu","dp","message","options","randomizedOptions","optionBoxes","useMemo","opt","next","replayVideo","tabIndex","Video","onVideoFinished","videoposition","setVideoposition","subtitlesEnabled","onSubtitlesToggled","location","useLocation","videoRef","useRef","iframeRef","skipVideo","time","video","vimeo_url","current","api","videojs","dispose","currentTime","useEffect","handleUserKeyPress","e","keyCode","preventDefault","pathname","goBack","paused","play","pause","window","addEventListener","removeEventListener","clip","bufferLength","sources","src","subtitles","kind","srclang","ready","on","duration","doc","document","getElementById","style","display","load","player","Player","setCurrentTime","off","seconds","language","enableTextTrack","disableTextTrack","ref","frameBorder","allow","allowFullScreen","Credits","paragraphs","credits_sections","end_paragraphs","paragraph","header","items","item","end_paragraph","Instructions","minSteps","Feedback","goNext","role","tagName","feedback","maxAge","isLocalStorageAvailable","str","localStorage","setItem","removeItem","cookies","put","key","maxCookieAge","cookie","get","cname","name","ca","decodeURIComponent","split","i","c","charAt","substring","indexOf","remove","VHEStorage","set","getItem","setObject","o","JSON","stringify","getObject","r","parse","Settings","fullscreenElement","isFullscreen","setIsFullscreen","handleSubtitlesChange","evt","handleFullscreenChange","exitFullscreen","then","documentElement","requestFullscreen","catch","err","alert","locale","useIntl","handleSetEnglish","reload","handleSetFrench","checked","onChange","htmlFor","startsWith","Roboto","default","Font","register","family","format","Summary","gameProgress","decisionPoints","completed","goToMenu","progress","find","option","question","answer","correct","filter","toFixed","fontWeight","origin","pdfContent","responses","color","fontFamily","fontSize","lineHeight","backgroundColor","paddingBottom","borderBottom","fileName","blob","url","loading","error","Transition","playNextVideo","Materials","href","download","Principles","useGameState","storageKey","loaded","uuid","d","getTime","performance","now","replace","Math","random","floor","toString","generateUUID","setGamesaved","currentStep","setCurrentStep","setProgress","fullscreen","newGame","selectOption","nextId","ps","App","gameId","useRouteMatch","path","gameData","Error","useGameData","gameState","decisionpoints","setSubtitlesEnabled","lastDecisionPoint","currentDecisionPoint","currentDP","handleStartNewGame","isIE","documentMode","opr","addons","opera","navigator","userAgent","InstallTrigger","test","HTMLElement","safari","pushNotification","StyleMedia","chrome","webstore","runtime","getBrowser","handleResumeGame","handleOptionChosen","handleVideoFinished","Object","entries","colors","forEach","body","setProperty","credits","instructions","objectives","menu","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Home","languages","messages","frMessages","enMessages","ReactDOM","render","StrictMode","defaultLocale","basename","params","match"],"mappings":"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","file":"static/js/main.bc9edb31.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Roboto-Regular.a8d6ac03.ttf\";","import { FormattedMessage } from \"react-intl\";\nimport { Link, useParams } from \"react-router-dom\";\nimport \"./Menu.scss\";\n\ninterface iProps {\n  startNewGame: () => void;\n  resumeGame: () => void;\n  gamesaved: boolean;\n  strings: {\n    title: string;\n  };\n  pagesToShow: {\n    principles: boolean;\n  };\n}\n\nconst Menu: React.FC<iProps> = ({\n  startNewGame,\n  resumeGame,\n  gamesaved,\n  strings,\n  pagesToShow: { principles: showPrinciples },\n}) => {\n  const { game_id } = useParams<{ game_id: string }>();\n\n  return (\n    <div className=\"container\">\n      <div className=\"panel menu\">\n        <header>\n          <h1>{strings.title}</h1>\n        </header>\n        <div className=\"main\">\n          <div className=\"content\">\n            <ul className=\"controls\">\n              <li>\n                <button className=\"Link\" onClick={startNewGame}>\n                  <FormattedMessage\n                    id=\"Menu.newGame\"\n                    defaultMessage=\"New Game\"\n                    description=\"New Game Button\"\n                  />\n                </button>\n              </li>\n              <li>\n                <button\n                  className={`Link ${gamesaved ? \"active\" : \"disabled\"}`}\n                  onClick={resumeGame}\n                >\n                  <FormattedMessage\n                    id=\"Menu.resumeGame\"\n                    defaultMessage=\"Resume Game\"\n                    description=\"Resume Game Button\"\n                  />\n                </button>\n              </li>\n              <li>\n                <Link to={`/games/${game_id}/objectives/`}>\n                  <FormattedMessage\n                    id=\"Menu.objectives\"\n                    defaultMessage=\"Learning Objectives\"\n                    description=\"Objectives Button\"\n                  />\n                </Link>\n              </li>\n              {showPrinciples ? (\n                <li>\n                  <Link to={`/games/${game_id}/principles/`}>\n                    <FormattedMessage\n                      id=\"Menu.principles\"\n                      defaultMessage=\"Essential Principles\"\n                      description=\"Principles Button\"\n                    />\n                  </Link>\n                </li>\n              ) : null}\n              <li>\n                <Link to={`/games/${game_id}/settings/`}>\n                  <FormattedMessage\n                    id=\"Menu.gameOptions\"\n                    defaultMessage=\"Options\"\n                    description=\"Options Button\"\n                  />\n                </Link>\n              </li>\n              <li>\n                <Link to={`/games/${game_id}/instructions/`}>\n                  <FormattedMessage\n                    id=\"Menu.instructions\"\n                    defaultMessage=\"How to Play\"\n                    description=\"How to Play Button\"\n                  />\n                </Link>\n              </li>\n              {/* <li>\n                <Link to={`/games/${game_id}/materials/`}>\n                  <FormattedMessage\n                    id=\"Menu.materials\"\n                    defaultMessage=\"Self-Assessment\"\n                    description=\"Link to self-assessment materials\"\n                  />\n                </Link>\n              </li> */}\n              <li>\n                <Link to={`/games/${game_id}/credits/`}>\n                  <FormattedMessage\n                    id=\"Menu.credits\"\n                    defaultMessage=\"Credits\"\n                    description=\"Credits Button\"\n                  />\n                </Link>\n              </li>\n              <li>\n                <Link to={`/games/${game_id}./`}>\n                  <FormattedMessage\n                    id=\"Menu.exit\"\n                    defaultMessage=\"Exit Game\"\n                    description=\"Exit Game Button\"\n                  />\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Menu;\n","import { useMemo } from \"react\";\n\nconst games: Record<string, Record<string, GameDataShape>> = {\n  emergency: {\n    en: require(\"../games/er_game_data.json\"),\n  },\n  post_partum: {\n    fr: require(\"../games/post_partum_fr.json\"),\n  },\n  labor_delivery: {\n    fr: require(\"../games/labor_delivery_fr.json\"),\n  },\n  prenatal_fr: {\n    fr: require(\"../games/prenatal_fr.json\"),\n  },\n};\n\nexport interface DecisionPoint {\n  id: number;\n  title?: string;\n  type: string; //\"video\" | \"string\",\n  data: string;\n\n  video:\n    | {\n        vimeo_url: string;\n        videojs_url?: string;\n      }\n    | {\n        vimeo_url?: string;\n        videojs_url: string;\n      }\n    | null;\n\n  correct: boolean;\n  feedback: string;\n  message: string;\n  options: {\n    label: string;\n    next: number;\n  }[];\n  next: null;\n}\n\ninterface GameDataShape {\n  decisionpoints: DecisionPoint[];\n  colors: {\n    \"--theme-light\": string;\n    \"--theme-dark\": string;\n    \"--theme-primary\": string;\n    \"--primary-text-color\": string;\n    \"--link-color\": string;\n  };\n  strings: {\n    menu: {\n      title: string;\n    };\n    intro: {\n      introCards: string[];\n    };\n    objectives: {\n      paragraph1: string;\n      paragraph2: string;\n      bullet_list: string[];\n    };\n    principles?: {\n      paragraph: string;\n      bullet_list: string[];\n    };\n    instructions: {\n      paragraph: string;\n      bullet_list: string[];\n    };\n    credits: {\n      paragraphs: string[];\n      credits_sections: {\n        header: string;\n        items: string[];\n      }[];\n      end_paragraphs: string[];\n    };\n  };\n}\n\nexport const useGameData = (game: string, locale: string): GameDataShape => {\n  const data = useMemo(\n    () => games[game]?.[locale] || games[game]?.[\"en\"] || games[game]?.[\"fr\"],\n    [game, locale]\n  );\n  console.log(data);\n  if (!data) {\n    throw new Error(\"That game could not be found\");\n  }\n  return data;\n};\n","import { FormattedMessage } from \"react-intl\";\nimport { Link } from \"react-router-dom\";\nimport \"./Objectives.scss\";\n\ninterface iProps {\n  strings: {\n    paragraph1: string;\n    paragraph2: string;\n    bullet_list: string[];\n  };\n}\n\nconst Objectives: React.FC<iProps> = ({ strings }) => {\n  return (\n    <div className=\"container\">\n      <div className=\"panel info\">\n        <header>\n          <h1>\n            <Link to=\"/\" aria-label=\"Return to menu\">\n              <span className=\"icon-arrow-left\"></span>\n            </Link>\n            <FormattedMessage\n              id=\"Objectives.title\"\n              defaultMessage=\"Learning Objectives\"\n              description=\"Learning Objectives title\"\n            />\n          </h1>\n        </header>\n        <div className=\"main\">\n          <div className=\"content cf\">\n            <p>{strings.paragraph1}</p>\n            <p>{strings.paragraph2}</p>\n            <ul>\n              {strings.bullet_list.map((list_item) => (\n                <li>{list_item}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Objectives;\n","import { useCallback, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport \"./Intro.scss\";\n\ninterface iProps {\n  strings: {\n    introCards: string[];\n  };\n}\n\nconst Intro: React.FC<iProps> = ({ strings }) => {\n  const history = useHistory();\n  const { game_id } = useParams<{ game_id: string }>();\n  const label = \"Next\";\n\n  const [currentMessage, setCurrentMessage] = useState(0);\n  const intro = strings.introCards;\n\n  const skipToNext = useCallback(() => {\n    if (currentMessage < intro.length - 1) {\n      setCurrentMessage((n) => n + 1);\n    } else {\n      history.push(`/games/${game_id}/video/`);\n    }\n  }, [currentMessage, history, intro.length, game_id]);\n\n  const text = intro[currentMessage];\n\n  return (\n    <div className=\"container\">\n      <div className=\"panel intro\">\n        <div className=\"main\">\n          <div className=\"intro-content\">{text}</div>\n        </div>\n        <footer>\n          <p className=\"controls\">\n            <button className=\"button\" onClick={skipToNext}>\n              {label}\n            </button>\n          </p>\n        </footer>\n      </div>\n    </div>\n  );\n};\n\nexport default Intro;\n","import React, { useCallback, useContext } from \"react\";\n\ninterface Event {\n  game: string;\n  level: string;\n  type: string;\n  target: string;\n  label?: string;\n  data?: string | number;\n  user?: string;\n  datetime: Date;\n}\n\nconst emptyLoggingContext = () => ({\n  eventLog: [] as Event[],\n  pushEvent(event: Event) {\n    this.eventLog.push(event);\n  },\n});\n\nconst LoggingContext = React.createContext(emptyLoggingContext());\n\nexport const LoggingContextProvider: React.FC = (props) => {\n  return <LoggingContext.Provider value={emptyLoggingContext()} {...props} />;\n};\n\nconst useLogGameEvent = () => {\n  const loggingContext = useContext(LoggingContext);\n  const userUuid = undefined; // useUser().uuid\n\n  function logGameEvent(\n    level: string,\n    type: string,\n    target: string,\n    label?: string,\n    data?: string | number\n  ) {\n    loggingContext.pushEvent({\n      game: \"app.name\",\n      level: level,\n      type: type,\n      target: target,\n      label: label,\n      data: data,\n      user: userUuid,\n      datetime: new Date(),\n    });\n\n    console.log(loggingContext.eventLog);\n  }\n\n  return useCallback(logGameEvent, [loggingContext, userUuid]);\n};\n\nexport default useLogGameEvent;\n","import { useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { useParams } from \"react-router-dom\";\nimport useLogGameEvent from \"./hooks/useLogGameEvent\";\n\nexport function generateUUID(): string {\n  var r: string;\n  let d = new Date().getTime();\n  if (\n    typeof performance !== \"undefined\" &&\n    typeof performance.now === \"function\"\n  ) {\n    d += performance.now(); //use high-precision timer if available\n  }\n  r = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n    var r = (d + Math.random() * 16) % 16 | 0;\n    d = Math.floor(d / 16);\n    return (c === \"x\" ? r : (r & 0x3) | 0x8).toString(16);\n  });\n  return r;\n}\n\nexport const useGotoMenu = () => {\n  const history = useHistory();\n  const logGameEvent = useLogGameEvent();\n  const { game_id } = useParams<{ game_id: string }>();\n\n  const gotoMenu = useCallback(() => {\n    logGameEvent(\"\", \"open\", \"menu\", \"\", \"\");\n    history.push(`/games/${game_id}/`);\n  }, [history, logGameEvent, game_id]);\n  return gotoMenu;\n};\n\nexport function getBrowser() {\n  var browser, isIE;\n  // @ts-ignore\n  isIE = /*@cc_on!@*/ false || !!document.documentMode;\n\n  // @ts-ignore\n  if (\n    // @ts-ignore\n    (!!window.opr && !!opr.addons) ||\n    // @ts-ignore\n    !!window.opera ||\n    navigator.userAgent.indexOf(\" OPR/\") >= 0\n  ) {\n    browser = \"Opera\";\n\n    // @ts-ignore\n  } else if (typeof InstallTrigger !== \"undefined\") {\n    browser = \"Firefox\";\n    // @ts-ignore\n  } else if (\n    // @ts-ignore\n    /constructor/i.test(window.HTMLElement) ||\n    (function (p) {\n      return p.toString() === \"[object SafariRemoteNotification]\";\n    })(\n      // @ts-ignore\n      !window[\"safari\"] ||\n        // @ts-ignore\n        (typeof safari !== \"undefined\" && safari.pushNotification)\n    )\n  ) {\n    browser = \"Safari\";\n  } else if (isIE) {\n    browser = \"Internet Explorer\";\n    // @ts-ignore\n  } else if (!isIE && !!window.StyleMedia) {\n    browser = \"Edge\";\n    // @ts-ignore\n  } else if (\n    // @ts-ignore\n    !!window.chrome &&\n    // @ts-ignore\n    (!!window.chrome.webstore || !!window.chrome.runtime)\n  ) {\n    browser = \"Chrome\";\n  } else {\n    browser = \"Unknown browser\";\n  }\n  return browser;\n}\n","import { useCallback, useMemo, useState } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { DecisionPoint } from \"../hooks/useGameData\";\nimport useLogGameEvent from \"../hooks/useLogGameEvent\";\nimport { useGotoMenu } from \"../util\";\nimport \"./Decision.scss\";\n\ninterface iProps {\n  decisionPoint: DecisionPoint;\n  onOptionChosen: (option: number, label: string) => void;\n}\n\nconst Decision: React.FC<iProps> = ({ decisionPoint, onOptionChosen }) => {\n  const history = useHistory();\n  const { game_id } = useParams<{ game_id: string }>();\n\n  const logGameEvent = useLogGameEvent();\n  const gotoMenu = useGotoMenu();\n\n  const dp = decisionPoint;\n\n  logGameEvent(\"\", \"show\", \"question\", dp.message, \"\");\n\n  const [randomizedOptions] = useState(dp.options); // TODO shuffle these\n\n  const optionBoxes = useMemo(() => {\n    return randomizedOptions.map((opt) => {\n      const chooseOption = () => onOptionChosen(opt.next, opt.label);\n\n      return (\n        <li\n          key={opt.label}\n          className=\"option\"\n          ng-repeat=\"opt in randomizedOptions\"\n        >\n          <button onClick={chooseOption}>{opt.label}</button>\n        </li>\n      );\n    });\n  }, [randomizedOptions, onOptionChosen]);\n\n  const replayVideo = useCallback(() => {\n    /*gtag('event', 'video_replayed', {\n      'event_category': 'video',\n      'event_label': $scope.dp.data,\n      'value': $scope.dp.id\n    });*/\n    logGameEvent(\"\", \"replay\", \"video\", dp.data, dp.id);\n    history.push(`/games/${game_id}/video`);\n  }, [dp.data, dp.id, history, logGameEvent, game_id]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"left controls\">\n        <button className=\"button button--menu\" onClick={replayVideo}>\n          <FormattedMessage\n            id=\"General.replay\"\n            defaultMessage=\"Replay\"\n            description=\"Replay Video Button\"\n          />\n        </button>\n      </div>\n      <div className=\"right controls\">\n        <button className=\"button button--menu\" onClick={gotoMenu}>\n          <FormattedMessage\n            id=\"General.menu\"\n            defaultMessage=\"Menu\"\n            description=\"Go To Menu Button\"\n          />\n        </button>\n      </div>\n      <div className=\"question\" tabIndex={0}>\n        <div className=\"vertical_outer\">\n          <div className=\"vertical_inner\">{dp?.message}</div>\n        </div>\n      </div>\n      <ul className=\"option_box cf\">{optionBoxes}</ul>\n    </div>\n  );\n};\n\nexport default Decision;\n","import { useEffect, useCallback, useRef } from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport videojs from \"video.js\";\nimport Player from \"@vimeo/player\";\n\nimport { DecisionPoint } from \"../hooks/useGameData\";\n\nimport \"./Video.scss\";\nimport useLogGameEvent from \"../hooks/useLogGameEvent\";\nimport { FormattedMessage } from \"react-intl\";\nimport { useGotoMenu } from \"../util\";\n\ninterface iProps {\n  decisionPoint: DecisionPoint;\n  onVideoFinished: () => void;\n  videoposition: number;\n  setVideoposition: (t: number) => void;\n  subtitlesEnabled: boolean;\n  onSubtitlesToggled: (enabled: boolean) => void;\n}\n\nconst Video: React.FC<iProps> = ({\n  decisionPoint: dp,\n  onVideoFinished,\n  videoposition,\n  setVideoposition,\n  subtitlesEnabled,\n  onSubtitlesToggled,\n}) => {\n  const location = useLocation();\n  const history = useHistory();\n  const logGameEvent = useLogGameEvent();\n\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const iframeRef = useRef<HTMLIFrameElement>(null);\n  const gotoMenu = useGotoMenu();\n\n  const skipVideo = useCallback(() => {\n    let time = undefined;\n\n    if (dp?.video?.vimeo_url) {\n    } else if (videoRef.current) {\n      var api = videojs(videoRef.current);\n      api.dispose();\n      time = api?.currentTime();\n    }\n\n    onVideoFinished();\n    logGameEvent(\"\", \"skip\", \"video\", dp?.data, time);\n  }, [dp, logGameEvent, onVideoFinished]);\n\n  useEffect(() => {\n    if (dp && !dp?.video?.vimeo_url) skipVideo();\n  }, [dp, skipVideo]);\n\n  useEffect(() => {\n    const handleUserKeyPress = (e: KeyboardEvent) => {\n      const video = videoRef.current;\n      if (video) {\n        var api = videojs(video);\n        switch (e.keyCode) {\n          case 27:\n            e.preventDefault();\n            if (location.pathname !== \"/\") {\n              if (api && typeof api.currentTime() != \"undefined\") {\n                setVideoposition(api.currentTime());\n              }\n              history.push(`/`);\n            } else {\n              history.goBack();\n            }\n            break;\n          case 32:\n            e.preventDefault();\n            if (api) {\n              if (api.paused()) {\n                api.play();\n              } else {\n                api.pause();\n              }\n            }\n            break;\n          case 33:\n            if (api) {\n              api.currentTime(api.currentTime() - 10);\n              api.play();\n            }\n            break;\n          case 34:\n            if (api) {\n              api.currentTime(api.currentTime() + 10);\n              api.play();\n            }\n            break;\n          default:\n            break;\n        }\n      }\n    };\n    window.addEventListener(\"keydown\", handleUserKeyPress);\n    return () => {\n      window.removeEventListener(\"keydown\", handleUserKeyPress);\n    };\n  }, [history, location.pathname, setVideoposition]);\n\n  useEffect(() => {\n    if (videoRef.current && dp) {\n      const api = videojs(videoRef.current);\n      const clip = {\n        bufferLength: 0,\n        sources: [\n          {\n            type: \"video/mp4\",\n            src: \"_/vid/mp4/\" + dp?.data + \".mp4\",\n          },\n        ],\n        subtitles: [\n          {\n            kind: \"subtitles\",\n            srclang: \"en\",\n            label: \"English\",\n            src: \"_/vid/vtt/en/\" + dp?.data + \".vtt\",\n          },\n        ],\n      };\n      console.log(\"video source\", clip.sources[0].src);\n\n      api.src(clip.sources[0].src);\n\n      // @ts-ignore\n      api.ready((api): void => {\n        if (videoposition > 0) {\n          api.currentTime(videoposition);\n        }\n        api?.play();\n        logGameEvent(\"\", \"start\", \"video\", dp?.data, \"\");\n      });\n\n      api.on(\"progress\", function (e: unknown) {\n        setVideoposition(api.currentTime());\n      });\n\n      api.on(\"pause\", function (e: unknown) {\n        if (api.duration() > api.currentTime() + 0.5) {\n          logGameEvent(\"\", \"pause\", \"video\", dp?.data, api.currentTime());\n        }\n      });\n\n      api.on(\"click\", function togglePause() {\n        var doc = document.getElementById(\"pause\");\n\n        if (api.paused()) {\n          if (doc) {\n            doc.style.display = \"none\";\n          }\n          api.play();\n        } else {\n          if (doc) {\n            doc.style.display = \"block\";\n          }\n          api.pause();\n        }\n      });\n\n      //@ts-ignore\n      api.on(\"ended\", function (e) {\n        skipVideo();\n        logGameEvent(\"\", \"finish\", \"video\", dp?.data, \"\");\n      });\n\n      //@ts-ignore\n      api.on(\"error\", function (e) {\n        console.log(e);\n        logGameEvent(\"\", \"error\", \"video\", dp?.data, \"\");\n      });\n\n      api.load();\n    }\n  }, [dp, skipVideo, logGameEvent, setVideoposition, videoposition]);\n\n  useEffect(() => {\n    if (iframeRef.current) {\n      console.log(\"Setting vimeo listeners\");\n\n      const player = new Player(iframeRef.current);\n      player.on(\"loaded\", () => {\n        player.setCurrentTime(videoposition);\n      });\n      return () => player.off(\"loaded\");\n    }\n    // Disable exhaustive deps so this hook only gets called on initial render\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (iframeRef.current) {\n      console.log(\"Setting vimeo listeners\");\n\n      const player = new Player(iframeRef.current);\n      player.on(\"timeupdate\", (data: { seconds: number }) => {\n        console.log(`Progress ${data.seconds}`);\n        setVideoposition(data.seconds);\n      });\n\n      player.on(\"ended\", () => {\n        console.log(\"vimeo ended\");\n        skipVideo();\n        logGameEvent(\"\", \"finish\", \"video\", dp.data, \"\");\n      });\n\n      player.on(\"texttrackchange\", (data: { language: string | null }) => {\n        onSubtitlesToggled(!!data.language);\n      });\n\n      return () => {\n        player.off(\"timeupdate\");\n        player.off(\"ended\");\n        player.off(\"texttrackchange\");\n      };\n    }\n  }, [setVideoposition, dp.data, logGameEvent, skipVideo, onSubtitlesToggled]);\n\n  useEffect(() => {\n    if (iframeRef.current) {\n      const player = new Player(iframeRef.current);\n      if (subtitlesEnabled) {\n        player.enableTextTrack(\"en\");\n      } else {\n        player.disableTextTrack();\n      }\n    }\n  }, [subtitlesEnabled]);\n\n  return (\n    <div className=\"video\">\n      <div className=\"right controls\">\n        <button className=\"button button--menu\" onClick={gotoMenu}>\n          <FormattedMessage\n            id=\"General.menu\"\n            defaultMessage=\"Menu\"\n            description=\"Go To Menu Button\"\n          />\n        </button>\n      </div>\n      <div id=\"player\" className=\"videoplayer functional\">\n        {dp?.video &&\n          (dp.video.vimeo_url ? (\n            <iframe\n              ref={iframeRef}\n              // style={{height: (iframeRef.current?.scrollWidth ?? 600) * 9/16}}\n              src={dp.video.vimeo_url + `?autoplay=1`}\n              frameBorder={0}\n              allow=\"autoplay; texttrack; fullscreen; picture-in-picture\"\n              allowFullScreen\n              title=\"SG4_DP1_0\"\n            ></iframe>\n          ) : (\n            <video\n              ref={videoRef}\n              id=\"vid-player\"\n              className=\"video-js vjs-big-play-centered\"\n            >\n              Please use a different browser\n            </video>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Video;\n","import { FormattedMessage } from \"react-intl\";\nimport { Link } from \"react-router-dom\";\nimport \"./Credits.scss\";\n\ninterface iProps {\n  strings: {\n    paragraphs: string[];\n    credits_sections: {\n      header: string;\n      items: string[];\n    }[];\n    end_paragraphs: string[];\n  };\n}\n\nconst Credits: React.FC<iProps> = ({\n  strings: { paragraphs, credits_sections, end_paragraphs },\n}) => {\n  console.log(\"CREDITOS\");\n  console.log(credits_sections);\n  return (\n    <div className=\"container\">\n      <div className=\"panel credits\">\n        <header>\n          <h1>\n            <Link to=\"/\" aria-label=\"Return to menu\">\n              <span className=\"icon-arrow-left\"></span>\n            </Link>\n            <FormattedMessage\n              id=\"Credits.title\"\n              defaultMessage=\"Credits\"\n              description=\"credits title\"\n            />\n          </h1>\n        </header>\n        <div className=\"main\">\n          <div className=\"content cf\">\n            {paragraphs.map((paragraph) => (\n              <p>{paragraph}</p>\n            ))}\n            {credits_sections.map(({ header, items }) => (\n              <>\n                <h2>{header}</h2>\n                <ul>\n                  {items.map((item) => (\n                    <li>{item}</li>\n                  ))}\n                </ul>\n              </>\n            ))}\n            {end_paragraphs.map((end_paragraph) => (\n              <p>{end_paragraph}</p>\n            ))}\n            <h2>Content Providers</h2>\n            <ul>\n              <li>Margaret Verkuyl NP:PHC, MN</li>\n              <li>Dr. Jennifer Lapum, RN, PhD</li>\n              <li>Dr. Oona St-Amant RN, PhD </li>\n              <li>Behi Nikaiin RN MScN</li>\n              <li>Michelle Hughes RN, MEd</li>\n              <li>Dr. Paula Mastrilli RN, PhD</li>\n              <li>Dr. Daria Romaniuk RN, PhD</li>\n              <li>Lorraine Betts RN, MN</li>\n            </ul>\n            <h2>Cast</h2>\n            <ul>\n              <li>Karen Lee</li>\n              <li>Sarah Winstanley</li>\n            </ul>\n\n            <h2>Project Coordination</h2>\n            <ul>\n              <li>Lars Svekis</li>\n              <li>Sushila Parikh</li>\n            </ul>\n            <h2>Game Design & Development</h2>\n            <ul>\n              <li>Igor Karasyov</li>\n              <li>Lucas Michalski</li>\n            </ul>\n            <h2>Video Production</h2>\n            <ul>\n              <li>Daniil Novikov</li>\n              <li>Ilya Emilianov</li>\n              <li>Arseniy Semin</li>\n              <li>Cassandra Ferworn</li>\n              <li>Kelvin Kong</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Credits;\n","import { Link } from \"react-router-dom\";\nimport \"./Instructions.scss\";\n\ninterface iProps {\n  minSteps: number;\n  strings: {\n    paragraph: string;\n    bullet_list: string[];\n  };\n}\n\nconst Instructions: React.FC<iProps> = ({ minSteps, strings }) => {\n  return (\n    <div className=\"container\">\n      <div className=\"panel info\">\n        <header>\n          <h1>\n            <Link to=\"/\" aria-label=\"Return to menu\">\n              <span className=\"icon-arrow-left\"></span>\n            </Link>{\" \"}\n            How to Play\n          </h1>\n        </header>\n        <div className=\"main\">\n          <div className=\"content cf\">\n            <p>{strings.paragraph}</p>\n            <ul>\n              {strings.bullet_list.map((list_item) => (\n                <li>{list_item}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Instructions;\n","import { useCallback } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { useHistory, useParams } from \"react-router\";\nimport { DecisionPoint } from \"../hooks/useGameData\";\nimport \"./Feedback.scss\";\n\ninterface iProps {\n  decisionPoint: DecisionPoint;\n}\n\nconst Feedback: React.FC<iProps> = ({ decisionPoint: dp }) => {\n  const history = useHistory();\n  const { game_id } = useParams<{ game_id: string }>();\n\n  const goNext = useCallback(() => {\n    switch (dp?.type) {\n      case \"video\":\n        history.push(`/games/${game_id}/decision/`);\n        break;\n      case \"lo\":\n        history.push(`/games/${game_id}/lo/`);\n        break;\n    }\n  }, [dp?.type, history, game_id]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"panel feedback\" role=\"alert\">\n        <header>\n          <FormattedMessage\n            id=\"Feedback.title\"\n            defaultMessage=\"Feedback\"\n            description=\"feedback title\"\n            tagName=\"h1\"\n          />\n        </header>\n        <div className=\"main\">{dp?.feedback}</div>\n        <footer>\n          <p className=\"controls\">\n            <button className=\"button\" onClick={goNext}>\n              <FormattedMessage\n                id=\"General.resume\"\n                defaultMessage=\"Resume Game\"\n                description=\"resume game button\"\n              />\n            </button>\n          </p>\n        </footer>\n      </div>\n    </div>\n  );\n};\n\nexport default Feedback;\n","//////////////////////////////////////////////////\n// Cookies + State, it's messy here\n//////////////////////////////////////////////////\n\nvar maxAge = 21 * 24 * 60;\n\nfunction isLocalStorageAvailable() {\n  var str = \"test\";\n  try {\n    localStorage.setItem(str, str);\n    localStorage.removeItem(str);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport const cookies = {\n  put(key: string, value: string, maxCookieAge: number = maxAge) {\n    var cookie = `${key}=${value};path=/;max-age=${maxCookieAge};`;\n    console.log(cookie);\n    document.cookie = cookie;\n  },\n  get(cname: string): string | null {\n    let name = cname + \"=\";\n    let decodedCookie = decodeURIComponent(document.cookie);\n    let ca = decodedCookie.split(\";\");\n    for (let i = 0; i < ca.length; i++) {\n      let c = ca[i];\n      while (c.charAt(0) === \" \") {\n        c = c.substring(1);\n      }\n      if (c.indexOf(name) === 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n    return null;\n  },\n  remove(key: string) {\n    this.put(key, \"\", -1);\n  },\n};\n\nexport const VHEStorage = {\n  set: function (key: string, value: string) {\n    if (isLocalStorageAvailable()) {\n      window.localStorage.setItem(key, value);\n    } else {\n      cookies.put(key, value, maxAge);\n    }\n  },\n  get: function (key: string): string | null {\n    var r = isLocalStorageAvailable()\n      ? window.localStorage.getItem(key)\n      : cookies.get(key);\n    return r;\n  },\n  setObject: function (key: string, value: any) {\n    const o = JSON.stringify(value);\n    if (isLocalStorageAvailable()) {\n      window.localStorage.setItem(key, o);\n    } else {\n      cookies.put(key, o, maxAge);\n    }\n  },\n  getObject: function (key: string) {\n    var r = isLocalStorageAvailable()\n      ? window.localStorage.getItem(key)\n      : cookies.get(key);\n    return r ? JSON.parse(r) : false;\n  },\n  remove: function (key: string) {\n    if (isLocalStorageAvailable()) {\n      window.localStorage.removeItem(key);\n    } else {\n      cookies.remove(key);\n    }\n  },\n};\n\nconst useStorage = () => {\n  return VHEStorage;\n};\n\nexport default useStorage;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Link } from \"react-router-dom\";\nimport { cookies } from \"../hooks/useStorage\";\nimport \"./Settings.scss\";\n\ninterface iProps {\n  subtitlesEnabled: boolean;\n  onSubtitlesToggled: (enabled: boolean) => void;\n}\n\nconst Settings: React.FC<iProps> = ({\n  subtitlesEnabled,\n  onSubtitlesToggled,\n}) => {\n  const [isFullscreen, setIsFullscreen] = useState<boolean>(\n    !!document.fullscreenElement\n  );\n\n  const handleSubtitlesChange = useCallback(\n    (evt: React.ChangeEvent<HTMLInputElement>) => {\n      onSubtitlesToggled(evt.target.value === \"on\");\n    },\n    [onSubtitlesToggled]\n  );\n\n  const handleFullscreenChange = useCallback(\n    (evt: React.ChangeEvent<HTMLInputElement>) => {\n      if (!document.fullscreenElement && evt.target.value === \"on\") {\n        document.documentElement\n          .requestFullscreen()\n          .then(() => setIsFullscreen(true))\n          .catch((err) => {\n            alert(\n              `Error attempting to enable full-screen mode: ${err.message} (${err.name})`\n            );\n          });\n      } else if (document.fullscreenElement && evt.target.value === \"off\") {\n        if (document.exitFullscreen) {\n          document.exitFullscreen().then(() => setIsFullscreen(false));\n        }\n      }\n    },\n    []\n  );\n\n  useEffect(() => {\n    const handleFullscreenChange = () => {\n      // document.fullscreenElement will point to the element that\n      // is in fullscreen mode if there is one. If there isn't one,\n      // the value of the property is null.\n      setIsFullscreen(!!document.fullscreenElement);\n      if (document.fullscreenElement) {\n        console.log(\n          `Element: ${document.fullscreenElement.id} entered full-screen mode.`\n        );\n      } else {\n        console.log(\"Leaving full-screen mode.\");\n      }\n    };\n    document.addEventListener(\"fullscreenchange\", handleFullscreenChange);\n\n    return () =>\n      document.removeEventListener(\"fullscreenchange\", handleFullscreenChange);\n  }, []);\n\n  const locale = useIntl().locale;\n  const handleSetEnglish = useCallback(() => {\n    cookies.put(\"locale\", \"en\");\n    document.location.reload();\n  }, []);\n  const handleSetFrench = useCallback(() => {\n    cookies.put(\"locale\", \"fr\");\n    document.location.reload();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <div className=\"panel settings\">\n        <header>\n          <h1>\n            <Link to=\"../\" aria-label=\"Return to menu\">\n              <span className=\"icon-arrow-left\"></span>\n            </Link>{\" \"}\n            Options\n          </h1>\n        </header>\n        <div className=\"main\">\n          <div className=\"content\">\n            <div className=\"cf\">\n              <h2>\n                <FormattedMessage\n                  id=\"Options.display\"\n                  defaultMessage=\"Display\"\n                  description=\"Display Header\"\n                />\n              </h2>\n              <div className=\"radio\">\n                <div>\n                  <input\n                    type=\"radio\"\n                    name=\"display_mode\"\n                    id=\"mode_window\"\n                    value=\"off\"\n                    checked={!isFullscreen}\n                    onChange={handleFullscreenChange}\n                  />\n                  <label htmlFor=\"mode_window\" aria-checked={!isFullscreen}>\n                    Window\n                  </label>\n                </div>\n                <div>\n                  <input\n                    type=\"radio\"\n                    name=\"display_mode\"\n                    id=\"mode_fullscreen\"\n                    value=\"on\"\n                    checked={isFullscreen}\n                    onChange={handleFullscreenChange}\n                  />\n                  <label htmlFor=\"mode_fullscreen\" aria-checked={isFullscreen}>\n                    <FormattedMessage\n                      id=\"Options.full_screen\"\n                      defaultMessage=\"Full Screen\"\n                      description=\"full screen button\"\n                    />\n                  </label>\n                </div>\n              </div>\n            </div>\n            <br />\n            <div className=\"cf\">\n              <h2>\n                <FormattedMessage\n                  id=\"Options.subtitles\"\n                  defaultMessage=\"Subtitles\"\n                  description=\"subtitles button\"\n                />\n              </h2>\n              <div className=\"radio\">\n                <div>\n                  <input\n                    type=\"radio\"\n                    name=\"subtitles\"\n                    id=\"subtitles_off\"\n                    value=\"off\"\n                    checked={!subtitlesEnabled}\n                    onChange={handleSubtitlesChange}\n                  />\n                  <label\n                    htmlFor=\"subtitles_off\"\n                    aria-checked={!subtitlesEnabled}\n                  >\n                    <FormattedMessage\n                      id=\"Options.subtitles_off\"\n                      defaultMessage=\"Off\"\n                      description=\"subtitles off button\"\n                    />\n                  </label>\n                </div>\n                <div>\n                  <input\n                    type=\"radio\"\n                    name=\"subtitles\"\n                    id=\"subtitles_en\"\n                    value=\"on\"\n                    checked={subtitlesEnabled}\n                    onChange={handleSubtitlesChange}\n                  />\n                  <label htmlFor=\"subtitles_en\" aria-checked={subtitlesEnabled}>\n                    <FormattedMessage\n                      id=\"Options.subtitles_on\"\n                      defaultMessage=\"On\"\n                      description=\"subtitles on button\"\n                    />\n                  </label>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"cf\">\n              <h2>Language:</h2>\n              <div className=\"radio\">\n                <div>\n                  <input\n                    type=\"radio\"\n                    name=\"english\"\n                    id=\"lang_en\"\n                    value=\"english\"\n                    checked={locale.startsWith(\"en\")}\n                    onChange={handleSetEnglish}\n                  />\n                  <label\n                    htmlFor=\"lang_en\"\n                    aria-checked={locale.startsWith(\"en\")}\n                  >\n                    <FormattedMessage\n                      id=\"Options.language_en\"\n                      defaultMessage=\"Englsih\"\n                      description=\"english language button\"\n                    />\n                  </label>\n                </div>\n                <div>\n                  <input\n                    type=\"radio\"\n                    name=\"french\"\n                    id=\"lang_fr\"\n                    value=\"on\"\n                    checked={locale.startsWith(\"fr\")}\n                    onChange={handleSetFrench}\n                  />\n                  <label\n                    htmlFor=\"lang_fr\"\n                    aria-checked={locale.startsWith(\"fr\")}\n                  >\n                    <FormattedMessage\n                      id=\"Options.language_fr\"\n                      defaultMessage=\"French\"\n                      description=\"french language button\"\n                    />\n                  </label>\n                </div>\n              </div>\n            </div>\n\n            {/* <!--<br>\n\t\t\t\t<div className=\"cf\">\n\t\t\t\t\t<h2>Video Quality:</h2>\n\t\t\t\t\t<div className=\"radio\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<input type=\"radio\" name=\"quality\" id=\"quality_720p\"\n\t\t\t\t\t\t\t\tng-model=\"sg.quality\"\n\t\t\t\t\t\t\t\tng-value=\"'-720p'\"\n\t\t\t\t\t\t\t\tng-change=\"saveState()\"/> \n\t\t\t\t\t\t\t<label for=\"quality_720p\">High (720p)</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<input type=\"radio\" name=\"quality\" id=\"quality_360p\"\n\t\t\t\t\t\t\t\tng-model=\"sg.quality\"\n\t\t\t\t\t\t\t\tng-value=\"''\"\n\t\t\t\t\t\t\t\tng-change=\"saveState()\"/> \n\t\t\t\t\t\t\t<label for=\"quality_360p\">Low (360p)</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>--> */}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Settings;\n","import { useMemo } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { useGotoMenu } from \"../util\";\nimport \"./Summary.scss\";\nimport {\n  PDFDownloadLink,\n  Document,\n  Page,\n  Text,\n  Link,\n  View,\n} from \"@react-pdf/renderer\";\nimport { Font } from \"@react-pdf/renderer\";\n\nimport { Link as Lonk } from \"react-router-dom\";\nimport useLogGameEvent from \"../hooks/useLogGameEvent\";\nimport { DecisionPoint } from \"../hooks/useGameData\";\n\nconst Roboto = require(\"../fnt/Roboto-Regular.ttf\").default as string;\n\nFont.register({\n  family: \"Roboto\",\n  format: \"truetype\",\n  src: Roboto,\n});\n\ninterface iProps {\n  decisionPoints: DecisionPoint[];\n  gameProgress: { id: number; label: string; option: number }[];\n  completed: boolean;\n}\n\nconst Summary: React.FC<iProps> = ({\n  gameProgress,\n  decisionPoints,\n  completed,\n}) => {\n  const logGameEvent = useLogGameEvent();\n\n  // const [progress, setProgress] = useState([])\n\n  const goToMenu = useGotoMenu();\n\n  let progress: { question: string; answer: string; correct: boolean }[] =\n    useMemo(() => {\n      let progress = [];\n      var i;\n      for (i = 0; i < gameProgress.length; i++) {\n        const dp = gameProgress[i];\n        const current = decisionPoints.find(({ id }) => id === dp.id)!;\n        const next = decisionPoints.find(({ id }) => id === dp.option)!;\n\n        progress.push({\n          question: current.message,\n          answer: dp.label,\n          correct: next.correct,\n        });\n      }\n      return progress;\n    }, [decisionPoints, gameProgress]);\n\n  let message: JSX.Element;\n\n  if (completed) {\n    const correct_ratio = (\n      progress.filter(({ correct }) => correct).length / progress.length\n    ).toFixed(2);\n\n    logGameEvent(\"\", \"complete\", \"game\", \"\", correct_ratio);\n\n    message = (\n      <>\n        <Text>\n          You have completed the game by answering{\" \"}\n          <Text style={{ fontWeight: \"bold\" }}>\n            {\" \"}\n            {progress.length} questions\n          </Text>\n          .\n        </Text>\n        {progress.length ===\n        decisionPoints.filter(({ correct }) => correct).length ? (\n          <Text>\n            You've demonstrated the best possible result! Now play it one more\n            time to make sure it wasn't mere luck :)\n          </Text>\n        ) : (\n          <Text>\n            {\" \"}\n            However, if you give only correct answers it should only take\n            <Text style={{ fontWeight: \"bold\" }}>\n              {\" \"}\n              {decisionPoints.filter(({ correct }) => correct).length - 1}\n            </Text>{\" \"}\n            questions to complete the scenario. See if you can improve your\n            results next time!{\" \"}\n          </Text>\n        )}\n        <Text>\n          Document this encounter by clicking on the practice documentation\n          icon. There you will find a blank documentation form. Once you are\n          done, compare your documentation to the sample provided.{\" \"}\n        </Text>\n        <Text>\n          If not attending an organized debrief, make sure you download and\n          complete the{\" \"}\n          <Link src={`${window.location.origin}/docs/self-assessment.pdf`}>\n            self-debriefing questions\n          </Link>{\" \"}\n          to optimise your learning experience. Scroll down to view results.\n        </Text>\n      </>\n    );\n  } else {\n    message = (\n      <Text>\n        You have answered{\" \"}\n        <Text style={{ fontWeight: \"bold\" }}> {progress.length} questions</Text>\n        . To finish the game go to menu and resume the gameplay.\n      </Text>\n    );\n  }\n\n  const pdfContent = useMemo(() => {\n    let responses = progress.map((dp, i) => (\n      <View key={i}>\n        <View>\n          <Text style={{ fontWeight: \"bold\" }}>Q: </Text>\n          <Text>{dp.question}</Text>\n        </View>\n        <View>\n          <Text style={{ fontWeight: \"bold\" }}>A: </Text>\n          <Text\n            style={dp.correct ? { color: \"#009933\" } : { color: \"#cc0000\" }}\n          >\n            {dp.answer} ({dp.correct ? \"Correct\" : \"Incorrect\"})\n          </Text>\n        </View>\n      </View>\n    ));\n    const html = (\n      <Document>\n        <Page>\n          {/* <style\n            dangerouslySetInnerHTML={{\n              __html: `html, body { font-family: Helvetica, Arial, sans-serif; font-size: 14px; line-height: 130%; background-color: #ffffff; color: #000;}\n\t\t\t\t\t\t\th1, h2, p, ol { font-weight: normal; margin-top: 0.3em; margin-bottom: 0.3em; padding-top: 0; padding-bottom: 0; line-height: 130%; color: #000; }`,\n            }}\n          /> */}\n          <View\n            style={{\n              fontFamily: \"Roboto\",\n              fontSize: 14,\n              lineHeight: \"130%\",\n              backgroundColor: \"#ffffff\",\n              color: \"#000\",\n            }}\n          >\n            <Text\n              style={{\n                fontSize: 32,\n                paddingBottom: \"0.3em\",\n                borderBottom: \"2px solid #000000\",\n              }}\n            >\n              Emergency Game Report\n            </Text>\n            <Text style={{ fontSize: 24 }}>Summary</Text>\n            <View>{message}</View>\n            <Text style={{ fontSize: 24 }}>Your Responses</Text>\n            <View>{responses}</View>\n          </View>\n        </Page>\n      </Document>\n    );\n    return html;\n  }, [message, progress]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"right controls\">\n        <button className=\"button button--menu\" onClick={goToMenu}>\n          Menu\n        </button>\n      </div>\n      <div className=\"panel info\">\n        <header>\n          <FormattedMessage\n            id=\"Summary.title\"\n            defaultMessage=\"Congratulations!\"\n            description=\"Summary title\"\n            tagName=\"h1\"\n          />\n        </header>\n        <div className=\"main summary\">\n          <div className=\"content\">\n            <div>{message}</div>\n            <h2 style={{ fontSize: 24 }}>Your Answers:</h2>\n            <ol className=\"responses\">\n              {progress.map((dp) => (\n                <li>\n                  <div>{dp.question}</div>\n                  <div\n                    className={dp.correct ? \"correct\" : \"wrong\"}\n                    style={\n                      dp.correct ? { color: \"#009933\" } : { color: \"#cc0000\" }\n                    }\n                  >\n                    <strong>\n                      {dp.answer} ({dp.correct ? \"Correct\" : \"Incorrect\"})\n                    </strong>\n                  </div>\n                </li>\n              ))}\n            </ol>\n          </div>\n        </div>\n        <footer>\n          <PDFDownloadLink\n            className=\"button\"\n            document={pdfContent}\n            fileName=\"emergency-progress.pdf\"\n          >\n            {({ blob, url, loading, error }) =>\n              loading ? \"Loading document...\" : \"Download Progress Report\"\n            }\n          </PDFDownloadLink>\n\n          <Lonk to=\"/materials/\">\n            <FormattedMessage\n              id=\"materials.link\"\n              defaultMessage=\"Practice Materials\"\n              description=\"Link to Practice Materials\"\n            />\n          </Lonk>\n\n          {/* <a href=\"/module/_/ui/game/tpl/materials.html\" className=\"button\">\n            {\" \"}\n            Practice Documentation{\" \"}\n          </a> */}\n        </footer>\n      </div>\n    </div>\n  );\n};\n\nexport default Summary;\n","import { useCallback } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { useHistory, useParams } from \"react-router\";\nimport { DecisionPoint } from \"../hooks/useGameData\";\nimport \"./Transition.scss\";\n\ninterface iProps {\n  decisionPoint: DecisionPoint;\n}\n\nconst Transition: React.FC<iProps> = ({ decisionPoint: dp }) => {\n  const history = useHistory();\n  const { game_id } = useParams<{ game_id: string }>();\n\n  const playNextVideo = useCallback(() => {\n    history.push(`/games/${game_id}/video/`);\n  }, [history, game_id]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"panel feedback\">\n        <header>\n          <FormattedMessage\n            id=\"Transition.title\"\n            defaultMessage=\"Game Paused\"\n            description=\"game paused transition title\"\n            tagName=\"h1\"\n          />\n        </header>\n        <div className=\"main\">{dp?.feedback}</div>\n        <footer>\n          <p className=\"controls\">\n            <button className=\"Link\" onClick={playNextVideo}>\n              Resume Game\n            </button>\n          </p>\n        </footer>\n      </div>\n    </div>\n  );\n};\n\nexport default Transition;\n","import { FormattedMessage } from \"react-intl\";\nimport { useGotoMenu } from \"../util\";\nimport \"./Materials.scss\";\n\nconst Materials: React.FC<{}> = () => {\n  const gotoMenu = useGotoMenu();\n\n  return (\n    <body className=\"documentation-container\">\n      <div className=\"panel feedback\">\n        <header>\n          <FormattedMessage\n            id=\"Materials.title\"\n            defaultMessage=\"Materials\"\n            description=\"Materials title\"\n            tagName=\"h1\"\n          />\n        </header>\n\n        <div className=\"right controls\">\n          <button className=\"button button--menu\" onClick={gotoMenu}>\n            <FormattedMessage\n              id=\"General.menu\"\n              defaultMessage=\"Menu\"\n              description=\"Go To Menu Button\"\n            />\n          </button>\n        </div>\n\n        <footer>\n          <div className=\"content\">\n            <h2>Documentation</h2>\n            <a\n              href=\"/docs/Integrated_Patient_Record.pdf\"\n              className=\"button\"\n              download\n            >\n              Download Template\n            </a>\n            <a\n              href=\"/docs/Integrated_Patient_Record_Sample.pdf\"\n              className=\"button\"\n              download\n            >\n              Download Sample\n            </a>\n            <br />\n            <h2>Self-Debrief</h2>\n            <a href=\"/docs/self-assessment.pdf\" className=\"button\" download>\n              Download\n            </a>\n          </div>\n        </footer>\n      </div>\n    </body>\n  );\n};\n\nexport default Materials;\n","import { FormattedMessage } from \"react-intl\";\nimport { Link } from \"react-router-dom\";\nimport \"./Principles.scss\";\n\ninterface iProps {\n  strings: {\n    paragraph: string;\n    bullet_list: string[];\n  };\n}\n\nconst Principles: React.FC<iProps> = ({ strings }) => {\n  return (\n    <div className=\"container\">\n      <div className=\"panel info\">\n        <header>\n          <h1>\n            <Link to=\"/\" aria-label=\"Return to menu\">\n              <span className=\"icon-arrow-left\"></span>\n            </Link>\n            <FormattedMessage\n              id=\"Principles.title\"\n              defaultMessage=\"Essential Principles\"\n              description=\"Principles title\"\n            />\n          </h1>\n        </header>\n        <div className=\"main\">\n          <div className=\"content cf\">\n            <p>{strings.paragraph}</p>\n            <ul>\n              {strings.bullet_list.map((list_item) => (\n                <li>{list_item}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Principles;\n","import { useEffect, useMemo, useState } from \"react\";\nimport { generateUUID } from \"../util\";\nimport { VHEStorage } from \"./useStorage\";\n\ninterface iGameSave {\n  uuid: string;\n  gamesaved: boolean;\n  subtitles: boolean;\n  fullscreen: boolean;\n  currentStep: number;\n  videoposition: number;\n  progress: {\n    id: number;\n    label: string;\n    option: number;\n  }[];\n}\n\nconst useGameState = (storageKey: string) => {\n  const [loaded] = useState(\n    VHEStorage.getObject(storageKey) as iGameSave | null\n  );\n\n  const [uuid] = useState(loaded?.uuid ?? generateUUID());\n  const [gamesaved, setGamesaved] = useState(loaded?.gamesaved ?? false);\n  const [currentStep, setCurrentStep] = useState(loaded?.currentStep ?? 0);\n  const [videoposition, setVideoposition] = useState(\n    loaded?.videoposition ?? 0\n  );\n  const [progress, setProgress] = useState(loaded?.progress ?? []);\n\n  useEffect(() => {\n    VHEStorage.setObject(storageKey, {\n      uuid,\n      gamesaved,\n      subtitles: false,\n      fullscreen: false,\n      currentStep,\n      videoposition,\n      progress,\n    });\n  }, [uuid, gamesaved, currentStep, videoposition, progress, storageKey]);\n\n  const gameState = useMemo(\n    () => ({\n      newGame: () => {\n        setGamesaved(true);\n        setCurrentStep(0);\n        setVideoposition(0);\n        setProgress([]);\n      },\n      selectOption: (nextId: number, label: string) => {\n        setProgress((ps) => [\n          ...ps,\n          {\n            id: currentStep,\n            label: label,\n            option: nextId,\n          },\n        ]);\n        setCurrentStep(nextId);\n      },\n      currentStep,\n      setCurrentStep,\n      videoposition,\n      setVideoposition,\n      progress,\n      gamesaved,\n    }),\n    [currentStep, gamesaved, progress, videoposition]\n  );\n\n  return gameState;\n};\n\nexport default useGameState;\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\n\nimport { Switch, Route, useHistory, useRouteMatch } from \"react-router-dom\";\nimport { useIntl } from \"react-intl\";\n\nimport Menu from \"./pages/Menu\";\nimport \"./App.scss\";\n\nimport { useGameData } from \"./hooks/useGameData\";\n\nimport Objectives from \"./pages/Objectives\";\nimport Intro from \"./pages/Intro\";\nimport Decision from \"./pages/Decision\";\nimport Video from \"./pages/Video\";\nimport Credits from \"./pages/Credits\";\nimport Instructions from \"./pages/Instructions\";\nimport Feedback from \"./pages/Feedback\";\nimport Settings from \"./pages/Settings\";\nimport Summary from \"./pages/Summary\";\nimport Transition from \"./pages/Transition\";\nimport Materials from \"./pages/Materials\";\nimport Principles from \"./pages/Principles\";\nimport useLogGameEvent from \"./hooks/useLogGameEvent\";\nimport { getBrowser } from \"./util\";\nimport useGameState from \"./hooks/useGameState\";\n\ninterface iProps {\n  gameId: string;\n}\n\nconst App: React.FC<iProps> = ({ gameId }) => {\n  const history = useHistory();\n  let { path, url } = useRouteMatch();\n\n  const logGameEvent = useLogGameEvent();\n  const locale = useIntl().locale;\n\n  const gameData = useGameData(gameId, locale);\n  const gameState = useGameState(gameId);\n  const minSteps = gameData.decisionpoints.filter(\n    ({ correct }) => correct\n  ).length;\n\n  const [subtitlesEnabled, setSubtitlesEnabled] = useState<boolean>(true);\n\n  const lastDecisionPoint =\n    gameData.decisionpoints[gameData.decisionpoints.length - 1].id ===\n    gameState.currentStep;\n\n  const currentDecisionPoint = useMemo(() => {\n    const currentDP = gameData.decisionpoints.find(\n      ({ id }) => id === gameState.currentStep\n    )!;\n    if (!currentDP)\n      console.error(`couldnt find dp for step${gameState.currentStep}`);\n    return currentDP;\n  }, [gameData.decisionpoints, gameState.currentStep]);\n\n  const handleStartNewGame = useCallback(() => {\n    gameState.newGame();\n\n    history.push(`${url}/intro/`);\n    logGameEvent(\"\", \"start\", \"game\", getBrowser(), \"\");\n  }, [url, history, logGameEvent, gameState]);\n\n  const handleResumeGame = useCallback(() => {\n    var dp = currentDecisionPoint;\n\n    if (dp && lastDecisionPoint) {\n      history.push(`${url}/summary/`);\n    } else if (gameState.videoposition > 0.1) {\n      history.push(`${url}/video/`);\n    } else {\n      history.push(`${url}/decision/`);\n    }\n\n    logGameEvent(\"\", \"resume\", \"game\", \"\", \"\");\n  }, [\n    history,\n    logGameEvent,\n    gameState.videoposition,\n    currentDecisionPoint,\n    lastDecisionPoint,\n    url,\n  ]);\n\n  const handleOptionChosen = useCallback(\n    (nextId: number, label: string) => {\n      const next = gameData.decisionpoints.find(({ id }) => id === nextId);\n\n      gameState.selectOption(nextId, label);\n\n      logGameEvent(\n        \"\",\n        \"select\",\n        \"answer\",\n        label,\n        next?.correct ? \"correct\" : \"incorrect\"\n      );\n\n      switch (next?.type) {\n        case \"video\":\n          history.push(`${url}/video/`);\n          break;\n        case \"lo\":\n          if (next.feedback > \"\") {\n            // If there's feedback, show it then advance\n            history.push(`${url}/feedback/`);\n          } else {\n            history.push(`${url}/lo/`);\n          }\n          break;\n      }\n\n      // google analytics ???\n    },\n    [url, gameData.decisionpoints, history, logGameEvent, gameState]\n  );\n\n  const handleVideoFinished = useCallback(() => {\n    const dp = currentDecisionPoint;\n    gameState.setVideoposition(0);\n\n    if (lastDecisionPoint) {\n      history.push(`${url}/summary/`);\n    } else if (dp && dp.options.length > 0) {\n      if (dp.feedback > \"\") {\n        history.push(`${url}/feedback/`);\n      } else {\n        // No feedback means go directly to the decision\n        history.push(`${url}/decision/`);\n      }\n    } else {\n      gameState.setCurrentStep(gameState.currentStep + 1);\n      if (dp?.next) {\n        // If there are no options, go to the next decision point\n        history.push(`${url}/lo/`);\n      } else {\n        history.push(`${url}/transition/`);\n      }\n    }\n  }, [currentDecisionPoint, history, lastDecisionPoint, gameState, url]);\n\n  useEffect(() => {\n    Object.entries(gameData.colors).forEach(\n      ([key, value]: [string, string]) => {\n        document.body.style.setProperty(key, value);\n      }\n    );\n  }, [gameData.colors]);\n\n  return (\n    <div className=\"fullscreen\" style={gameData.colors as React.CSSProperties}>\n      <div className=\"view\" role=\"application\">\n        <Switch>\n          <Route path={`${path}/credits`}>\n            <Credits strings={gameData.strings.credits} />\n          </Route>\n\n          <Route path={`${path}/decision`}>\n            <Decision\n              decisionPoint={currentDecisionPoint}\n              onOptionChosen={handleOptionChosen}\n            />\n          </Route>\n\n          <Route path={`${path}/feedback`}>\n            <Feedback decisionPoint={currentDecisionPoint} />\n          </Route>\n\n          <Route path={`${path}/instructions`}>\n            <Instructions\n              minSteps={minSteps}\n              strings={gameData.strings.instructions}\n            />\n          </Route>\n\n          <Route path={`${path}/intro`}>\n            <Intro strings={gameData.strings.intro} />\n          </Route>\n\n          <Route path={`${path}/materials`}>\n            <Materials />\n          </Route>\n\n          <Route path={`${path}/objectives`}>\n            <Objectives strings={gameData.strings.objectives} />\n          </Route>\n\n          {gameData.strings.principles ? (\n            <Route path={`${path}/principles`}>\n              <Principles strings={gameData.strings.principles} />\n            </Route>\n          ) : null}\n\n          <Route path={`${path}/settings`}>\n            <Settings\n              subtitlesEnabled={subtitlesEnabled}\n              onSubtitlesToggled={setSubtitlesEnabled}\n            />\n          </Route>\n\n          <Route path={`${path}/summary`}>\n            <Summary\n              decisionPoints={gameData.decisionpoints}\n              gameProgress={gameState.progress}\n              completed={lastDecisionPoint}\n            />\n          </Route>\n\n          <Route path={`${path}/transition`}>\n            <Transition decisionPoint={currentDecisionPoint} />\n          </Route>\n\n          <Route path={`${path}/video`}>\n            <Video\n              decisionPoint={currentDecisionPoint}\n              onVideoFinished={handleVideoFinished}\n              videoposition={gameState.videoposition}\n              setVideoposition={gameState.setVideoposition}\n              subtitlesEnabled={subtitlesEnabled}\n              onSubtitlesToggled={setSubtitlesEnabled}\n            />\n          </Route>\n\n          <Route path={`${path}/lo`}>Somethings going on here, I swear</Route>\n\n          <Route path={`${path}/`}>\n            <Menu\n              strings={gameData.strings.menu}\n              startNewGame={handleStartNewGame}\n              resumeGame={handleResumeGame}\n              gamesaved={gameState.gamesaved}\n              pagesToShow={{\n                principles: !!gameData.strings.principles,\n              }}\n            />\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { FormattedMessage } from \"react-intl\";\nimport { Link } from \"react-router-dom\";\nimport \"./Menu.scss\";\n\ninterface iProps {}\n\nconst Home: React.FC<iProps> = () => {\n  return (\n    <div className=\"container\">\n      <div className=\"panel menu\">\n        <header>\n          <FormattedMessage\n            id=\"Home.title\"\n            defaultMessage=\"Virtual Healthcare Experence\"\n            description=\"Title for homepage\"\n            tagName=\"h1\"\n          />\n        </header>\n        <div className=\"main\">\n          <div className=\"content\">\n            <ul className=\"controls\">\n              <li>\n                <Link to=\"/games/emergency\">\n                  <FormattedMessage\n                    id=\"Home.emergency\"\n                    defaultMessage=\"Emergency Room\"\n                    description=\"Name for emergency game\"\n                  />\n                </Link>\n              </li>\n              <li>\n                <Link to=\"./games/post_partum\">\n                  <FormattedMessage\n                    id=\"Home.postPartum_fr\"\n                    defaultMessage=\"Post Partum FR\"\n                    description=\"Post Partum Francais game name\"\n                  />\n                </Link>\n              </li>\n              <li>\n                <Link to=\"./games/labor_delivery\">\n                  <FormattedMessage\n                    id=\"Home.labor_delivery_fr\"\n                    defaultMessage=\"Labor and Delivery FR\"\n                    description=\"Labor and Delivery Francais game name\"\n                  />\n                </Link>\n              </li>\n              <li>\n                <Link to=\"./games/prenatal_fr\">\n                  <FormattedMessage\n                    id=\"Home.prenatal_fr\"\n                    defaultMessage=\"Prenatal Care FR\"\n                    description=\"Prenatal Care Francais game name\"\n                  />\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { IntlProvider } from \"react-intl\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { LoggingContextProvider } from \"./hooks/useLogGameEvent\";\n\nimport enMessages from \"./lang-compiled/en.json\";\nimport frMessages from \"./lang-compiled/fr.json\";\nimport Home from \"./pages/Home\";\nimport { cookies } from \"./hooks/useStorage\";\n\nconst savedLocale = cookies.get(\"locale\");\nconst locale =\n  savedLocale === \"fr\" || navigator.languages[0].startsWith(\"fr\") ? \"fr\" : \"en\";\nconst messages = locale === \"fr\" ? frMessages : enMessages;\n\nReactDOM.render(\n  <React.StrictMode>\n    <IntlProvider messages={messages} locale={locale} defaultLocale=\"en\">\n      <Router basename=\"/\">\n        <LoggingContextProvider>\n          <Switch>\n            <Route path=\"/games/:game_id\">\n              {(params) => <App gameId={params.match?.params.game_id!} />}\n            </Route>\n            <Route>\n              <Home />\n            </Route>\n          </Switch>\n        </LoggingContextProvider>\n      </Router>\n    </IntlProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}